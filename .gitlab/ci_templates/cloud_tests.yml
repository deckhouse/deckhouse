.Cloud layouts Tests template for docker:
  stage: cloud_testing_docker
  before_script: &before_script
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script: &script
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - mkdir -p layouts-tests-tmp
  - mkdir "/mnt/cloud-layouts/layouts/${CI_JOB_ID}"
  - |
    werf run dev/install --dev --docker-options="-e DECKHOUSE_DOCKERCFG=${LAYOUT_DECKHOUSE_DOCKERCFG} -e PREFIX=${CI_JOB_ID} -e DEV_BRANCH=${CI_COMMIT_REF_NAME} -e KUBERNETES_VERSION=${KUBERNETES_VERSION} -e CRI=${CRI} \
      -e PROVIDER=${PROVIDER:-not_provided} -e LAYOUT=${LAYOUT:-not_provided} -e SSH_KEY=${LAYOUT_SSH_KEY:-not_provided} \
      -e LAYOUT_YANDEX_CLOUD_ID=${LAYOUT_YANDEX_CLOUD_ID:-not_provided} -e LAYOUT_YANDEX_FOLDER_ID=${LAYOUT_YANDEX_FOLDER_ID:-not_provided} -e LAYOUT_YANDEX_SERVICE_ACCOUNT_KEY_JSON=${LAYOUT_YANDEX_SERVICE_ACCOUNT_KEY_JSON:-not_provided} \
      -e LAYOUT_GCP_SERVICE_ACCOUT_KEY_JSON=${LAYOUT_GCP_SERVICE_ACCOUT_KEY_JSON:-not_provided} \
      -e LAYOUT_AWS_ACCESS_KEY=${LAYOUT_AWS_ACCESS_KEY:-not_provided} -e LAYOUT_AWS_SECRET_ACCESS_KEY=${LAYOUT_AWS_SECRET_ACCESS_KEY:-not_provided} \
      -e LAYOUT_AZURE_SUBSCRIPTION_ID=${LAYOUT_AZURE_SUBSCRIPTION_ID:-not_provided} -e LAYOUT_AZURE_CLIENT_ID=${LAYOUT_AZURE_CLIENT_ID:-not_provided} -e LAYOUT_AZURE_CLIENT_SECRET=${LAYOUT_AZURE_CLIENT_SECRET:-not_provided} -e LAYOUT_AZURE_TENANT_ID=${LAYOUT_AZURE_TENANT_ID:-not_provided} \
      -e LAYOUT_OS_PASSWORD=${LAYOUT_OS_PASSWORD:-not_provided} \
      -v $(pwd)/testing:/deckhouse/testing -v /mnt/cloud-layouts/layouts/${CI_JOB_ID}:/tmp --user 999:999 -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro \
      -v /etc/shadow:/etc/shadow:ro -w /deckhouse" -- bash /deckhouse/testing/cloud_layouts/script.sh
  after_script: &after_script
  - |
    if [[ ("$CI_COMMIT_REF_NAME" == "main") && ("$CI_JOB_STATUS" == "failed" || "$CI_JOB_STATUS" == "canceled") ]]; then
      curl -sS -X "POST" "https://madison.flant.com/api/events/custom/${CLOUD_LAYOUT_TESTS_MADISON_KEY}" \
        -H 'Content-Type: application/json' \
        -d "{
        \"labels\": {
          \"severity_level\": 7,
          \"trigger\": \"CloudLayoutTestFailed\",
          \"provider\": \"$PROVIDER\",
          \"layout\": \"$LAYOUT\",
          \"cri\": \"$CRI\",
          \"kubernetes_version\": \"$KUBERNETES_VERSION\"
        },
        \"annotations\": {
          \"summary\": \"Scheduled Cloud Layout test failed\",
          \"description\": \"Check GitLab Job log for more information\",
          \"plk_protocol_version\": \"1\",
          \"plk_link_url/job\": \"$CI_JOB_URL\",
          \"plk_link_title_en/job\": \"GitLab Job\",
          \"plk_create_group_if_not_exists/cloudlayouttestfailed\": \"CloudLayoutTestFailedGroup,provider=~provider\",
          \"plk_grouped_by/cloudlayouttestfailed\": \"CloudLayoutTestFailedGroup,provider=~provider\"
        }
      }"
    fi
  parallel:
    matrix:
    - PROVIDER: AWS
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
    - PROVIDER: Azure
      LAYOUT:
      - Standard
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
    - PROVIDER: GCP
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
    - PROVIDER: Yandex.Cloud
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
    - PROVIDER: OpenStack
      LAYOUT:
        - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
  artifacts: &artifacts
    when: always
    paths:
    - testing/cloud_layouts
    - layouts-tests-tmp
    expire_in: 30 days
  needs:
  - "Build"

.Cloud layouts Tests template for containerd:
  stage: cloud_testing_containerd
  before_script: *before_script
  script: *script
  after_script: *after_script
  parallel:
    matrix:
    - PROVIDER: AWS
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
    - PROVIDER: Azure
      LAYOUT:
      - Standard
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
    - PROVIDER: GCP
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
    - PROVIDER: Yandex.Cloud
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
    - PROVIDER: OpenStack
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
  artifacts: *artifacts

.Cloud layouts Tests template for containerd scheduled:
  stage: cloud_testing_containerd
  before_script: *before_script
  script: *script
  after_script: *after_script
  parallel:
    matrix:
    - PROVIDER: AWS
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
    - PROVIDER: Azure
      LAYOUT:
      - Standard
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
    - PROVIDER: GCP
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
    - PROVIDER: Yandex.Cloud
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
    - PROVIDER: OpenStack
      LAYOUT:
      - WithoutNAT
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
  artifacts: *artifacts

.Cloud layouts Tests vSphere template for docker:
  stage: cloud_testing_docker
  before_script: &vsphere_before_script
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script: &vsphere_script
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - mkdir -p layouts-tests-tmp
  - mkdir "/mnt/cloud-layouts/layouts/${CI_JOB_ID}"
  - |
    werf run dev/install --dev --docker-options="-e DECKHOUSE_DOCKERCFG=${LAYOUT_DECKHOUSE_DOCKERCFG} -e PREFIX=${CI_JOB_ID} -e DEV_BRANCH=${CI_COMMIT_REF_NAME} -e KUBERNETES_VERSION=${KUBERNETES_VERSION} -e CRI=${CRI} \
      -e PROVIDER=${PROVIDER:-not_provided} -e LAYOUT=${LAYOUT:-not_provided} -e SSH_KEY=${LAYOUT_SSH_KEY:-not_provided} \
      -e LAYOUT_VSPHERE_PASSWORD=${LAYOUT_VSPHERE_PASSWORD:-not_provided} \
      -e LAYOUT_VSPHERE_BASE_DOMAIN=${LAYOUT_VSPHERE_BASE_DOMAIN:-not_provided} \
      -v $(pwd)/testing:/deckhouse/testing -v /mnt/cloud-layouts/layouts/${CI_JOB_ID}:/tmp --user 997:997 -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro \
      -v /etc/shadow:/etc/shadow:ro -w /deckhouse" -- bash /deckhouse/testing/cloud_layouts/script.sh
  after_script: &vsphere_after_script
  - |
    if [[ ("$CI_COMMIT_REF_NAME" == "main") && ("$CI_JOB_STATUS" == "failed" || "$CI_JOB_STATUS" == "canceled") ]]; then
      curl -sS -X "POST" "https://madison.flant.com/api/events/custom/${CLOUD_LAYOUT_TESTS_MADISON_KEY}" \
        -H 'Content-Type: application/json' \
        -d "{
        \"labels\": {
          \"severity_level\": 7,
          \"trigger\": \"CloudLayoutTestFailed\",
          \"provider\": \"$PROVIDER\",
          \"layout\": \"$LAYOUT\",
          \"cri\": \"$CRI\",
          \"kubernetes_version\": \"$KUBERNETES_VERSION\"
        },
        \"annotations\": {
          \"summary\": \"Scheduled Cloud Layout test failed\",
          \"description\": \"Check GitLab Job log for more information\",
          \"plk_protocol_version\": \"1\",
          \"plk_link_url/job\": \"$CI_JOB_URL\",
          \"plk_link_title_en/job\": \"GitLab Job\",
          \"plk_create_group_if_not_exists/cloudlayouttestfailed\": \"CloudLayoutTestFailedGroup,provider=~provider\",
          \"plk_grouped_by/cloudlayouttestfailed\": \"CloudLayoutTestFailedGroup,provider=~provider\"
        }
      }"
    fi
  parallel:
    matrix:
    - PROVIDER: vSphere
      LAYOUT:
      - Standard
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
  artifacts: &vsphere_artifacts
    when: always
    paths:
    - testing/cloud_layouts
    - layouts-tests-tmp
    expire_in: 30 days
  needs:
  - "Build"

.Cloud layouts Tests vSphere template for containerd:
  stage: cloud_testing_containerd
  before_script: *vsphere_before_script
  script: *vsphere_script
  after_script: *vsphere_after_script
  parallel:
    matrix:
    - PROVIDER: vSphere
      LAYOUT:
      - Standard
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
  artifacts: *vsphere_artifacts

.Cloud layouts Tests vSphere template for containerd scheduled:
  stage: cloud_testing_containerd
  before_script: *vsphere_before_script
  script: *vsphere_script
  after_script: *vsphere_after_script
  parallel:
    matrix:
    - PROVIDER: vSphere
      LAYOUT:
      - Standard
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
  artifacts: *vsphere_artifacts

.Cloud layouts Tests Static template for docker:
  stage: cloud_testing_docker
  before_script: &static_before_script
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
    export CI_COMMIT_TAG="";
    fi
  script: &static_script
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - mkdir "/mnt/cloud-layouts/layouts/${CI_JOB_ID}"
  - |
    werf run dev/install --dev --docker-options="-e DECKHOUSE_DOCKERCFG=${LAYOUT_DECKHOUSE_DOCKERCFG} -e PREFIX=${CI_JOB_ID} -e DEV_BRANCH=${CI_COMMIT_REF_NAME} -e KUBERNETES_VERSION=${KUBERNETES_VERSION} -e CRI=${CRI} \
      -e PROVIDER=${PROVIDER:-not_provided} -e LAYOUT=${LAYOUT:-not_provided} -e SSH_KEY=${LAYOUT_SSH_KEY:-not_provided} \
      -e LAYOUT_OS_PASSWORD=${LAYOUT_OS_PASSWORD:-not_provided} \
      -v $(pwd)/testing:/deckhouse/testing -v /mnt/cloud-layouts/layouts/${CI_JOB_ID}:/tmp --user 999:999 -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro \
      -v /etc/shadow:/etc/shadow:ro -w /deckhouse" -- bash /deckhouse/testing/cloud_layouts/script.sh
  after_script: &static_after_script
  - |
    if [[ ("$CI_COMMIT_REF_NAME" == "main") && ("$CI_JOB_STATUS" == "failed" || "$CI_JOB_STATUS" == "canceled") ]]; then
      curl -sS -X "POST" "https://madison.flant.com/api/events/custom/${CLOUD_LAYOUT_TESTS_MADISON_KEY}" \
        -H 'Content-Type: application/json' \
        -d "{
        \"labels\": {
          \"severity_level\": 7,
          \"trigger\": \"CloudLayoutTestFailed\",
          \"provider\": \"$PROVIDER\",
          \"layout\": \"$LAYOUT\",
          \"cri\": \"$CRI\",
          \"kubernetes_version\": \"$KUBERNETES_VERSION\"
        },
        \"annotations\": {
          \"summary\": \"Scheduled Cloud Layout test failed\",
          \"description\": \"Check GitLab Job log for more information\",
          \"plk_protocol_version\": \"1\",
          \"plk_link_url/job\": \"$CI_JOB_URL\",
          \"plk_link_title_en/job\": \"GitLab Job\",
          \"plk_create_group_if_not_exists/cloudlayouttestfailed\": \"CloudLayoutTestFailedGroup,provider=~provider\",
          \"plk_grouped_by/cloudlayouttestfailed\": \"CloudLayoutTestFailedGroup,provider=~provider\"
        }
      }"
    fi
  parallel:
    matrix:
    - PROVIDER: Static
      LAYOUT:
      - Static
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Docker"
  artifacts: &static_artifacts
    when: always
    paths:
    - testing/cloud_layouts
    expire_in: 30 days
  needs:
  - "Build"

.Cloud layouts Tests Static template for containerd:
  stage: cloud_testing_containerd
  before_script: *static_before_script
  script: *static_script
  after_script: *static_after_script
  parallel:
    matrix:
    - PROVIDER: Static
      LAYOUT:
      - Static
      KUBERNETES_VERSION:
      - "1.20"
      - "1.21"
      - "1.22"
      CRI:
      - "Containerd"
  artifacts: *static_artifacts

.Cloud layouts Tests Static template for containerd scheduled:
  stage: cloud_testing_containerd
  before_script: *static_before_script
  script: *static_script
  after_script: *static_after_script
  parallel:
    matrix:
    - PROVIDER: Static
      LAYOUT:
      - Static
      KUBERNETES_VERSION:
      - "1.21"
      CRI:
      - "Containerd"
  artifacts: *static_artifacts
