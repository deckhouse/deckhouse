.Matrix Tests template:
  stage: testing
  before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script:
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - werf run tests
      --docker-options="-w /deckhouse"
      -- go test ./testing/matrix/ -v
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Go Validators template:
  stage: testing
  before_script:
    - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
      fi
  script:
    - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
    - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
    - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
    - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
    - type werf && source $(werf ci-env gitlab --verbose --as-file)
    - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
    - pwd
    - werf run tests
      --docker-options="-w /deckhouse"
      -- go test -tags=validation -run Validation -timeout=${TEST_TIMEOUT} ./testing/...
  except:
    - schedules
    - alpha
    - beta
    - early-access
    - stable
    - rock-solid
  needs:
    - "Build"
    - "Build Modules Images"
  interruptible: true

.Tests template:
  stage: testing
  before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script:
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - werf run tests
     --docker-options="-w /deckhouse"
     -- go test -timeout=${TEST_TIMEOUT} -vet=off ./modules/... ./global-hooks/...
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.No Cyrillic Validation template:
  stage: testing
  script:
  - pwd
  - "export SKIP_LABEL_NAME='Content: Cyrillic'"
  - ./.gitlab/scripts/validation_run.sh ./testing/validate_no_cyrillic.sh "${FOX_ACCESS_TOKEN}"
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Content Validation template:
  stage: testing
  script:
  - export SKIP_LABEL_NAME='Skip doc validation'
  - ./.gitlab/scripts/validation_run.sh ./testing/validate_doc_changes.sh "${FOX_ACCESS_TOKEN}"
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Copyright Validation template:
  stage: testing
  script:
    - export SKIP_LABEL_NAME='Skip copyright validation'
    - ./.gitlab/scripts/validation_run.sh ./testing/validate_copyright.sh "${FOX_ACCESS_TOKEN}"
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Web links test:
  stage: testing
  before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script:
  - export BASEDIR=$(pwd)/docs
  - export _TMPDIR=$(mktemp -d -t -p ${BASEDIR})
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - |
      cd $BASEDIR/site
      docker pull $(werf stage image web-backend)
      docker cp $(docker create --rm $(werf stage image web-backend)):/app/root/ ${_TMPDIR}/site/
      cd $BASEDIR/documentation
      docker pull $(werf stage image web)
      docker cp $(docker create --rm $(werf stage image web)):/app/ ${_TMPDIR}/site/doc/
      touch ${_TMPDIR}/site/index.html
      rm -Rf ${_TMPDIR}/site/doc/compare/
      cp -Rf ${_TMPDIR}/site/doc/assets/ ${_TMPDIR}/site/doc/ru/
      cp -Rf ${_TMPDIR}/site/doc/css/ ${_TMPDIR}/site/doc/ru/
      cp -Rf ${_TMPDIR}/site/doc/images/ ${_TMPDIR}/site/doc/ru/
      cp -Rf ${_TMPDIR}/site/doc/js/ ${_TMPDIR}/site/doc/ru/
      cp -Rf ${_TMPDIR}/site/doc/assets/ ${_TMPDIR}/site/doc/en/
      cp -Rf ${_TMPDIR}/site/doc/css/ ${_TMPDIR}/site/doc/en/
      cp -Rf ${_TMPDIR}/site/doc/images/ ${_TMPDIR}/site/doc/en/
      cp -Rf ${_TMPDIR}/site/doc/js/ ${_TMPDIR}/site/doc/en/
      docker run --rm -v "${_TMPDIR}/site:/src:ro" klakegg/html-proofer:3.19.1 --allow-hash-href --check-html --empty-alt-ignore \
         --url-ignore "/localhost/,/https\:\/\/t.me/,/gitlab.com\/profile/,/example.com/,/vmware.com/,/.slack.com/,/habr.com/,/flant.ru/,/bcrypt-generator.com/,/candi\/bashible\/bashbooster/,/..\/..\/compare\//,/compare\/ru\//,/compare\/en\//,/\.yml$/,/\.yaml$/,/\.tmpl$/,/\.tpl$/" \
         --url-swap "https\:\/\/deckhouse.io\/:/,\/ru\/documentation\/$:/doc/ru/,\/ru\/documentation\/v1\/:/doc/ru/,\/en\/documentation\/$:/doc/en/,\/en\/documentation\/v1\/:/doc/en/,\/docs\/documentation\/images\/:/doc/images/" ${1}
  after_script:
  - |
      if [ "$_TMPDIR" != "" ] ; then
        rm -rf $_TMPDIR
      fi
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  allow_failure: true
  needs:
    - "Doc web build"
    - "Main web build"
  interruptible: true

.Dhctl Tests template:
  stage: testing
  before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script:
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - werf run dhctl-tests --docker-options="-w /deckhouse/dhctl" -- make ci
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"

.GolangCI Lint template:
  stage: testing
  before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script:
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - werf run tests
    --docker-options="-w /deckhouse -v $(pwd):/deckhouse -e "TERM=xterm-256color""
    -- sh -c "golangci-lint run"
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"

.OpenAPI Test Cases template:
  stage: testing
  before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then
      export CI_COMMIT_TAG="";
    fi
  script:
  - if [[ -n "${DECKHOUSE_DEV_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null; fi
  - if [[ -n "${DECKHOUSE_REGISTRY_READ_HOST}" ]]; then echo ${DECKHOUSE_REGISTRY_READ_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_READ_USER}" --password-stdin ${DECKHOUSE_REGISTRY_READ_HOST} 2>/dev/null; fi
  - type multiwerf && source $(multiwerf use 1.2 ${WERF_CHANNEL:-ea} --as-file)
  - type werf && source $(werf ci-env gitlab --verbose --as-file)
  - if [[ -n "${DEV_REGISTRY_PATH}" ]]; then export WERF_REPO="${DEV_REGISTRY_PATH}"; fi
  - pwd
  - werf run tests
    --docker-options="-v $(pwd):/deckhouse -w /deckhouse"
    -- ginkgo -vet=off ./testing/openapi_cases/
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true
