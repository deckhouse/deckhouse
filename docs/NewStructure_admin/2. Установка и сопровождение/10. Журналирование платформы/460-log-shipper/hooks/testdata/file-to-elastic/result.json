{
  "sources": {
    "cluster_logging_config/test-source": {
      "type": "file",
      "include": [
        "/var/log/kube-audit/audit.log"
      ]
    }
  },
  "transforms": {
    "transform/destination/test-es-dest/00_elastic_dedot": {
      "drop_on_abort": false,
      "inputs": [
        "transform/source/test-source/01_local_timezone"
      ],
      "source": "if exists(.pod_labels) {\n    .pod_labels = map_keys(object!(.pod_labels), recursive: true) -\u003e |key| { replace(key, \".\", \"_\") }\n}",
      "type": "remap"
    },
    "transform/destination/test-es-dest/01_del_parsed_data": {
      "drop_on_abort": false,
      "inputs": [
        "transform/destination/test-es-dest/00_elastic_dedot"
      ],
      "source": "if exists(.parsed_data) {\n    del(.parsed_data)\n}",
      "type": "remap"
    },
    "transform/source/test-source/00_clean_up": {
      "drop_on_abort": false,
      "inputs": [
        "cluster_logging_config/test-source"
      ],
      "source": "if exists(.pod_labels.\"controller-revision-hash\") {\n    del(.pod_labels.\"controller-revision-hash\")\n}\nif exists(.pod_labels.\"pod-template-hash\") {\n    del(.pod_labels.\"pod-template-hash\")\n}\nif exists(.kubernetes) {\n    del(.kubernetes)\n}\nif exists(.file) {\n    del(.file)\n}\nif exists(.node_labels.\"node.deckhouse.io/group\") {\n\t.node_group = (.node_labels.\"node.deckhouse.io/group\")\n}\ndel(.node_labels)",
      "type": "remap"
    },
    "transform/source/test-source/01_local_timezone": {
      "drop_on_abort": false,
      "inputs": [
        "transform/source/test-source/00_clean_up"
      ],
      "source": "if exists(.\"timestamp\") {\n    ts = parse_timestamp!(.\"timestamp\", format: \"%+\")\n    .\"timestamp\" = format_timestamp!(ts, format: \"%+\", timezone: \"local\")\n}\n\nif exists(.\"timestamp_end\") {\n    ts = parse_timestamp!(.\"timestamp_end\", format: \"%+\")\n    .\"timestamp_end\" = format_timestamp!(ts, format: \"%+\", timezone: \"local\")\n}",
      "type": "remap"
    }
  },
  "sinks": {
    "destination/cluster/test-es-dest": {
      "type": "elasticsearch",
      "inputs": [
        "transform/destination/test-es-dest/01_del_parsed_data"
      ],
      "healthcheck": {
        "enabled": false
      },
      "endpoint": "http://192.168.1.1:9200",
      "encoding": {
        "timestamp_format": "rfc3339"
      },
      "batch": {
        "max_bytes": 10485760,
        "timeout_secs": 1
      },
      "tls": {
        "verify_hostname": true,
        "verify_certificate": false
      },
      "compression": "gzip",
      "bulk": {
        "action": "index",
        "index": "logs-%F"
      },
      "pipeline": "testpipe",
      "mode": "bulk",
      "suppress_type_name": true
    }
  }
}
