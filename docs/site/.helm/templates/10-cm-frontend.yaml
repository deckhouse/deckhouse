kind: ConfigMap
apiVersion: v1
metadata:
  name: doc-nginx-config
data:
  nginx.conf: |-
    worker_processes auto;

    error_log /dev/stderr warn;
    pid       /tmp/nginx.pid;

    events {
      worker_connections 1024;
      multi_accept on;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      proxy_cache_path /tmp/cache keys_zone=dcache:10m max_size=200m inactive=30d;

      access_log off;

      log_format json_combined escape=json '{ "time_local": "$time_local", '
        '"host": "$host", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent" }';

      keepalive_timeout  65;

      ssi off;
      gzip off;
      port_in_redirect off;
      absolute_redirect off;

      map $host $lang {
          hostnames;
          "deckhouse.ru"   "ru";
          "*.deckhouse.ru"   "ru";
          # for test environments
          "deckhouse.ru.*" "ru";
          default       "en";
      }

      # Map channel names to versions
      map $channel_name $channel_version {
          default "latest";
          include /app/channels-data/channels.conf;
      }

      server {
        listen   8080;
        server_name _;

        root   /app;
        index  index.html readme.html;
        error_page 403 404 /$lang/404.html;

        # Intercept proxy errors for processing with the error_page directive. Necessary for S3 handling.
        proxy_intercept_errors on;

        charset utf-8;
        access_log     /dev/stdout json_combined;

        location /link_test_report.txt {
            deny all;
        }

        location = /healthz {
            access_log  off;
            add_header Content-Type text/plain;
            return 200;
        }

        location /downloads/deckhouse-cli-trdl {
            return 302 /products/kubernetes-platform/documentation/v1/deckhouse-cli/;
        }

        location = /products/kubernetes-platform/documentation/sitemap.xml {
            try_files /$lang/sitemap.xml =404;
        }

        # DKP GS and Guides
        location ~* ^/products/kubernetes-platform/((gs|guides)/(.*))$  {
            try_files /$lang/$1 /$lang/$1/index.html /$lang/$1/ $1 $1/index.html $1/ =404;
        }

        # DVP and stronghold documentation
        location ~* ^/products/((virtualization-platform|stronghold)/(documentation|guides|modules|gs|reference)/.*)$  {
            try_files /$lang/$1 /$lang/$1/index.html /$lang/$1/ $1 $1/index.html $1/ =404;
        }

        # Code documentation
        location ~* ^/products/(code/(documentation|reference)/.*)$  {
            try_files /$lang/$1 /$lang/$1/index.html /$lang/$1/ $1 $1/index.html $1/ =404;
        }

        # Redirect for installer
        location /downloads/installer   {
            rewrite ^/downloads/installer/latest/(?<filename>.+)$ /v0.4.0/$filename  break;
            rewrite ^ /get  break;

            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_cache_methods     GET;
            proxy_set_header        X-Real-IP         $remote_addr;
            proxy_set_header        X-Original-URI    $request_uri;
            proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;
            proxy_intercept_errors  on;

            error_page              301 302 307 = @handle_redirects;
            proxy_pass              https://installer.ui.foxtrot-dev.ru;
        }

        location ~* ^/downloads/deckhouse-cli/v[0-9]+\.[0-9]+\.[0-9]+/d8-v[0-9]+\.[0-9]+\.[0-9]+-(darwin|linux|windows)-(amd|arm)64.tar.gz(\.sha256sum)?$   {
            rewrite ^/downloads/deckhouse-cli/([^/]+/[^/]+\.gz(\.sha256sum)?)$ /deckhouse/deckhouse-cli/releases/download/$1/  break;

            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_cache_methods     GET;
            proxy_set_header        X-Real-IP         $remote_addr;
            proxy_set_header        X-Original-URI    $request_uri;
            proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;
            proxy_intercept_errors  on;

            error_page              301 302 307 = @handle_redirects;
            proxy_pass              https://github.com;
        }

        location ~* ^/downloads/deckhouse-cli-trdl/(.*)  {
            rewrite ^/downloads/deckhouse-cli-trdl/(.*)$ /$1  break;

            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_cache_methods     GET;
            proxy_set_header        X-Real-IP         $remote_addr;
            proxy_set_header        X-Original-URI    $request_uri;
            proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;
            proxy_intercept_errors  on;

            error_page              301 302 307 = @handle_redirects;
            proxy_pass              https://tuf.deckhouse.ru;
        }

        location @handle_redirects {
            set                     $original_uri  $uri;
            set                     $orig_loc      $upstream_http_location;

            resolver                d8-kube-dns.kube-system.svc.cluster.local;
            proxy_cache             dcache;
            proxy_cache_key         $original_uri;
            proxy_intercept_errors  on;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;

            proxy_pass              $orig_loc;
        }

        # Requests for defaul DKP docs ../documentation/v1/...
        # This is the default URL for DKP documentation and it is indexed by search engines.
        location ~* ^/products/kubernetes-platform/documentation/v1/(.*)$ {
            # $channel_name is mapped to $channel_version (see map above)
            set $channel_name "stable";
            set $doc_path "$1";

            # Serve doc for the stable channel.
            rewrite .+/documentation/[^/]+/(images|presentations|assets)/.+$    /deckhouse-{{ $.Values.werf.env }}/$channel_version/docs-dkp/${doc_path} break;
            rewrite /$    /deckhouse-{{ $.Values.werf.env }}/$channel_version/docs-dkp/$lang/${doc_path}index.html break;
            rewrite [^/]$ /deckhouse-{{ $.Values.werf.env }}/$channel_version/docs-dkp/$lang/${doc_path} break;

            limit_except GET {
                deny all;
            }

            resolver                d8-kube-dns.kube-system.svc.cluster.local ipv6=off;
            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_intercept_errors  on;
            proxy_buffering         on;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;

            proxy_set_header Host   {{ .Values.global.doc_s3_bucket_public_url }};

            proxy_connect_timeout   30s;
            proxy_read_timeout      30s;
            proxy_send_timeout      30s;

            proxy_pass              https://{{ .Values.global.doc_s3_bucket_public_url }};
        }

        # Requests for specific DKP docs version
        location ~* ^/products/kubernetes-platform/documentation/(latest|v1\.[0-9]+)/(.*)$ {
            set $doc_version "$1";
            set $doc_path "$2";
            limit_except GET {
                deny all;
            }

            rewrite .+/documentation/[^/]+/(images|presentations|assets)/.+$    /deckhouse-{{ $.Values.werf.env }}/$doc_version/docs-dkp/${doc_path} break;
            rewrite /$    /deckhouse-{{ $.Values.werf.env }}/$doc_version/docs-dkp/$lang/${doc_path}index.html break;
            rewrite [^/]$ /deckhouse-{{ $.Values.werf.env }}/$doc_version/docs-dkp/$lang/${doc_path} break;

            resolver                d8-kube-dns.kube-system.svc.cluster.local ipv6=off;
            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_intercept_errors  on;
            proxy_buffering         on;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;

            proxy_set_header Host   {{ .Values.global.doc_s3_bucket_public_url }};

            proxy_connect_timeout   30s;
            proxy_read_timeout      30s;
            proxy_send_timeout      30s;

            proxy_pass              https://{{ .Values.global.doc_s3_bucket_public_url }};
        }

        location / {
            try_files /$lang/$uri /$lang/$uri/index.html /$lang/$uri/ $uri $uri/index.html $uri/ =404;
        }
      }
    }
