{{- $_ := set . "Version" ( splitList "/" .Values.global.doc_version | last ) }}
{{- $_ := set . "VersionURLNormalized" ( printf "%s" .Version | lower | replace "+" "-plus-" | replace "_" "-u-" ) }}
{{- $_ := set . "VersionDNSNormalized" ( printf "%s" .Version | lower | replace "+" "-plus-" | replace "_" "-u-" | replace "." "-dot-" ) }}

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: doc-moduleslibrary-nginx-config
data:
  nginx.conf: |-
    worker_processes auto;

    error_log /dev/stderr warn;
    pid       /tmp/nginx.pid;

    events {
      worker_connections 1024;
      multi_accept on;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      proxy_cache_path /tmp/cache keys_zone=dcache:10m max_size=200m inactive=30d;

      access_log off;

      log_format json_combined escape=json '{ "time_local": "$time_local", '
        '"host": "$host", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent" }';

      keepalive_timeout  65;

      ssi off;
      gzip off;
      port_in_redirect off;
      absolute_redirect off;

      map $host $lang {
          hostnames;
          "deckhouse.ru"   "ru";
          "*.deckhouse.ru"   "ru";
          # for test environments
          "deckhouse.ru.*" "ru";
          default       "en";
      }

      # Map channel names to versions
      map $channel_name $channel_version {
          default "latest";
          include /app/channels-data/channels.conf;
      }

      server {
        listen   8080;
        server_name _;

        root   /app;
        index  index.html readme.html;
        error_page 403 404 /$lang/404.html;

        # Intercept proxy errors for processing with the error_page directive. Necessary for S3 handling.
        proxy_intercept_errors on;

        charset utf-8;
        access_log     /dev/stdout json_combined;

        location /link_test_report.txt {
            deny all;
        }

        location = /healthz {
            access_log  off;
            add_header Content-Type text/plain;
            return 200;
        }

        # Modules library root folder
        location ~* ^/modules/$  {
            try_files /$lang/modules/index.html =404;
        }

        # Search index for embedded modules from the latest version
        location ~* ^/modules/search-embedded-modules-index.json$  {
            rewrite ^/modules/search-embedded-modules-index.json$ /modules-web-test2/latest/$lang/search-embedded-modules-index.json break;

            limit_except GET {
                deny all;
            }

            set $module "$1";
            set $module_doc "$2";

            rewrite ^/modules/[^/]+/stable/$ /modules-web-test2/v1.71/$lang/modules/$module/index.html break;
            rewrite ^/modules/[^/]+/stable/(.+)$ /modules-web-test2/v1.71/$lang/modules/$module/$module_doc break;

            resolver                d8-kube-dns.kube-system.svc.cluster.local ipv6=off;
            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_intercept_errors  on;
            proxy_buffering         on;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;

            proxy_set_header Host   {{ .Values.global.doc_s3_bucket_public_url }};

            proxy_connect_timeout   30s;
            proxy_read_timeout      30s;
            proxy_send_timeout      30s;

            proxy_pass              https://{{ .Values.global.doc_s3_bucket_public_url }};
        }

        # Requests for modules channels - /module/NAME/CHANNEL/...
        location ~* ^/modules/([^/]+)/(rock-solid|stable|early-access|beta|alpha)/(.*)$ {
            set $module "$1";
            set $channel "$2";
            # $channel_name is mapped to $channel_version (see map above)
            set $channel_name "$2";
            set $module_doc "$3";

            # Modules from sources (they are served locally.)
            if (-d $document_root/$lang/modules/$module/$channel) {
               rewrite ^/modules/[^/]+/[^/]+/.*$ /$lang/modules/$module/$channel/$module_doc last;
            }

            # Redirect for channel names to their corresponding versions for modules served from S3.
            rewrite ^/modules/[^/]+/(rock-solid|stable|early-access|beta|alpha)/$ /modules/$module/$channel_version/$module_doc redirect;
        }

        # Requests for modules without channel and version in URL - /module/NAME/...
        # This is the default URL for modules documentation and it is indexed by search engines.
        location ~* ^/modules/([^\./]+)/(?!(v[0-9]+\.[0-9]+|alpha|beta|early-access|stable|rock-solid|latest).*)$  {
            set $module "$1";
            # $channel_name is mapped to $channel_version (see map above)
            set $channel_name "stable";
            set $module_doc "$2";

            # Serve doc for the stable channel. Don't redirect as it shoud be SEO friendly.
            rewrite ^/.+/$ /modules-web-test2/$channel_version/$lang/modules/$module/index.html break;
            rewrite ^/.+[^/]$ /modules-web-test2/$channel_version/$lang/modules/$module/$module_doc break;

            limit_except GET {
                deny all;
            }

            resolver                d8-kube-dns.kube-system.svc.cluster.local ipv6=off;
            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_intercept_errors  on;
            proxy_buffering         on;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;

            proxy_set_header Host   {{ .Values.global.doc_s3_bucket_public_url }};

            proxy_connect_timeout   30s;
            proxy_read_timeout      30s;
            proxy_send_timeout      30s;

            proxy_pass              https://{{ .Values.global.doc_s3_bucket_public_url }};
        }

        # Embedded modules (they are served from s3)
        location ~* ^/modules/([^/]+)/(latest|v1\.[0-9]+)/(.*)$ {
            limit_except GET {
                deny all;
            }

            set $module "$1";
            set $channel "$2";
            set $module_doc "$3";

            rewrite ^/modules/[^/]+/(latest|v1\.[0-9]+)/$ /modules-web-test2/$channel/$lang/modules/$module/index.html break;
            rewrite ^/modules/[^/]+/(latest|v1\.[0-9]+)/(.+)$ /modules-web-test2/$channel/$lang/modules/$module/$module_doc break;
            #rewrite ^/(.+) /modules-{{ $.Values.werf.env }}/{{ .VersionURLNormalized }}/$lang/$1 break;

            #try_files @s3 =404;
            #try_files /$lang/embedded-modules/$1 /$lang/embedded-modules/$1/index.html /$lang/embedded-modules/$1/ /$lang/modules/$1 /$lang/modules/$1/index.html /$lang/modules/$1/ =404;
            resolver                d8-kube-dns.kube-system.svc.cluster.local ipv6=off;
            proxy_cache             dcache;
            proxy_cache_key         $uri;
            proxy_intercept_errors  on;
            proxy_buffering         on;
            proxy_buffer_size       16k;
            proxy_buffers           4 16k;
            proxy_ignore_headers    Set-Cookie;
            proxy_ignore_headers    Cache-Control;

            proxy_set_header Host   {{ .Values.global.doc_s3_bucket_public_url }};

            proxy_connect_timeout   30s;
            proxy_read_timeout      30s;
            proxy_send_timeout      30s;

            proxy_pass              https://{{ .Values.global.doc_s3_bucket_public_url }};
        }


        # Internal redirect to serve module docs from sources
        location ~* ^/(ru|en)/modules/([^/]+)/(rock-solid|stable|early-access|beta|alpha)/(.*)$ {
            internal;
            try_files /$lang/modules/$module/$channel/$module_doc /$lang/modules/$module/$channel/$module_doc/readme.html /$lang/modules/$module/$channel/$module_doc/ =404;
        }

        location / {
            try_files $uri $uri/ =404;
        }

        ## TODO TMP Redirect channel names to their corresponding versions
        #location ~ ^/modules/test/(alpha|beta|ea|stable|rock-solid)$ {
        #    set $channel_name $1;
        #    return 301 /$channel_version;
        #}

        #        # Redirects for modules folders
        #        location ~* ^/(ru|en)/modules/([^/.]+)$ {
        #            set $platform_module_folder_path "platform/$1/modules/$2";
        #            set $platform_module_url "/$1/platform/modules/$2/";
        #            set $ext_module_folder_path "modules/$1/$2";
        #            set $ext_module_url "/$1/modules/$2/";
        #
        #            if (-d $document_root/$platform_module_folder_path) {
        #                return 301 $platform_module_url$is_args$args;
        #            }
        #
        #            if (-d $document_root/$ext_module_folder_path) {
        #                return 301 $ext_module_url$is_args$args;
        #            }
        #        }

        #        location ~* ^/(ru|en)/modules/([^/]+)/(.*)$ {
        #            set $platform_module_folder_path "platform/$1/modules/$2";
        #            set $platform_module_url "/$1/platform/modules/$2/$3";
        #            set $lang "$1";
        #            set $module "$2";
        #            set $module_doc "$3";
        #
        #            if (-d $document_root/$platform_module_folder_path) {
        #               return 301 $platform_module_url$is_args$args;
        #            }
        #
        #            # Redirect to stable version for module from source (doc for such modules is always has URL /LANG/modules/NAME/stable/DOC_URL).
        #            rewrite ^/(ru|en)/modules/([^/]+)/(?!(rock-solid|stable|early-access|beta|alpha))(.*)$ /$1/modules/$2/stable/$3$is_args$args redirect;
        #
        #            # Serve modules from sources
        #            try_files /modules/$lang/$module/$module_doc /modules/$lang/$module/$module_doc/ =404;
        #        }

        # Internal modules
        #location ~* ^/(ru|en)/platform/(.*) {
        #    try_files /platform/$1/$2 /platform/$1/$2/index.html =404;
        #}

        #location ~* ^/platform/(ru|en)/(.*) {
        #    internal;
        #    try_files $uri $uri/ =404;
        #}

        #location ~* ^/modules/(ru|en)/([^0-9]+[^/]+)/(.*)$ {
        #    internal;
        #    try_files $uri $uri/ =404;
        #}

      }
    }
