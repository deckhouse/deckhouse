{{- $_ := set . "Version" ( splitList "/" .Values.global.doc_version | last ) }}
{{- $_ := set . "VersionURLNormalized" ( printf "%s" .Version | lower | replace "+" "-plus-" | replace "_" "-u-" ) }}
{{- $_ := set . "VersionDNSNormalized" ( printf "%s" .Version | lower | replace "+" "-plus-" | replace "_" "-u-" | replace "." "-dot-" ) }}
{{- $hostEn := .Values.global.url }}
{{- $hostRu := .Values.global.url_ru }}
{{- $hosts := list -}}
{{- $hosts = append $hosts (dict "Lang" "en" "URL" $hostEn) -}}
{{- $hosts = append $hosts (dict "Lang" "ru" "URL" $hostRu) -}}

{{- range $hosts }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-{{ .Lang }}
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI         $request_uri;
      ssi on;
      ssi_silent_errors on;
      rewrite ^(/en|/ru)?/documentation/v1\.3[0-7](\.[0-9]+)?(/.*)$ /documentation/v1.38$3 redirect;
      rewrite ^(/en|/ru)?(/documentation/v1\.[0-9]+)\.[0-9]+(/.*)$ $2$3 redirect;
      rewrite ^/ru/(.*) https://{{ $hostRu }}/$1 redirect;
      rewrite ^/en/(.*) https://{{ $hostEn }}/$1 redirect;
      {{- include "rewrites" . | nindent 6 }}
{{- if ne $.Values.web.env "web-production" }}
    nginx.ingress.kubernetes.io/auth-signin: https://$host/dex-authenticator/sign_in
    nginx.ingress.kubernetes.io/auth-url: https://{{ $.Chart.Name }}-{{ .Lang }}-dex-authenticator.deckhouse-{{ $.Values.web.env }}.svc.cluster.local/dex-authenticator/auth
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
{{- end }}
spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
      - {{ .URL }}
{{- if eq $.Values.web.env "web-production" }}
      - www.{{ .URL }}
{{- end }}
    secretName: tls-{{ .URL }}
  rules:
  - host: {{ .URL }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              name: http
      - path: /includes
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              name: http
      - path: /documentation/v1
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              name: http
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ $.Chart.Name }}-{{ .Lang }}-cert
spec:
  certificateOwnerRef: false
  secretName: tls-{{ .URL }}
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
  commonName: {{ .URL }}
  dnsNames:
  - {{ .URL }}
{{- if eq $.Values.web.env "web-production" }}
  - www.{{ .URL }}
{{- end }}
{{- if ne $.Values.web.env "web-production" }}
---
apiVersion: deckhouse.io/v1alpha1
kind: DexAuthenticator
metadata:
  name: {{ $.Chart.Name }}-{{ .Lang }}
spec:
  applicationDomain: {{ .URL }}
  sendAuthorizationHeader: false
  applicationIngressCertificateSecretName: tls-{{ .URL }}
  applicationIngressClassName: "nginx"
  keepUsersLoggedInFor: "720h"
{{- end }}
---
{{ end -}}
