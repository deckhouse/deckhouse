apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: replicatedstorageclasses.storage.deckhouse.io
  labels:
    heritage: deckhouse
    module: storage
    backup.deckhouse.io/cluster-config: "true"
spec:
  group: storage.deckhouse.io
  scope: Cluster
  names:
    plural: replicatedstorageclasses
    singular: replicatedstorageclass
    kind: ReplicatedStorageClass
    shortNames:
      - rsc
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          description: |
            ReplicatedStorageClass is a Kubernetes Custom Resource that defines a configuration for a Kubernetes Storage class.
          required:
            - spec
          properties:
            spec:
              x-kubernetes-validations:
                - rule: '(has(self.replication) && self.replication == "None") || ((!has(self.replication) || self.replication == "Availability" || self.replication == "ConsistencyAndAvailability") && (!has(self.zones) || size(self.zones) == 0 || size(self.zones) == 1 || size(self.zones) == 3))'
                  message: 'When "replication" is not set or is set to "Availability" or "ConsistencyAndAvailability" (default value), "zones" must be either not specified, or must contain exactly three zones.'
                - message: zones field cannot be deleted or added
                  rule: (has(self.zones) && has(oldSelf.zones)) || (!has(self.zones) && !has(oldSelf.zones))
                - message: replication filed cannot be deleted or added
                  rule: (has(self.replication) && has(oldSelf.replication)) || (!has(self.replication) && !has(oldSelf.replication))
                - message: volumeAccess filed cannot be deleted or added
                  rule: (has(self.volumeAccess) && has(oldSelf.volumeAccess)) || (!has(self.volumeAccess) && !has(oldSelf.volumeAccess))
              type: object
              description: |
                Defines a Kubernetes Storage class configuration.

                > Note that this field is in read-only mode.
              required:
                - storagePool
                - reclaimPolicy
                - topology
              properties:
                storagePool:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    Selected ReplicatedStoragePool resource's name.
                reclaimPolicy:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    The storage class's reclaim policy:
                    - Delete (If the Persistent Volume Claim is deleted, deletes the Persistent Volume and its associated storage as well).
                    - Retain (If the Persistent Volume Claim is deleted, remains the Persistent Volume and its associated storage).
                  enum:
                    - Delete
                    - Retain
                replication:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    The Storage class's replication mode:
                    - None (in this mode the Storage class's 'placementCount' and 'AutoEvictMinReplicaCount' params equal '1').
                    - Availability (in this mode the Storage class's 'placementCount' and 'AutoEvictMinReplicaCount' params equal '2').
                    - ConsistencyAndAvailability (in this mode the Storage class's 'placementCount' and 'AutoEvictMinReplicaCount' params equal '3').

                    > Note that default Replication mode is 'ConsistencyAndAvailability'.
                  enum:
                    - None
                    - Availability
                    - ConsistencyAndAvailability
                  default: 'ConsistencyAndAvailability'
                volumeAccess:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    The Storage class's access mode:
                    - Local (in this mode the Storage class's 'allowRemoteVolumeAccess' param equals 'false'
                    and Volume Binding mode equals 'WaitForFirstConsumer').
                    - EventuallyLocal (in this mode the Storage class's 'allowRemoteVolumeAccess' param
                    equals '- fromSame:\n  - topology.kubernetes.io/zone', 'auto-diskful' param equals '30' minutes,
                    'auto-diskful-allow-cleanup' param equals 'true',
                    and Volume Binding mode equals 'WaitForFirstConsumer').
                    - PreferablyLocal (in this mode the Storage class's 'allowRemoteVolumeAccess' param
                    equals '- fromSame:\n  - topology.kubernetes.io/zone',
                    and Volume Binding mode equals 'WaitForFirstConsumer').
                    - Any (in this mode the Storage class's 'allowRemoteVolumeAccess' param
                    equals '- fromSame:\n  - topology.kubernetes.io/zone',
                    and Volume Binding mode equals 'Immediate').

                    > Note that the default Volume Access mode is 'PreferablyLocal'.
                  enum:
                    - Local
                    - EventuallyLocal
                    - PreferablyLocal
                    - Any
                  default: 'PreferablyLocal'
                topology:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    The topology settings for the volumes in the created Storage class:
                    - TransZonal - replicas of the volumes will be created in different zones (one replica per zone).
                    To use this topology, the available zones must be specified in the 'zones' param, and the cluster nodes must have the topology.kubernetes.io/zone=<zone name> label.
                    - Zonal - all replicas of the volumes are created in the same zone that the scheduler selected to place the pod using this volume.
                    - Ignored - the topology information will not be used to place replicas of the volumes.
                    The replicas can be placed on any available nodes, with the restriction: no more than one replica of a given volume on one node.

                    > Note that the 'Ignored' value can be used only if there are no zones in the cluster (there are no nodes with the topology.kubernetes.io/zone label).
                  enum:
                    - TransZonal
                    - Zonal
                    - Ignored
                zones:
                  type: array
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    Array of zones the Storage class's volumes should be replicated in. The controller will put a label with
                    the Storage class's name on the nodes which be actual used by the Storage class.

                    > Note that for Replication mode 'Availability' and 'ConsistencyAndAvailability' you have to select
                    exactly 1 or 3 zones.
                  items:
                    type: string
            status:
              type: object
              description: |
                Displays current information about the Storage Class.
              properties:
                phase:
                  type: string
                  description: |
                    The Storage class current state:
                    - Failed (if the controller received incorrect resource configuration or some errors occurred during the operation).
                    - Create (if everything went fine).
                  enum:
                    - Failed
                    - Created
                reason:
                  type: string
                  description: |
                    Additional information about the current state of the Storage Class.
      additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .status.reason
          name: Reason
          type: string
          priority: 1
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
          description: The age of this resource.
