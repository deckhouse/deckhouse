apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nfsstorageclasses.storage.deckhouse.io
  labels:
    heritage: deckhouse
    module: storage
    backup.deckhouse.io/cluster-config: "true"
spec:
  group: storage.deckhouse.io
  scope: Cluster
  names:
    plural: nfsstorageclasses
    singular: nfsstorageclass
    kind: NFSStorageClass
    shortNames:
      - nsc
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          description: |
            NFSStorageClass is a Kubernetes Custom Resource that defines a configuration for a Kubernetes StorageClass.
          required:
            - spec
          properties:
            spec:
              x-kubernetes-validations:
                - rule: "!(self.connection.mtls == true) || (self.connection.tls == true)"
                  message: "If mtls is true, tls must also be true."
              type: object
              description: |
                Defines a Kubernetes StorageClass configuration.
              required:
                - connection
                - reclaimPolicy
                - volumeBindingMode
              x-kubernetes-validations:
                - rule: "self.reclaimPolicy != 'Retain' || !has(self.volumeCleanup)"
                  message: "If reclaimPolicy is 'Retain', volumeCleanup must be omitted."
                - rule: "self.connection.nfsVersion == '4.2' || !has(self.volumeCleanup)|| self.volumeCleanup != 'Discard'"
                  message: "Discard mode is only available when connection.nfsVersion is '4.2'."
              properties:
                connection:
                  type: object
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    Defines a Kubernetes StorageClass configuration.
                  required:
                    - host
                    - share
                    - nfsVersion
                  properties:
                    host:
                      type: string
                      x-kubernetes-validations:
                        - rule: self == oldSelf
                          message: Value is immutable.
                      description: |
                        NFS server host.
                      minLength: 1
                    share:
                      type: string
                      x-kubernetes-validations:
                        - rule: self == oldSelf
                          message: Value is immutable.
                      description: |
                        NFS server share path.
                      minLength: 1
                    nfsVersion:
                      type: string
                      x-kubernetes-validations:
                        - rule: self == oldSelf
                          message: Value is immutable.
                      description: |
                        NFS version.
                      enum:
                        - "3"
                        - "4.1"
                        - "4.2"
                    tls:
                      type: boolean
                      x-doc-d8editions: [se,se-plus,ee,fe]
                      x-kubernetes-validations:
                        - rule: self == oldSelf
                          message: Value is immutable.
                      description: |
                        **This feature is available in SE, SE+, EE, and FE.**

                        Whether to use TLS for connection.
                      default: false
                    mtls:
                      type: boolean
                      x-doc-d8editions: [se,se-plus,ee,fe]
                      x-kubernetes-validations:
                        - rule: self == oldSelf
                          message: Value is immutable.
                      description: |
                        **This feature is available in SE, SE+, EE, and FE.**

                        Whether to use mTLS — requires TLS to be enabled.
                      default: false
                mountOptions:
                  type: object
                  description: |
                    StorageClass mount options.
                  properties:
                    mountMode:
                      type: string
                      description: |
                        NFS share mount mode.
                      enum:
                        - hard
                        - soft
                    timeout:
                      type: integer
                      description: |
                        NFS server timeout.
                      minimum: 1
                    retransmissions:
                      type: integer
                      description: |
                        NFS retries before fail.
                      minimum: 1
                    readOnly:
                      type: boolean
                      description: |
                        Share read-only flag.
                chmodPermissions:
                  type: string
                  description: |
                    chmod rights for PVs subdirectory.
                  pattern: '^[0-7]{3,4}$'
                reclaimPolicy:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    The StorageClass's reclaim policy. Might be:
                    - Delete (If the Persistent Volume Claim is deleted, deletes the Persistent Volume and its associated storage as well);
                    - Retain (If the Persistent Volume Claim is deleted, remains the Persistent Volume and its associated storage).
                  enum:
                    - Delete
                    - Retain
                volumeBindingMode:
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: Value is immutable.
                  description: |
                    The StorageClass's volume binding mode. Might be Immediate or WaitForFirstConsumer.
                  enum:
                    - Immediate
                    - WaitForFirstConsumer
                workloadNodes:
                  type: object
                  minProperties: 1
                  properties:
                    nodeSelector:
                      type: object
                      minProperties: 1
                      description: |
                        Node selector to specify rules for selecting nodes where Persistent Volumes (PVs) created by this StorageClass are allowed to connect. Combines simple label matches and advanced matching expressions.
                        If this parameter is omitted, NFS shares can be mounted on any node in the cluster running the `Linux` OS.
                      properties:
                        matchLabels:
                          type: object
                          description: |
                            A map of labels that must match exactly with the labels of a node. Nodes that do not match any of the specified labels will be excluded.
                          additionalProperties:
                            type: string
                        matchExpressions:
                          type: array
                          description: |
                            A list of advanced node selector requirements. Each requirement specifies a key, an operator, and optional values for filtering nodes based on their labels or other fields.
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - In
                                  - NotIn
                                  - Exists
                                  - DoesNotExist
                              values:
                                type: array
                                items:
                                  type: string
                volumeCleanup:
                  type: string
                  x-doc-d8editions: [ee,fe]
                  description: |
                    **This feature is available in Enterprise Edition.**

                    Specifies the cleanup method to be applied to the PV’s subdirectory content before deletion.
                    By default, the NFS CSI driver simply deletes the directory created for the Persistent Volume (PV) on the NFS server without performing any data cleanup.
                    When volumeCleanup is enabled, the driver will erase each file in the PV directory.

                    Valid options are:
                    - **Discard**: Uses the filesystem’s discard (trim) functionality to free data blocks. (This option is available only when supported, for example with NFSv4.2.)
                    - **RandomFillSinglePass**: Overwrites the content of each file once with random data before deletion. This is implemented by invoking the utility `shred`.
                    - **RandomFillThreePass**: Overwrites the content of each file three times with random data before deletion. This is implemented by invoking the utility `shred`.
                  enum:
                    - Discard
                    - RandomFillSinglePass
                    - RandomFillThreePass
            status:
              type: object
              description: |
                Displays current information about the StorageClass.
              properties:
                phase:
                  type: string
                  description: |
                    The StorageClass current state. Might be: 
                    - Failed (if the controller received incorrect resource configuration or some errors occurred during the operation);
                    - Create (if everything went fine).
                  enum:
                    - Failed
                    - Created
                reason:
                  type: string
                  description: |
                    Additional information about the current state of the StorageClass.
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .status.reason
          name: Reason
          type: string
          priority: 1
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
          description: The age of this resource.
