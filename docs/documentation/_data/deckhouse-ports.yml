groups:
- group: MastersToMasters
  description:
    en: Traffic between master nodes
    ru: Трафик между master-узлами
  destinations:
  - ports: "2379, 2380"
    protocol: TCP
    description:
      en: etcd replication
      ru: Репликация etcd
  - ports: "4200"
    protocol: TCP
    description:
      en: Cluster API webhook handler
      ru: Вебхук-обработчик Cluster API
  - ports: "4201"
    protocol: TCP
    description:
      en: Webhook handler for VMware Cloud Director cloud provider
      ru: Вебхук-обработчик для cloud-провайдера VMware Cloud Director
  - ports: "4223"
    protocol: TCP
    description:
      en: Deckhouse controller webhook handler
      ru: Вебхук-обработчик контроллера Deckhouse

- group: MastersToNodes
  description:
    en: Traffic from master nodes to regular nodes
    ru: Трафик от master-узлов к узлам
  destinations:
  - ports: "22"
    protocol: TCP
    description:
      en: SSH for static node bootstrapping by the static provider
      ru: SSH для первичной настройки статичных узлов статичным провайдером
  - ports: "10250"
    protocol: TCP
    description:
      en: kubelet
      ru: kubelet
  - ports: "4221"
    protocol: TCP
    description:
      en: "`bashible apiserver` for delivering node configurations"
      ru: "`apiserver bashible` для доставки конфигурации на узлы"
  - ports: "4227"
    protocol: TCP
    description:
      en: "`runtime-audit-engine` webhook handler"
      ru: "Вебхук-обработчик компонента `runtime-audit-engine`"

- group: NodesToMasters
  description:
    en: Traffic from nodes to master nodes
    ru: Трафик от узлов к master-узлам
  destinations:
  - ports: "4234"
    protocol: UDP
    description:
      en: NTP for time synchronization between nodes
      ru: NTP для синхронизации времени между узлами
  - ports: "6443"
    protocol: TCP
    description:
      en: "`kube-apiserver` for controllers working in the node's host network namespace"
      ru: "`kube-apiserver` для контроллеров, работающих в сетевом пространстве имен узла"
  - ports: "4203"
    protocol: TCP
    description:
      en: "`machine-controller-manager` metrics"
      ru: "Метрики компонента `machine-controller-manager`"
  - ports: "4219"
    protocol: TCP
    description:
      en: "Proxy for registry packages `registry-packages-proxy`"
      ru: "Прокси для пакетов registry `registry-packages-proxy`"
  - ports: "4222"
    protocol: TCP
    description:
      en: "Deckhouse controller metrics"
      ru: "Метрики контроллера Deckhouse"

- group: NodesToNodes
  description:
    en: Traffic between nodes
    ru: Трафик между узлами
  destinations:
  - ports: ""
    protocol: ICMP
    description:
      en: ICMP for node-to-node connectivity monitoring
      ru: ICMP для мониторинга связности между узлами
  - ports: "4202"
    protocol: TCP
    description:
      en: "`sds-node-configurator` node agent metrics"
      ru: "Метрики агента `sds-node-configurator`"
  - ports: "4204"
    protocol: TCP
    description:
      en: "Deckhouse controller debug"
      ru: "Debug для контроллера Deckhouse"
  - ports: "4205"
    protocol: TCP
    description:
      en: "`ebpf-exporter` module metrics"
      ru: "Метрики модуля `ebpf-exporter`"
  - ports: "4206"
    protocol: TCP
    description:
      en: "`node-exporter` module metrics"
      ru: "Метрики модуля `node-exporter`"
  - ports: "4207"
    protocol: TCP
    description:
      en: "`ingress-nginx` controller metrics for the `HostWithFailover` inlet"
      ru: "Метрики контроллера `ingress-nginx` для инлета `HostWithFailover`"
  - ports: "4208"
    protocol: TCP
    description:
      en: "`ingress-nginx` controller metrics for the `HostWithFailover` inlet"
      ru: "Метрики контроллера `ingress-nginx` для инлета `HostWithFailover`"
  - ports: "4209"
    protocol: TCP
    description:
      en: Kubernetes control plane metrics
      ru: Метрики управляющего слоя Kubernetes
  - ports: "4210"
    protocol: TCP
    description:
      en: "`kube-proxy` metrics"
      ru: "Метрики `kube-proxy`"
  - ports: "4211"
    protocol: TCP
    description:
      en: Cluster API metrics
      ru: Метрики Cluster API
  - ports: "4212"
    protocol: TCP
    description:
      en: "`runtime-audit-engine` module metrics"
      ru: "Метрики модуля `runtime-audit-engine`"
  - ports: "4213"
    protocol: TCP
    description:
      en: "`kube-router` metrics"
      ru: "Метрики `kube-router`"
  - ports: "4214"
    protocol: TCP
    description:
      en: API of the `sds-replicated-volume` module agent
      ru: API агента модуля `sds-replicated-volume`
  - ports: "4215"
    protocol: TCP
    description:
      en: "`sds-replicated-volume` agent metrics"
      ru: "Метрики агента `sds-replicated-volume`"
  - ports: "4218"
    protocol: TCP/UDP
    description:
      en: "Synchronization of the `speaker` components in `metallb` modules via memberlist protocol"
      ru: "Синхронизация компонентов `speaker` модулей `metallb` через протокол memberlist"
  - ports: "4220"
    protocol: TCP
    description:
      en: "Metrics of the `speaker` components in `metallb` modules"
      ru: "Метрики компонентов `speaker` модулей `metallb`"
  - ports: "4224"
    protocol: TCP
    description:
      en: "`node-local-dns` metrics"
      ru: "Метрики `node-local-dns`"
  - ports: "4225"
    protocol: TCP/UDP
    description:
      en: "Synchronization of the `speaker` components in `metallb` modules via memberlist protocol"
      ru: "Синхронизация компонентов `speaker` модулей `metallb` через протокол memberlist"
  - ports: "4226"
    protocol: TCP
    description:
      en: "Metrics of the `speaker` components in `metallb` modules"
      ru: "Метрики компонентов `speaker` модулей `metallb`"
  - ports: "4229"
    protocol: TCP
    description:
      en: "`csi-nfs` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `csi-nfs`"
  - ports: "4230"
    protocol: TCP
    description:
      en: "`csi-nfs` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-nfs`"
  - ports: "4231"
    protocol: TCP
    description:
      en: "`csi-hpe` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `csi-hpe`"
  - ports: "4232"
    protocol: TCP
    description:
      en: "`csi-hpe` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-hpe`"
  - ports: "4235"
    protocol: TCP
    description:
      en: "`csi-s3` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `csi-s3`"
  - ports: "4236"
    protocol: TCP
    description:
      en: "`csi-s3` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-s3`"
  - ports: "4237"
    protocol: TCP
    description:
      en: "`csi-scsi-generic` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `csi-scsi-generic`"
  - ports: "4238"
    protocol: TCP
    description:
      en: "`csi-scsi-generic` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-scsi-generic`"
  - ports: "4240"
    protocol: TCP
    description:
      en: CNI Cilium node-to-node healthcheck
      ru: Порт для процедуры healthcheck соседних узлов в CNI Cilium
  - ports: "4241"
    protocol: TCP
    description:
      en: CNI Cilium agent metrics
      ru: Метрики агентов CNI Cilium
  - ports: "4242"
    protocol: TCP
    description:
      en: CNI Cilium operator metrics
      ru: Метрики оператора CNI Cilium
  - ports: "4244"
    protocol: TCP
    description:
      en: "`cilium-hubble` module API"
      ru: "API для модуля `cilium-hubble`"
  - ports: "4245"
    protocol: TCP
    description:
      en: "`chrony-exporter` metrics"
      ru: "Метрики `chrony-exporter`"
  - ports: "4246"
    protocol: TCP
    description:
      en: "`csi-ceph` CephFS CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера CephFS модуля `csi-ceph`"
  - ports: "4247"
    protocol: TCP
    description:
      en: "`csi-ceph` RBD CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера RBD модуля `csi-ceph`"
  - ports: "4248"
    protocol: TCP
    description:
      en: "`csi-yadro-tatlin-unified` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `csi-yadro-tatlin-unified`"
  - ports: "4249"
    protocol: TCP
    description:
      en: "`csi-yadro-tatlin-unified` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-yadro-tatlin-unified`"
  - ports: "4250"
    protocol: TCP
    description:
      en: "`sds-local-volume` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `sds-local-volume`"
  - ports: "4251"
    protocol: TCP
    description:
      en: "`sds-local-volume` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `sds-local-volume`"
  - ports: "4252"
    protocol: TCP
    description:
      en: "`csi-ceph` RBD CSI node healthcheck"
      ru: "Healthcheck CSI-агентов RBD модуля `csi-ceph`"
  - ports: "4253"
    protocol: TCP
    description:
      en: "`csi-ceph` CephFS CSI node healthcheck"
      ru: "Healthcheck CSI-агентов CephFS модуля `csi-ceph`"
  - ports: "4254"
    protocol: TCP
    description:
      en: "`csi-netapp` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `csi-netapp`"
  - ports: "4255"
    protocol: TCP
    description:
      en: "`csi-netapp` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-netapp`"
  - ports: "4256"
    protocol: TCP
    description:
      en: "`csi-netapp` CSI controller metrics"
      ru: "Метрики CSI-контроллера модуля `csi-netapp`"
  - ports: "4257"
    protocol: TCP
    description:
      en: "`csi-netapp` CSI controller API port"
      ru: "Порт API CSI-контроллера модуля `csi-netapp`"
  - ports: "4258"
    protocol: TCP
    description:
      en: "`csi-huawei` CSI controller webhook port"
      ru: "Порт вебхука CSI-контроллера модуля `csi-huawei`"
  - ports: "4259"
    protocol: TCP
    description:
      en: "`csi-huawei` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `csi-huawei`"
  - ports: "4260"
    protocol: TCP
    description:
      en: "`csi-huawei` CSI controller metrics"
      ru: "Метрики CSI-контроллера модуля `csi-huawei`"
  - ports: "4261"
    protocol: TCP
    description:
      en: "`sds-replicated-volume` CSI controller healthcheck"
      ru: "Healthcheck CSI-контроллера модуля `sds-replicated-volume`"
  - ports: "4262"
    protocol: TCP
    description:
      en: "`sds-replicated-volume` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `sds-replicated-volume`"
  - ports: "4263"
    protocol: TCP
    description:
      en: "`service-with-healthchecks` module metrics"
      ru: "Метрики модуля `service-with-healthchecks`"
  - ports: "4269"
    protocol: TCP
    description:
      en: "`sds-replicated-volume` CSI node healthcheck"
      ru: "Healthcheck CSI-агентов модуля `sds-replicated-volume`"
  - ports: "4270"
    protocol: TCP
    description:
      en: "`sds-replicated-volume` CSI node metrics"
      ru: "Метрики CSI-агентов модуля `sds-replicated-volume`"
  - ports: "4286"
    protocol: TCP
    description:
      en: Istio CNI metrics
      ru: Метрики Istio CNI
  - ports: "4287"
    protocol: UDP
    description:
      en: WireGuard port for traffic encryption in CNI Cilium
      ru: Порт WireGuard для шифрования трафика в CNI Cilium
  - ports: "4288"
    protocol: TCP
    description:
      en: "`monitoring-ping` metrics"
      ru: "Метрики `monitoring-ping`"
  - ports: "4289"
    protocol: TCP
    description:
      en: "`monitoring-ping` metrics"
      ru: "Метрики `monitoring-ping`"
  - ports: "4295&#8209;4299"
    protocol: UDP
    description:
      en: |
        <p>Ports used by Cilium for VXLAN encapsulation of inter-pod traffic.
        The port used depends on the DKP version it was **firstly installed** (after upgrading DKP, the port doesn't change) and, starting from 1.71, on the DVP nesting level (DKP inside DVP, see details below):</p>
        <ul>
          <li>DKP 1.64–1.70 — <code>4299/UDP</code> is used; if the <code>virtualization</code> module is enabled, the port changes to <code>4298/UDP</code>;</li>
          <li>DKP ≥ 1.71 — <code>4298/UDP</code> is used; enabling the <code>virtualization</code> module does <b>not</b> change the port;</li>
          <li>DKP inside DVP (nested clusters), starting from 1.71 — the port is assigned based on the nesting level:
            <ul>
              <li>Level 0 — base DVP deployed on a physical cluster: <code>4298/UDP</code></li>
              <li>Level 1 — DVP deployed inside another DVP: <code>4297/UDP</code></li>
            </ul>
          </li>
        </ul>
      ru: |
        <p>Порты, используемые Cilium для VXLAN инкапсуляции трафика между подами.
        Используемый порт зависит от версии DKP, в которой был **первоначально установлен** сам DKP (после обновления DKP порт не изменяется), а начиная с версии 1.71 — от уровня вложенности DVP (DKP внутри DVP, см. подробности ниже):</p>
        <ul>
          <li>DKP 1.64–1.70 — используется <code>4299/UDP</code>, при включении модуля <code>virtualization</code> порт меняется на <code>4298/UDP</code>;</li>
          <li>DKP ≥ 1.71 — используется <code>4298/UDP</code>, включение модуля <code>virtualization</code> порт не меняет;</li>
          <li>DKP внутри DVP (вложенные кластеры), начиная с 1.71 — порт назначается по уровню вложенности:
            <ul>
            <li>уровень 0 — базовый DVP, развёрнутый на физическом кластере: <code>4298/UDP</code>;</li>
            <li>уровень 1 — DVP, развёрнутый внутри другого DVP: <code>4297/UDP</code>.</li>
          </ul>
        </li>
        </ul>
  - ports: "7000&#8209;7999"
    protocol: TCP
    description:
      en: "`sds-replicated-volume` DRBD replication"
      ru: "Репликация DRBD для `sds-replicated-volume`"
  - ports: "8469,&nbsp;8472"
    protocol: UDP
    description:
      en: VXLAN encapsulation (legacy, for DKP clusters was firstly installed before 1.63)
      ru: VXLAN инкапсуляция (устаревшее, для кластеров DKP, установленных до версии 1.63)

- group: ExternalToMaster
  description:
    en: External traffic to master nodes
    ru: Внешний трафик к master-узлам
  destinations:
  - ports: "22"
    protocol: TCP
    description:
      en: SSH for initializing Deckhouse Kubernetes Platform
      ru: SSH для инициализации Deckhouse Kubernetes Platform
  - ports: "6443"
    protocol: TCP
    description:
      en: Direct access to the apiserver
      ru: Прямой доступ к apiserver`у

- group: ExternalToFrontends
  description:
    en: External traffic to frontend nodes
    ru: Внешний трафик к фронтенд-узлам
  destinations:
  - ports: "80, 443"
    protocol: TCP
    description:
      en: Application ports for requests to Ingress controllers over HTTP and HTTPS. Note that these ports are configurable in the IngressNginxController resource and may vary across installations
      ru: Прикладные порты для запросов к Ingress-контроллеру по протоколам HTTP и HTTPS. Обратите внимание, что эти порты настраиваются в ресурсе IngressNginxController и могут отличаться в разных инсталляциях
  - ports: "5416"
    protocol: UDP
    description:
      en: OpenVPN
      ru: OpenVPN
  - ports: "5416"
    protocol: TCP
    description:
      en: OpenVPN
      ru: OpenVPN
  - ports: "10256"
    protocol: TCP
    description:
      en: Healthcheck port for external balancers
      ru: Healthcheck-порт для внешних балансировщиков
  - ports: "30000-32767"
    protocol: TCP
    description:
      en: NodePort range
      ru: Диапазон портов NodePort

- group: NodesToExternal
  description:
    en: External traffic for all nodes
    ru: Внешний трафик для всех узлов
  destinations:
  - ports: "53"
    protocol: UDP
    description:
      en: DNS
      ru: DNS
  - ports: "53"
    protocol: TCP
    description:
      en: DNS
      ru: DNS
  - ports: "123"
    protocol: UDP
    description:
      en: NTP for synchronization with external time servers
      ru: NTP для синхронизации с внешними серверами точного времени
  - ports: "443"
    protocol: TCP
    description:
      en: Container registry
      ru: Container registry
