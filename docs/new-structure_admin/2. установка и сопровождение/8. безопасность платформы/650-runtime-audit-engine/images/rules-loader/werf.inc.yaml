---
artifact: tini-artifact
from: {{ $.Images.BASE_ALPINE }}
shell:
  beforeInstall:
    - apk update && apk add git cmake gcc make musl-dev
  install:
    - git clone {{ .SOURCE_REPO }}/krallin/tini --branch v0.19.0
    - cd /tini/
    - export CFLAGS="-DPR_SET_CHILD_SUBREAPER=36 -DPR_GET_CHILD_SUBREAPER=37"
    - cmake . && make
    - rm -rf /var/cache/apk/*
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/shell-operator
import:
- artifact: tini-artifact
  add: /tini/tini-static
  to: /sbin/tini
  before: setup
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /
  to: /
  includePaths:
  - usr/bin/falco
  - usr/share/falco
  - usr/local/lib/python3
  - usr/local/lib64/python3
  before: setup
git:
- add: /{{ $.ModulePath }}modules/650-{{ $.ModuleName }}/images/{{ $.ImageName }}/hooks
  to: /hooks
  stageDependencies:
    install:
    - '**/*'
shell:
  beforeInstall:
  - apt-get update
  - apt-get install python3 -y
  - rm -rf /var/cache/apt /var/lib/apt /var/lib/rpm
docker:
  ENV:
    SHELL_OPERATOR_HOOKS_DIR: "/hooks"
    LOG_TYPE: json
    PYTHONPATH: "/hooks"
  ENTRYPOINT: ["tini", "--", "/shell-operator"]
  CMD: ["start"]
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
fromImage: common/alt
git:
- add: /{{ $.ModulePath }}modules/650-{{ $.ModuleName }}/images/{{ $.ImageName }}/requirements.txt
  to: /tmp/requirements.txt
  stageDependencies:
    install:
      - '**/*'
import:
- artifact: {{ $.ModuleName }}/falco-artifact
  add: /falco-package
  to: /
  includePaths:
  - usr/bin/
  - usr/share/
  before: install
shell:
  beforeInstall:
  - apt-get update
  - apt-get install python3 pip git -y
  - rm -rf /var/cache/apt /var/lib/apt /var/lib/rpm
  install:
  - export SOURCE_REPO={{ .SOURCE_REPO }}
  - pip3 install -r /tmp/requirements.txt
