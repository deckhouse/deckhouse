name: Milestone Changelog
description: Re-generates changelog for given milestone
inputs:
  milestone:
    description: Milestone object containing number and title
    required: true
  token:
    description: Github token
    required: true
runs:
  using: "composite"
  steps:
    - name: Parse input
      id: args
      shell: bash
      run: |
        echo "::set-output name=milestone_title::${{ fromJSON(inputs.milestone).title }}"
        echo "::set-output name=milestone_number::${{ fromJSON(inputs.milestone).number }}"

    # Fetch merged PRs in milestone
    - name: Find Merged Pull Requests
      id: merged_milestone
      uses: actions/github-script@v5
      with:
        result-encoding: json
        script: |
          const fetch = require('./.github/scripts/js/changelog-find-pulls.js')
          const prs = await fetch({ github, context }, { milestone: process.env.MILESTONE })
          core.setOutput("prs", prs)
      env:
        MILESTONE: ${{ steps.args.outputs.milestone_title }}

    - name: Collect Changelog
      id: changelog
      uses: deckhouse/changelog-action@main
      with:
        token: ${{ inputs.token }}
        pull_requests: ${{ steps.merged_milestone.outputs.prs }}

    ## Generate changes by section in YAML
    - name: Write Changelog YAML
      id: file_yaml
      shell: bash
      run: |
        mkdir -p ./CHANGELOG
        filename='./CHANGELOG/CHANGELOG-${{ steps.args.outputs.milestone_title }}.yml'
        cat > "$filename" <<EOBODYINACTION
        ${{ steps.changelog.outputs.yaml }}
        EOBODYINACTION

    ## Generate changelog for minor version branch in Markdown
    - name: Write Changelog Markdown
      id: file_md
      shell: bash
      run: |
        new_changes="${{ steps.changelog.outputs.partial_markdown }}"

        patch_version="${{ steps.args.outputs.milestone_title }}"
        minor_version="$(echo "${patch_version}" | cut -d. -f1,2 | awk "{print $1$2}")"

        filename="./CHANGELOG/CHANGELOG-${minor_version}.md"

        prev_changes_filename="/tmp/prev_changes.md"
        if [[ -f "$filename" ]]; then
          title_pattern="^# Changelog"
          egrep -v "$title_pattern" "$filename" > "$prev_changes_filename"
        fi

        cat > "$filename" <<EOCHANGELOG
        # Changelog ${minor_version}

        ## ${patch_version}

        $new_changes

        EOCHANGELOG

        if [[ -f "$prev_changes_filename" ]]; then
          cat "$prev_changes_filename" >> "$filename"
          rm "$prev_changes_filename"
        fi

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3.10.1
      with:
        commit-message: Re-generate changelog
        base: main
        branch: changelog/${{ steps.args.outputs.milestone_title }}
        milestone: ${{ steps.args.outputs.milestone_number }}
        title: Changelog ${{ steps.args.outputs.milestone_title }}
        body: ${{ steps.changelog.outputs.markdown }}
        labels: changelog, auto
        token: ${{ inputs.token }}
        delete-branch: true
