#
# THIS FILE IS GENERATED, PLEASE DO NOT EDIT.
#

name: 'Daily CVE tests'
on:
  schedule:
  - cron: '0 23 * * 1-5'
  workflow_dispatch:

concurrency:
  group: cve-daily

jobs:
  skip_tests_repos:
    name: Skip tests repos
    runs-on: ubuntu-latest
    if: ${{ false || github.repository == 'deckhouse/deckhouse' }}
    steps:
    - name: Do nothing
      run: echo "Empty action to fulfil Github requirements."

  fetch_tags_for_test:
    name: Fetch release channel tags
    runs-on: ubuntu-latest
    needs:
      - skip_tests_repos
    steps:
      # <template: checkout_full_step>
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      # </template: checkout_full_step>
      - name: Generate tag => channel matrix
        id: tag_matrix
        run: echo "tag_matrix=$(tools/cve/tag_map.sh)" >> $GITHUB_OUTPUT
    outputs:
      tag_matrix: ${{ steps.tag_matrix.outputs.tag_matrix }}

  test_cve_base_images_main:
    name: Base for main
    needs:
      - skip_tests_repos

    # <template: cve_tests>
    runs-on: [self-hosted, regular]
    steps:

      # <template: checkout_full_step>
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      # </template: checkout_full_step>

      # <template: login_dev_registry_step>
      - name: Check dev registry credentials
        id: check_dev_registry
        env:
          HOST: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to dev registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_dev_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
          username: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
          password: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
          logout: false
      # </template: login_dev_registry_step>

      # <template: login_readonly_registry_step>
      - name: Check readonly registry credentials
        id: check_readonly_registry
        env:
          HOST: ${{secrets.DECKHOUSE_REGISTRY_READ_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to readonly registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_readonly_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_REGISTRY_READ_HOST }}
          username: ${{ secrets.DECKHOUSE_REGISTRY_READ_USER }}
          password: ${{ secrets.DECKHOUSE_REGISTRY_READ_PASSWORD }}
          logout: false
      # </template: login_readonly_registry_step>

      # <template: link_bin_step>
      - name: Link binary cache
        id: link_bin_step
        run: |
          ln -s ~/deckhouse-bin-cache bin
      # </template: link_bin_step>
      - name: Run CVE tests
        env:
          REPO: "dev-registry.deckhouse.io/sys/deckhouse-oss"
          TAG: "main"
        run: |
          echo "‚öìÔ∏è üì§ Checking out candi/image_versions.yml from ${TAG}..."
          git checkout --force "${TAG}" -- candi/image_versions.yml
          echo "‚öìÔ∏è üèé Running CVE tests on ${TAG}..."
          make cve-base-images

      # <template: unlink_bin_step>
      - name: Unlink binary cache
        id: unlink_bin_step
        if: always()
        run: |
          rm bin
      # </template: unlink_bin_step>
    # </template: cve_tests>

  test_cve_report_main:
    name: D8 for main
    needs:
      - test_cve_base_images_main
    # <template: cve_tests>
    runs-on: [self-hosted, regular]
    steps:

      # <template: checkout_full_step>
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      # </template: checkout_full_step>

      # <template: login_dev_registry_step>
      - name: Check dev registry credentials
        id: check_dev_registry
        env:
          HOST: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to dev registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_dev_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
          username: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
          password: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
          logout: false
      # </template: login_dev_registry_step>

      # <template: login_readonly_registry_step>
      - name: Check readonly registry credentials
        id: check_readonly_registry
        env:
          HOST: ${{secrets.DECKHOUSE_REGISTRY_READ_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to readonly registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_readonly_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_REGISTRY_READ_HOST }}
          username: ${{ secrets.DECKHOUSE_REGISTRY_READ_USER }}
          password: ${{ secrets.DECKHOUSE_REGISTRY_READ_PASSWORD }}
          logout: false
      # </template: login_readonly_registry_step>

      # <template: link_bin_step>
      - name: Link binary cache
        id: link_bin_step
        run: |
          ln -s ~/deckhouse-bin-cache bin
      # </template: link_bin_step>
      - name: Run CVE tests
        env:
          REPO: "dev-registry.deckhouse.io/sys/deckhouse-oss"
          TAG: "main"
        run: |
          echo "‚öìÔ∏è üì§ Checking out candi/image_versions.yml from ${TAG}..."
          git checkout --force "${TAG}" -- candi/image_versions.yml
          echo "‚öìÔ∏è üèé Running CVE tests on ${TAG}..."
          make cve-report

      # <template: unlink_bin_step>
      - name: Unlink binary cache
        id: unlink_bin_step
        if: always()
        run: |
          rm bin
      # </template: unlink_bin_step>
    # </template: cve_tests>


  test_cve_base_images_channels:
    name: Base for ${{ matrix.tag }}
    needs:
      - fetch_tags_for_test
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.fetch_tags_for_test.outputs.tag_matrix) }}

    # <template: cve_tests>
    runs-on: [self-hosted, regular]
    steps:

      # <template: checkout_full_step>
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      # </template: checkout_full_step>

      # <template: login_dev_registry_step>
      - name: Check dev registry credentials
        id: check_dev_registry
        env:
          HOST: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to dev registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_dev_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
          username: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
          password: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
          logout: false
      # </template: login_dev_registry_step>

      # <template: login_readonly_registry_step>
      - name: Check readonly registry credentials
        id: check_readonly_registry
        env:
          HOST: ${{secrets.DECKHOUSE_REGISTRY_READ_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to readonly registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_readonly_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_REGISTRY_READ_HOST }}
          username: ${{ secrets.DECKHOUSE_REGISTRY_READ_USER }}
          password: ${{ secrets.DECKHOUSE_REGISTRY_READ_PASSWORD }}
          logout: false
      # </template: login_readonly_registry_step>

      # <template: link_bin_step>
      - name: Link binary cache
        id: link_bin_step
        run: |
          ln -s ~/deckhouse-bin-cache bin
      # </template: link_bin_step>
      - name: Set repo and tag for matrix run
        env:
          matrix_tag: ${{ matrix.tag }}
        run: |
          REPO="registry.deckhouse.io/deckhouse/fe"
          echo "REPO=${REPO}" >> $GITHUB_ENV
          TAG=$(echo "${matrix_tag}" | grep -Eo "^\S+")
          echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Run CVE tests
        run: |
          echo "‚öìÔ∏è üì§ Checking out candi/image_versions.yml from ${TAG}..."
          git checkout --force "${TAG}" -- candi/image_versions.yml
          echo "‚öìÔ∏è üèé Running CVE tests on ${TAG}..."
          make cve-base-images

      # <template: unlink_bin_step>
      - name: Unlink binary cache
        id: unlink_bin_step
        if: always()
        run: |
          rm bin
      # </template: unlink_bin_step>
    # </template: cve_tests>

  test_cve_report_channels:
    name: D8 for ${{ matrix.tag }}
    needs:
      - fetch_tags_for_test
      - test_cve_base_images_channels
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.fetch_tags_for_test.outputs.tag_matrix) }}
    # <template: cve_tests>
    runs-on: [self-hosted, regular]
    steps:

      # <template: checkout_full_step>
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      # </template: checkout_full_step>

      # <template: login_dev_registry_step>
      - name: Check dev registry credentials
        id: check_dev_registry
        env:
          HOST: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to dev registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_dev_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
          username: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
          password: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
          logout: false
      # </template: login_dev_registry_step>

      # <template: login_readonly_registry_step>
      - name: Check readonly registry credentials
        id: check_readonly_registry
        env:
          HOST: ${{secrets.DECKHOUSE_REGISTRY_READ_HOST}}
        run: |
          if [[ -n $HOST ]]; then echo "::set-output name=has_credentials::true"; fi
      - name: Login to readonly registry
        uses: docker/login-action@v1.10.0
        if: ${{ steps.check_readonly_registry.outputs.has_credentials == 'true' }}
        with:
          registry: ${{ secrets.DECKHOUSE_REGISTRY_READ_HOST }}
          username: ${{ secrets.DECKHOUSE_REGISTRY_READ_USER }}
          password: ${{ secrets.DECKHOUSE_REGISTRY_READ_PASSWORD }}
          logout: false
      # </template: login_readonly_registry_step>

      # <template: link_bin_step>
      - name: Link binary cache
        id: link_bin_step
        run: |
          ln -s ~/deckhouse-bin-cache bin
      # </template: link_bin_step>
      - name: Set repo and tag for matrix run
        env:
          matrix_tag: ${{ matrix.tag }}
        run: |
          REPO="registry.deckhouse.io/deckhouse/fe"
          echo "REPO=${REPO}" >> $GITHUB_ENV
          TAG=$(echo "${matrix_tag}" | grep -Eo "^\S+")
          echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Run CVE tests
        run: |
          echo "‚öìÔ∏è üì§ Checking out candi/image_versions.yml from ${TAG}..."
          git checkout --force "${TAG}" -- candi/image_versions.yml
          echo "‚öìÔ∏è üèé Running CVE tests on ${TAG}..."
          make cve-report

      # <template: unlink_bin_step>
      - name: Unlink binary cache
        id: unlink_bin_step
        if: always()
        run: |
          rm bin
      # </template: unlink_bin_step>
    # </template: cve_tests>
