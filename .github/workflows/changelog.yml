name: Changelog
on:
  pull_request_target:
    types:
      - "closed"
      - "edited"
    branches:
      - "main"
  issues:
    types:
      - "milestoned"
      # We don't track "demilestoned" event type. If we did, changing a milestone would always
      # trigger duplicating workflows one of which would fail due to concurrent updates of the same
      # changelog branch. We hope, that milestones change to other milestones, and are not removed
      # at all. To update changelog, one should call `/changelog` command in a changelog PR.
      # - "demilestoned"
jobs:
  filter:
    name: Filter Issues
    runs-on: ubuntu-latest
    # In all cases:
    #   skipping the changelog PR itself, provided it is detected by label
    #
    # Conditions
    #   1. pull_request is edited or merged
    #   OR
    #   2. milestone is set/removed (via issue api), we check the related PR in step
    if: |
      (
        github.event.pull_request &&
        !contains(github.event.pull_request.labels.*.name, 'changelog')
      ) && (
        (
          github.event.pull_request.state == 'closed'         &&
          github.event.pull_request.merged                    &&
          github.event.pull_request.milestone.state == 'open'
        ) || (
          github.event.action == 'milestoned' ||
          github.event.action == 'demilestoned'
        )
      )
    steps:
      - name: Check PR
        id: pr
        uses: actions/github-script@v5
        with:
          script: |
            // 'demilestoned' should also be checked if used as trigger
            if (context.eventName === 'milestoned') {
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
              });

              if (pr.state !== 'closed' || !pr.merged) {
                // Skip this PR, the change is not applied yet
                return;
              }
            }

            core.setOutput("ok", "ok")
    outputs:
      ok: steps.pr.outputs.ok

  milestones:
    if: needs.filter.outputs.ok
    name: Open Milestones
    runs-on: ubuntu-latest
    needs: filter
    steps:
      - name: Find Open Milestones
        id: milestones
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGELOG_ACCESS_TOKEN }}
        run: |
          # We expect the number of simultaneously open milestones will not exceed 10.
          # https://docs.github.com/en/rest/reference/issues#milestones
          milestones="$(gh api 'repos/${{ github.repository }}/milestones?state=open&per_page=100')"

          count="$(echo $milestones | jq '. | length')"

          echo "::set-output name=list::${milestones}"
          echo "::set-output name=count::${count}"

    outputs:
      list: ${{ steps.milestones.outputs.list }}
      count: ${{ steps.milestones.outputs.count }}

  chanegelogs:
    if: needs.milestones.outputs.count > 0
    name: Changelog ${{ matrix.milestone.title }}
    runs-on: ubuntu-latest
    needs: milestones
    strategy:
      matrix:
        milestone: ${{ fromJSON( needs.milestones.outputs.list ) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create changelog
        uses: ./.github/actions/milestone-changelog
        with:
          milestone: ${{ toJSON( matrix.milestone ) }}
          token: ${{ secrets.CHANGELOG_ACCESS_TOKEN }}
