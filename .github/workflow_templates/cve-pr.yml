# Copyright 2022 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{!{- $workflowName              := "Manual CVE on PR" -}!}
{!{- $enableWorkflowOnTestRepos := true -}!}


{!{ define "cve_tests" }!}
# <template: cve_tests>

- name: Run Deckhouse images CVE tests on ${{env.TAG}}
  env:
    TRIVY_TOKEN: ${{secrets.FOX_ACCESS_TOKEN}}
    DEFECTDOJO_API_TOKEN: ${{secrets.DEFECTDOJO_API_TOKEN}}
    DEFECTDOJO_HOST: ${{secrets.DEFECTDOJO_HOST}}
    DECKHOUSE_PRIVATE_REPO: ${{secrets.DECKHOUSE_PRIVATE_REPO}}
    TRIVY_PROJECT_ID: "2181"
    TRIVY_DB_URL: ${{secrets.DECKHOUSE_REGISTRY_HOST}}/deckhouse/fe/security/trivy-db:2 
    TRIVY_JAVA_DB_URL: ${{secrets.DECKHOUSE_REGISTRY_HOST}}/deckhouse/fe/security/trivy-java-db:1
    TRIVY_POLICY_URL: ${{secrets.DECKHOUSE_REGISTRY_HOST}}/deckhouse/fe/security/trivy-bdu:1
  run: |
    echo "⚓️ 🏎 Running Deckhouse images CVE tests on ${TAG}..."
    make cve-report

- name: Rename report artifacts
  if: success()
  run: |
    tar -zcvf out/trivy_json_reports.tar.gz out/json
- name: Create fail artifact
  if: failure()
  run: |
    echo "Trivy tests for ${TAG} have failed." > "out/${TAG}_test-failed.txt"
- name: Upload report artifacts
  if: success()
  uses: {!{ index (ds "actions") "actions/upload-artifact" }!}
  with:
    name: cve-reports
    path: |
      out/trivy_json_reports.tar.gz
- name: Upload fail artifact
  if: failure()
  uses: {!{ index (ds "actions") "actions/upload-artifact" }!}
  with:
    name: cve-reports
    path: |
      out/${{ env.TAG }}_test-failed.txt
# </template: cve_tests>
{!{- end -}!}

{!{- $ctx := . }!}

name: '{!{ $workflowName }!}'
on: 
  pull_request:
    types: [opened, reopened]

jobs:
  skip_tests_repos:
    name: Skip tests repos
    runs-on: ubuntu-latest
    if: ${{ {!{ $enableWorkflowOnTestRepos }!} || github.repository == 'deckhouse/deckhouse' }}
    steps:
    - name: Do nothing
      run: echo "Empty action to fulfil Github requirements."

  test_cve_report_main:
    name: Main
    needs:
      - skip_tests_repos
    runs-on: [ self-hosted, regular, selectel ]
    env:
      IMAGE: "dev-registry.deckhouse.io/sys/deckhouse-oss"
      TAG: ${{ github.event.inputs.tag }}
    steps:
{!{ tmpl.Exec "checkout_full_step"           $ctx | strings.Indent 6 }!}
{!{ tmpl.Exec "login_dev_registry_step"      $ctx | strings.Indent 6 }!}
{!{ tmpl.Exec "link_bin_step"                     | strings.Indent 6 }!}
{!{ tmpl.Exec "cve_tests"                         | strings.Indent 6 }!}
{!{ tmpl.Exec "unlink_bin_step"                   | strings.Indent 6 }!}



