# Copyright 2022 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# on push to tags
{!{- $ctx := dict -}!}
{!{- $ctx = coll.Merge $ctx . }!}

name: Build and test for release

on:
  workflow_dispatch:
    inputs:
      issue_id:
        description: 'Id of issue where label was set'
        required: false
      issue_number:
        description: 'Number of issue where label was set'
        required: false
      comment_id:
        description: 'Id of comment in issue where to put workflow run status'
        required: false
      editions:
        description: 'Comma-separated list of editions to build'
        required: false
        type: string
      svace_enabled:
        description: 'Enable svace build and analyze'
        type: boolean
        required: false

env:
{!{ tmpl.Exec "werf_envs" | strings.Indent 2 }!}
{!{ tmpl.Exec "git_source_envs" | strings.Indent 2 }!}

# Cancel in-progress jobs for the same tag/branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
{!{ tmpl.Exec "git_info_job" $ctx | strings.Indent 2 }!}
  detect_editions:
    name: Detect editions
    runs-on: "regular"
    outputs:
      BUILD_CE: ${{steps.detect_editions.outputs.BUILD_CE}}
      BUILD_EE: ${{steps.detect_editions.outputs.BUILD_EE}}
      BUILD_BE: ${{steps.detect_editions.outputs.BUILD_BE}}
      BUILD_SE: ${{steps.detect_editions.outputs.BUILD_SE}}
      BUILD_SE-plus: ${{steps.detect_editions.outputs.BUILD_SE-plus}}
    steps:
      - name: Detect editions
        id: detect_editions
        env:
          EDITIONS: ${{ github.event.inputs.editions }}
        run: |
          echo "Input allowed editions: '${EDITIONS}'"

          EMPTY_EDITIONS=yes

          for edition in CE EE BE SE SE-plus ; do
            if grep -i ",${edition}," <<<",${EDITIONS}," 2>/dev/null 1>&2 ; then
              echo "  - enable build of ${edition} edition."
              echo "BUILD_${edition}=true" >> $GITHUB_OUTPUT
              EMPTY_EDITIONS=no
            fi
          done

          if [[ $EMPTY_EDITIONS == "yes" ]] ; then
            echo "No editions requested. Building only FE."
          fi

{!{ tmpl.Exec "check_changelog_template" $ctx | strings.Indent 2 }!}

  build_fe:
    name: Build FE
    needs:
      - git_info
      - check_changelog
    env:
      WERF_ENV: "FE"
      SVACE_ANALYZE_HOST: "${{ secrets.SVACE_ANALYZE_HOST }}"
      SVACE_ANALYZE_SSH_USER: "${{ secrets.SVACE_ANALYZE_SSH_USER }}"
      SVACE_ENABLED: ${{ github.event.inputs.svace_enabled }}
{!{ tmpl.Exec "build_template" (slice $ctx "release") | strings.Indent 4 }!}
{!{ tmpl.Exec "send_fail_report" . | strings.Indent 6 }!}

  build_ee:
    name: Build EE
    if: ${{ startsWith(github.ref, 'refs/tags/v') || (needs.detect_editions.outputs.BUILD_EE == 'true') }}
    needs:
      - git_info
      - build_fe
      - detect_editions
    env:
      WERF_ENV: "EE"
{!{ tmpl.Exec "build_template" (slice $ctx "release") | strings.Indent 4 }!}
{!{ tmpl.Exec "send_fail_report" . | strings.Indent 6 }!}

  build_se:
    name: Build SE
    if: ${{ startsWith(github.ref, 'refs/tags/v') || (needs.detect_editions.outputs.BUILD_SE == 'true') }}
    needs:
      - git_info
      - build_fe
      - detect_editions
    env:
      WERF_ENV: "SE"
{!{ tmpl.Exec "build_template" (slice $ctx "release") | strings.Indent 4 }!}

  build_se_plus:
    name: Build SE-plus
    if: ${{ startsWith(github.ref, 'refs/tags/v') || (needs.detect_editions.outputs.BUILD_SE-plus == 'true') }}
    needs:
      - git_info
      - build_fe
      - detect_editions
    env:
      WERF_ENV: "SE-plus"
{!{ tmpl.Exec "build_template" (slice $ctx "release") | strings.Indent 4 }!}

  build_be:
    name: Build BE
    if: ${{ startsWith(github.ref, 'refs/tags/v') || (needs.detect_editions.outputs.BUILD_BE == 'true') }}
    needs:
      - git_info
      - build_fe
      - detect_editions
    env:
      WERF_ENV: "BE"
{!{ tmpl.Exec "build_template" (slice $ctx "release") | strings.Indent 4 }!}

  build_ce:
    name: Build CE
    if: ${{ startsWith(github.ref, 'refs/tags/v') || (needs.detect_editions.outputs.BUILD_CE == 'true') }}
    needs:
      - git_info
      - build_fe
      - detect_editions
    env:
      WERF_ENV: "CE"
{!{ tmpl.Exec "build_template" (slice $ctx "release") | strings.Indent 4 }!}

  analyze_deckhouse:
    if: ${{ github.event.inputs.svace_enabled == 'true' }}
    name: Deckhouse static analysis
    needs:
      - build_fe
    runs-on: [self-hosted, regular]
    steps:
      - uses: deckhouse/modules-actions/svace_analyze@v4
        with:
          project_group: "DKP"
          ci_commit_ref_name: ${{ github.ref_name }}
          ci_commit_hash: ${{ github.sha }}
          svace_analyze_host: "${{ secrets.SVACE_ANALYZE_HOST }}"
          svace_analyze_ssh_user: "${{ secrets.SVACE_ANALYZE_SSH_USER }}"
          svacer_url: "${{ secrets.SVACER_URL }}"
          svacer_import_user: "${{ secrets.SVACER_IMPORT_USER }}"
          svacer_import_password: "${{ secrets.SVACER_IMPORT_PASSWORD }}"
          svace_analyze_ssh_private_key: "${{ secrets.SVACE_ANALYZE_SSH_PRIVATE_KEY }}"

  compare_internal_modules:
    name: Compare internal modules
    needs:
      - build_fe
      - build_ee
      - build_ce
      - build_be
      - build_se
      - build_se_plus
    if: ${{ always() && needs.build_fe.result == 'success' }}
    runs-on: regular
    steps:
      - uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.12.3'
      {!{ tmpl.Exec "checkout_step" . | strings.Indent 6 }!}
      - name: Get artifacts
        uses: {!{ index (ds "actions") "actions/download-artifact" }!}
      - name: Compare modules
        run: python .github/scripts/python/compare_internal_modules.py
