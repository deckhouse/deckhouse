# Copyright 2025 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Validations / Pull Request Changes
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

# Cancel in-progress jobs for the same PR (pull_request_target event) or for the same branch (push event).
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  check-pr-changes:
    name: Validate Pull Request Changes
    runs-on: ubuntu-latest
    steps:
    - uses: {!{ index (ds "actions") "actions/checkout" }!}
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - run: npm install yaml marked
    - name: Check pr changes
      uses: {!{ index (ds "actions") "actions/github-script" }!}
      with:
        script: |
          const { find } = require('./.github/scripts/js/changelog-find-sections.js');
          const { validatePullRequestChangelog } = require('./.github/scripts/js/validators/pr-changes-validator.js');
          const { parseMarkdown, findSectionInMarkdown } = require('./.github/scripts/js/parsers/md-parser.js');

          find([".","modules","ee/modules","ee/be/modules","ee/se/modules","ee/fe/modules","ee/se-plus"], ["^\\.","CHANGELOG","^ee$","^modules$"])

          const rootDirs = [
            ".",
            "modules",
            "ee/modules",
            "ee/be/modules",
            "ee/se/modules",
            "ee/fe/modules",
            "ee/se-plus/modules"
          ]
          const excludePatterns = [
            "^\\.",
            "CHANGELOG",
            "^ee$",
            "^modules$"
          ]
          
          let allowedSections = find(rootDirs, excludePatterns);
          allowedSections = allowedSections.concat(['ci', 'dependabot', 'testing', 'tools'])

          /**
          *
          * @param {string} owner
          * @param {string} repo
          * @param {number} pullRequestID
          */
          async function getPR(owner, repo, pullRequestID) {
            const { data } = await github.rest.pulls.get({
                owner: owner,
                repo: repo,
                pull_number: pullRequestID,
            });

            return data.body;
          }

          try {
            const prBody = await getPR(context.repo.owner, context.repo.repo, context.issue.number);
            const mdTokens = parseMarkdown(prBody);
            const changelogEntries = findSectionInMarkdown(mdTokens, 'Changelog entries');
            validatePullRequestChangelog(changelogEntries, allowedSections);
          } catch(error) {
            throw(error)
          }
