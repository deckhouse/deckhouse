{!{ define "cve_tests" }!}
# <template: cve_tests>
{!{- $ctx       := index . 0 }!}
{!{- $args_name := index . 1 }!}
{!{- $args := printf "cve-%s" $args_name }!}
runs-on: [self-hosted, regular]
steps:
{!{ tmpl.Exec "started_at_output"       $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "checkout_ref"            $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_dev_registry_step" $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_rw_registry_step"  $ctx | strings.Indent 2 }!}
  - name: Run CVE tests
    run: |
      echo "‚öìÔ∏è üèé Running CVE tests on ${{ github.ref_name }}..."
      make {!{ $args }!}
# </template: cve_tests>
{!{- end -}!}


{!{- $ctx := . -}!}
{!{- $enableWorkflowOnTestRepos := true -}!}
{!{- $workflowName := "Daily CVE tests" -}!}

name: '{!{ $workflowName }!}'
on:
  schedule:
  - cron: '0 23 * * 1-5'
  workflow_dispatch:

# Always run a single job at a time.
# Note: Concurrency is currently in beta and subject to change.
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: cve-daily

jobs:
  skip_tests_repos:
    name: Skip tests repos
    runs-on: ubuntu-latest
    if: ${{ {!{ $enableWorkflowOnTestRepos }!} || github.repository == 'deckhouse/deckhouse' }}
    steps:
    - name: Do nothing
      run: echo "Empty action to fulfil Github requirements."


# Note: git_info is needed for werf.yaml
{!{- $gitInfoJobCtx := coll.Merge . (dict "dependJobs" (slice "skip_tests_repos")) -}!}
{!{- $dependsJobsForAlert := slice "skip_tests_repos" "git_info" -}!}
{!{ tmpl.Exec "git_info_job" $gitInfoJobCtx | strings.Indent 2 }!}

{!{/* Jobs for each CRI and Kubernetes version */}!}
{!{- $channelNames := slice "main" "alpha" "beta" "early-access" "stable" "rock-solid" -}!}
{!{- range $channelName := $channelNames -}!}
{!{-   $jobCtx := coll.Merge $ctx (dict "ref" $channelName)}!}
{!{-   $repo := "registry.deckhouse.io/deckhouse/fe" -}!}
{!{-   if eq $channelName "main" -}!}
{!{-     $repo = "dev-registry.deckhouse.io/sys/deckhouse-oss" -}!}
{!{-   else -}!}
{!{-     $repo = "registry.deckhouse.io/deckhouse/fe" -}!}
{!{    end }!}

  test_cve_base_images_{!{$channelName}!}:
    name: Base images on {!{$channelName}!}
    needs:
      - git_info
      - skip_tests_repos
{!{ tmpl.Exec "cve_tests" (slice $jobCtx "base-images") | strings.Indent 4 }!}

  test_cve_report_{!{$channelName}!}:
    name: Deckhouse images on {!{$channelName}!}
    needs:
      - git_info
      - skip_tests_repos
    env:
      REPO: {!{$repo}!}
      TAG: {!{$channelName}!}
{!{- tmpl.Exec "cve_tests" (slice $jobCtx "report") | strings.Indent 4 -}!}
{!{- end }!}
