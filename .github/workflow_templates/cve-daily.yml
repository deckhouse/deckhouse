{!{- $workflowName              := "Daily CVE tests" -}!}
{!{- $enableWorkflowOnTestRepos := false -}!}
{!{- $testAllReleaseChannels    := true -}!}
{!{- $dependOnBaseImageTest     := true -}!}


{!{ define "cve_tests" }!}
# <template: cve_tests>
{!{- $ctx           := index . 0 }!}
{!{- $args_name     := index . 1 }!}
{!{- $is_matrix_job := ( index . 2 | eq "matrix" ) }!}
{!{- $args          := printf "cve-%s" $args_name }!}
runs-on: [self-hosted, regular]
steps:
{!{ tmpl.Exec "checkout_full_step"           $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_dev_registry_step"      $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_readonly_registry_step" $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "link_bin_step"                     | strings.Indent 2 }!}
{!{- if $is_matrix_job }!}
  - name: Set repo and tag for matrix run
    env:
      matrix_tag: ${{ matrix.tag }}
    run: |
      REPO="registry.deckhouse.io/deckhouse/fe"
      echo "REPO=${REPO}" >> $GITHUB_ENV
      TAG=$(echo "${matrix_tag}" | grep -Eo "^\S+")
      echo "TAG=${TAG}" >> $GITHUB_ENV
{!{- end }!}
  - name: Run CVE tests
{!{- if not $is_matrix_job }!}
    env:
      REPO: "dev-registry.deckhouse.io/sys/deckhouse-oss"
      TAG: "main"
{!{- end }!}
    run: |
      echo "⚓️ 📤 Checking out candi/image_versions.yml from ${TAG}..."
      git checkout --force "${TAG}" -- candi/image_versions.yml
      echo "⚓️ 🏎 Running CVE tests on ${TAG}..."
      make {!{ $args }!}
{!{ tmpl.Exec "unlink_bin_step" | strings.Indent 2 }!}
# </template: cve_tests>
{!{- end -}!}


{!{- $ctx := . -}!}

name: '{!{ $workflowName }!}'
on:
  schedule:
  - cron: '0 23 * * 1-5'
  workflow_dispatch:

concurrency:
  group: cve-daily

jobs:
  skip_tests_repos:
    name: Skip tests repos
    runs-on: ubuntu-latest
    if: ${{ {!{ $enableWorkflowOnTestRepos }!} || github.repository == 'deckhouse/deckhouse' }}
    steps:
    - name: Do nothing
      run: echo "Empty action to fulfil Github requirements."

  fetch_tags_for_test:
    name: Fetch release channel tags
    runs-on: ubuntu-latest
    needs:
      - skip_tests_repos
    steps:
{!{- tmpl.Exec "checkout_full_step" $ctx | strings.Indent 6 }!}
      - name: Generate tag => channel matrix
        id: tag_matrix
        run: echo "tag_matrix=$(tools/cve/tag_map.sh)" >> $GITHUB_OUTPUT
    outputs:
      tag_matrix: ${{ steps.tag_matrix.outputs.tag_matrix }}

  test_cve_base_images_main:
    name: Base for main
    needs:
      - skip_tests_repos
{!{ tmpl.Exec "cve_tests" (slice $ctx "base-images" "main") | strings.Indent 4 }!}

  test_cve_report_main:
    name: D8 for main
    needs:
{!{- if $dependOnBaseImageTest }!}
      - test_cve_base_images_main
{!{- else }!}
      - skip_tests_repos
{!{- end }!}
{!{- tmpl.Exec "cve_tests" (slice $ctx "report" "main") | strings.Indent 4 }!}

{!{ if $testAllReleaseChannels }!}
  test_cve_base_images_channels:
    name: Base for ${{ matrix.tag }}
    needs:
      - fetch_tags_for_test
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.fetch_tags_for_test.outputs.tag_matrix) }}
{!{ tmpl.Exec "cve_tests" (slice $ctx "base-images" "matrix") | strings.Indent 4 }!}

  test_cve_report_channels:
    name: D8 for ${{ matrix.tag }}
    needs:
      - fetch_tags_for_test
{!{- if $dependOnBaseImageTest }!}
      - test_cve_base_images_channels
{!{- end }!}
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.fetch_tags_for_test.outputs.tag_matrix) }}
{!{- tmpl.Exec "cve_tests" (slice $ctx "report" "matrix") | strings.Indent 4 }!}
{!{- end }!}
