{!{ define "unit_run_args" }!}
# <template: unit_run_args>
args: 'make tests-modules'
# <template: unit_run_args>
{!{- end -}!}

{!{ define "matrix_run_args" }!}
# <template: matrix_run_args>
args: 'make tests-matrix'
# </template: matrix_run_args>
{!{- end -}!}

{!{ define "dhctl_run_args" }!}
# <template: dhctl_run_args>
args: 'DOCKERIZED=1 tools/dockerized.sh "make ci -C dhctl"'
# </template: dhctl_run_args>
{!{- end -}!}

{!{ define "golangci_lint_run_args" }!}
# <template: golangci_lint_run_args>
args: 'make lint'
# </template: golangci_lint_run_args>
{!{- end -}!}

{!{ define "openapi_test_cases_run_args" }!}
# <template: openapi_test_cases_run_args>
args: 'make tests-openapi'
# </template: openapi_test_cases_run_args>
{!{- end -}!}

{!{ define "validators_run_args" }!}
# <template: validators_run_args>
args: 'make validate'
# </template: validators_run_args>
{!{- end -}!}

{!{ define "tests_template" }!}
# <template: tests_template>
{!{- $ctx       := index . 0 }!}
{!{- $args_name := index . 1 }!}
{!{- $build_job := index . 2 }!}
{!{- $args_tmpl := printf "%s_run_args" $args_name }!}
{!{- $default   := dict "image" "tests" "args" "echo no args" "docker_options" "" }!}
{!{- $run       := coll.Merge (tmpl.Exec $args_tmpl | yaml) $default }!}
runs-on: [self-hosted, regular]
steps:
{!{ tmpl.Exec "started_at_output"       $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "checkout_full_step"      $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_dev_registry_step" $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_rw_registry_step"  $ctx | strings.Indent 2 }!}
  - name: Run tests
    run: |
      {!{ $run.args }!}
# </template: tests_template>
{!{- end -}!}

{!{/* TODO change args in tests_template and merge two templates */}!}
{!{ define "tests_before_build_template" }!}
# <template: tests_before_build_template>
{!{- $ctx       := index . 0 }!}
{!{- $args_name := index . 1 }!}
{!{- $args_tmpl := printf "%s_run_args" $args_name }!}
{!{- $default   := dict "image" "tests" "args" "echo no args" "docker_options" "" }!}
{!{- $run       := coll.Merge (tmpl.Exec $args_tmpl | yaml) $default }!}
runs-on: [self-hosted, regular]
steps:
{!{ tmpl.Exec "started_at_output"       $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "checkout_full_step"      $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_dev_registry_step" $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_rw_registry_step"  $ctx | strings.Indent 2 }!}
  - name: Run tests
    run: |
      {!{ $run.args }!}
# </template: tests_before_build_template>
{!{- end -}!}
