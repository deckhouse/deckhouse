{!{/* Source: .gitlab/ci_templates/tests.yml */}!}

{!{ define "unit_run_args" }!}
# <template: unit_run_args>
args: 'go test -timeout=${{env.TEST_TIMEOUT}} -vet=off ./modules/... ./global-hooks/...'
docker_options: '-w /deckhouse -v ${{env.HOME}}/go-pkg-cache:/go/pkg'
# <template: unit_run_args>
{!{- end -}!}

{!{ define "matrix_run_args" }!}
# <template: matrix_run_args>
args: 'go test ./testing/matrix/ -v'
docker_options: '-w /deckhouse -v ${{env.HOME}}/go-pkg-cache:/go/pkg'
# </template: matrix_run_args>
{!{- end -}!}

{!{ define "dhctl_run_args" }!}
# <template: dhctl_run_args>
image: dhctl-tests
args: 'make ci'
docker_options: '-w /deckhouse/dhctl -v ${{env.HOME}}/go-pkg-cache:/go/pkg'
# </template: dhctl_run_args>
{!{- end -}!}

{!{ define "golangci_lint_run_args" }!}
# <template: golangci_lint_run_args>
args: 'sh -c "go generate tools/register.go && golangci-lint run"'
docker_options: '-w /deckhouse -v ${{github.workspace}}:/deckhouse -e "TERM=xterm-256color" -v ${{env.HOME}}/go-pkg-cache:/go/pkg'
# </template: golangci_lint_run_args>
{!{- end -}!}

{!{ define "openapi_test_cases_run_args" }!}
# <template: openapi_test_cases_run_args>
args: 'ginkgo -vet=off ./testing/openapi_cases/'
docker_options: '-v ${{github.workspace}}:/deckhouse -w /deckhouse -v ${{env.HOME}}/go-pkg-cache:/go/pkg'
# </template: openapi_test_cases_run_args>
{!{- end -}!}

{!{ define "validators_run_args" }!}
# <template: validators_run_args>
args: 'go test -tags=validation -run Validation -timeout=${{env.TEST_TIMEOUT}} ./testing/...'
docker_options: '-w /deckhouse -v ${{env.HOME}}/go-pkg-cache:/go/pkg'
# </template: validators_run_args>
{!{- end -}!}

{!{ define "tests_template" }!}
# <template: tests_template>
{!{- $ctx       := index . 0 }!}
{!{- $args_name := index . 1 }!}
{!{- $buildType := index . 2 }!}
{!{- $args_tmpl := printf "%s_run_args" $args_name }!}
{!{- $default   := dict "image" "tests" "args" "echo no args" "docker_options" "" }!}
{!{- $run       := coll.Merge (tmpl.Exec $args_tmpl | yaml) $default }!}
runs-on: [self-hosted, regular]
steps:
{!{ tmpl.Exec "started_at_output"             $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "checkout_full_step"            $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_dev_registry_step"       $ctx | strings.Indent 2 }!}
{!{ tmpl.Exec "login_readonly_registry_step"  $ctx | strings.Indent 2 }!}
  - name: Run tests
    env:
      DECKHOUSE_REGISTRY_HOST: ${{secrets.DECKHOUSE_REGISTRY_HOST}}
      CI_COMMIT_REF_SLUG: ${{needs.git_info.outputs.ci_commit_ref_slug}}
    run: |
{!{ if eq $buildType "release" }!}
      TESTS_IMAGE_URL=${DECKHOUSE_REGISTRY_HOST}/deckhouse/fe/tests:${CI_COMMIT_REF_SLUG}
{!{ else }!}
      TESTS_IMAGE_URL=${DEV_REGISTRY_PATH}/tests:${CI_COMMIT_REF_SLUG}
{!{ end }!}
      docker run {!{ $run.docker_options }!} ${TESTS_IMAGE_URL} {!{ $run.args }!}
# </template: tests_template>
{!{- end -}!}
