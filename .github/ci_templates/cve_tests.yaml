{!{ define "cve_scan_deckhouse_images_regular" }!}
# <template: cve_scan_deckhouse_images_regular>
- name: Run Deckhouse images CVE tests on ${{env.TAG}}
  env:
    DEFECTDOJO_API_TOKEN: ${{secrets.DEFECTDOJO_API_TOKEN}}
    DEFECTDOJO_HOST: ${{secrets.DEFECTDOJO_HOST}}
    DECKHOUSE_PRIVATE_REPO: ${{secrets.DECKHOUSE_PRIVATE_REPO}}
    DEV_REGISTRY: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
    DEV_REGISTRY_USER: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
    DEV_REGISTRY_PASSWORD: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
    PROD_REGISTRY: ${{ secrets.DECKHOUSE_REGISTRY_READ_HOST }}
    PROD_REGISTRY_USER: ${{ secrets.DECKHOUSE_REGISTRY_READ_USER }}
    PROD_REGISTRY_PASSWORD: ${{ secrets.DECKHOUSE_REGISTRY_READ_PASSWORD }}
    TRIVY_BIN_VERSION: "v0.60.0"
    TRIVY_PROJECT_ID: "2181"
    TRIVY_DB_URL: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}/sys/deckhouse-oss/security/trivy-db:2
    TRIVY_JAVA_DB_URL: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}/sys/deckhouse-oss/security/trivy-java-db:1
    TRIVY_POLICY_URL: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}/sys/deckhouse-oss/security/trivy-bdu:1
    SEVERITY: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
  run: |
    echo "‚öìÔ∏è üèé Running Deckhouse images CVE tests on ${TAG}..."
    ./.github/scripts/cve_scan.sh -r
# </template: cve_scan_deckhouse_images_regular>
{!{- end -}!}

{!{ define "cve_scan_deckhouse_images_pr" }!}
# <template: cve_scan_deckhouse_images_pr>
- name: Run Deckhouse images CVE tests on ${{env.TAG}}
  env:
    DEFECTDOJO_API_TOKEN: ${{secrets.DEFECTDOJO_API_TOKEN}}
    DEFECTDOJO_HOST: ${{secrets.DEFECTDOJO_HOST}}
    DECKHOUSE_PRIVATE_REPO: ${{secrets.DECKHOUSE_PRIVATE_REPO}}
    DEV_REGISTRY: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
    DEV_REGISTRY_USER: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
    DEV_REGISTRY_PASSWORD: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
    TRIVY_BIN_VERSION: "v0.60.0"
    TRIVY_PROJECT_ID: "2181"
    TRIVY_DB_URL: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}/sys/deckhouse-oss/security/trivy-db:2
    TRIVY_JAVA_DB_URL: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}/sys/deckhouse-oss/security/trivy-java-db:1
    TRIVY_POLICY_URL: ${{secrets.DECKHOUSE_DEV_REGISTRY_HOST}}/sys/deckhouse-oss/security/trivy-bdu:1
    SEVERITY: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
  run: |
    echo "‚öìÔ∏è üèé Running Deckhouse images CVE tests on ${TAG}..."
    ./.github/scripts/cve_scan.sh -p
# </template: cve_scan_deckhouse_images_pr>
{!{- end -}!}

{!{ define "cve_tests_upload_reports_artifacts" }!}
# <template: cve_tests_upload_reports_artifacts>
- name: Archive report artifacts
  if: success()
  run: |
    tar -zcvf ${{ env.WORKDIR }}/artifacts/trivy_json_reports.tar.gz ${{ env.WORKDIR }}/deckhouse
- name: Create fail artifact
  if: failure()
  run: |
    echo "Trivy tests for ${TAG} have failed." > "${{ env.WORKDIR }}/artifacts/${TAG}_test-failed.txt"
    tar -zcvf ${{ env.WORKDIR }}/artifacts/trivy_json_reports.tar.gz ${{ env.WORKDIR }}/deckhouse
- name: Upload report artifacts
  if: success()
  uses: {!{ index (ds "actions") "actions/upload-artifact" }!}
  with:
    name: cve-reports
    path: |
      ${{ env.WORKDIR }}/artifacts/trivy_json_reports.tar.gz
- name: Upload fail artifact
  if: failure()
  uses: {!{ index (ds "actions") "actions/upload-artifact" }!}
  with:
    name: cve-reports
    path: |
      ${{ env.WORKDIR }}/artifacts/${{ env.TAG }}_test-failed.txt
      ${{ env.WORKDIR }}/artifacts/trivy_json_reports.tar.gz
- name: Remove workdir
  run: |
    rm -r ${{ env.WORKDIR }}
# </template: cve_tests_upload_reports_artifacts>
{!{- end -}!}

{!{ define "defectdojo_dev_tests_rotator" }!}
# <template: defectdojo_dev_tests_rotator>
- name: Set up Python
  uses: actions/setup-python@v4
  with:
    python-version: ${{ env.PYTHON_VERSION }}
- name: Install dependencies
  run: pip install requests
- name: DefectDojo rotate dev tests
  env:
    DEFECTDOJO_API_TOKEN: ${{secrets.DEFECTDOJO_API_TOKEN}}
    DEFECTDOJO_HOST: ${{secrets.DEFECTDOJO_HOST}}
    DEFECTDOJO_DEV_TESTS_ROTATION_DAYS: 7
  shell: bash
  run: |
    python .github/scripts/python/defectdojo_dev_tests_rotator.py
# </template: defectdojo_dev_tests_rotator>
{!{- end -}!}
