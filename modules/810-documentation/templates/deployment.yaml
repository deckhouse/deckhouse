{{- if and .Values.global.modules.publicDomainTemplate .Values.global.clusterIsBootstrapped }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: documentation
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "documentation")) | nindent 2 }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: documentation
  template:
    metadata:
      labels:
        app: documentation
    spec:
      {{- include "helm_lib_node_selector" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "cluster-low") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: documentation
      containers:
      - name: web
        image: {{ include "helm_lib_module_image" (list $ "web") }}
        {{- include "helm_lib_module_container_security_context_run_as_user_deckhouse_pss_restricted" . | nindent 8 }}
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        lifecycle:
          preStop:
            exec:
              command: ["/opt/nginx-static/sbin/nginx", "-s", "quit"]
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 12 }}
  {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "web_resources" . | nindent 12 }}
  {{- end }}
        volumeMounts:
          - name: config
            mountPath: /app/config
          - name: nginx-config
            mountPath: /opt/nginx-static/conf/nginx.conf
            subPath: nginx.conf
          - mountPath: /tmp
            name: tmp
          - mountPath: /app/modules/en
            name: modules-docs-en
            readOnly: true
          - mountPath: /app/modules/ru
            name: modules-docs-ru
            readOnly: true
      - name: builder
        image: {{ include "helm_lib_module_image" (list $ "docsBuilder") }}
        {{ include "helm_lib_module_container_security_context_not_allow_privilege_escalation" . | nindent 8 }}
        env:
          - name: HUGO_ENVIRONMENT
            value: production
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CLUSTER_DOMAIN
            value: {{ $.Values.global.discovery.clusterDomain | quote }}
        ports:
          - containerPort: 8081
            name: builder-http
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 12 }}
  {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "builder_resources" . | nindent 12 }}
  {{- end }}
        volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: "/mount/public/en/modules"
            name: modules-docs-en
          - mountPath: "/mount/public/ru/modules"
            name: modules-docs-ru
      - name: kube-rbac-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_common_image" (list . "kubeRbacProxy") }}
        args:
          - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8443"
          - "--client-ca-file=/etc/kube-rbac-proxy/ca.crt"
          - "--v=2"
          - "--logtostderr=true"
          - "--stale-cache-interval=1h30m"
          - "--livez-path=/livez"
        env:
          - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KUBE_RBAC_PROXY_CONFIG
            value: |
              upstreams:
              - upstream: http://127.0.0.1:8080/
                path: /
                authorization:
                  resourceAttributes:
                    namespace: d8-system
                    apiGroup: apps
                    apiVersion: v1
                    resource: deployments
                    subresource: http
                    name: documentation
        ports:
          - containerPort: 8443
            name: https
        livenessProbe:
          httpGet:
            path: /livez
            port: 8443
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /livez
            port: 8443
            scheme: HTTPS
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 12 }}
{{- end }}
        volumeMounts:
          - name: kube-rbac-proxy-ca
            mountPath: /etc/kube-rbac-proxy
      volumes:
        - name: config
          configMap:
            name: d8-deckhouse-version-info
        - name: nginx-config
          configMap:
            name: documentation-nginx-config
        - name: tmp
          emptyDir: {}
        - name: modules-docs-en
          emptyDir: {}
        - name: modules-docs-ru
          emptyDir: {}
        - name: kube-rbac-proxy-ca
          configMap:
            defaultMode: 420
            name: kube-rbac-proxy-ca.crt
{{- end }}
