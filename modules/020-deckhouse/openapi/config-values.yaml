type: object
properties:
  logLevel:
    type: string
    enum: ["Debug", "Info", "Error"]
    x-examples: ["Info"]
    description: |
      Deckhouse logging level.
    default: "Info"
  bundle:
    type: string
    enum: ["Default", "Minimal", "Managed"]
    x-examples: ["Default"]
    description: |
      The Deckhouse bundle defines a set of modules enabled by default.
      - `Default` — the recommended set of modules for cluster operation: monitoring, authorization control, networking and other needs (the current list is available [here](https://github.com/deckhouse/deckhouse/blob/main/modules/values-default.yaml)).
      - `Minimal` — the minimum possible bundle option (includes a single module — this one).
      - `Managed` — the bundle aimed at clusters managed by cloud providers (e.g., Google Kubernetes Engine).
    default: "Default"
  releaseChannel:
    type: string
    enum: ["Alpha", "Beta", "EarlyAccess", "Stable", "RockSolid"]
    x-examples: ["Stable"]
    description: |
      Desirable Deckhouse release channel (Deckhouse will [switch](https://deckhouse.io/en/documentation/v1/deckhouse-faq.html#change-the-release-channel) to it when such an opportunity appears).

      The order in which the stability of the release channel increases (from **less** stable to **more** stable): `Alpha`, `Beta`, `EarlyAccess`, `Stable`, `RockSolid`.
  update:
    type: object
    description: Settings of the Deckhouse update mode and windows.
    properties:
      mode:
        type: string
        default: 'Auto'
        description: |
          Deckhouse minor version update mode (release change). **Does not affect patch version updates.**
          - `Auto` — all updates are applied automatically.

            Deckhouse minor version updates (release updates, for example, from `v1.26.*` to `v1.27.*`), are applied according to the update windows or (if no update windows are set) as they appear on the corresponding release channel;
          - `Manual` — to change a minor version of Deckhouse (for example, from `v1.26.*` to `v1.27.*`), manual confirmation is required.

            To confirm the update, edit [custom resource 'DeckhouseRelease'](https://deckhouse.io/en/documentation/v1/modules/020-deckhouse/cr.html), which corresponds to the version by setting the `approved' field to 'true'.
        enum:
          - 'Auto'
          - 'Manual'
      disruptionApprovalMode:
        type: string
        default: 'Auto'
        enum:
          - 'Auto'
          - 'Manual'
        description: |
          Deckhouse release update disruption mode:
          - `Auto` — approves release with disruptions (potentially dangerous changes) automatically.
          - `Manual` — requires manual release confirmation (set annotation `release.deckhouse.io/disruption-approved=true`).
      windows:
        type: array
        description: |
          List of update windows during the day.
        items:
          type: object
          required:
            - from
            - to
          properties:
            from:
              type: string
              pattern: '^(?:\d|[01]\d|2[0-3]):[0-5]\d$'
              example: '13:00'
              description: |
                Start time of the update window (UTC timezone).

                Should be less than the end time of the update window.
            to:
              type: string
              pattern: '^(?:\d|[01]\d|2[0-3]):[0-5]\d$'
              example: '18:30'
              description: |
                End time of the update window (UTC timezone).

                Should be more than the start time of the update window.
            days:
              type: array
              description: The days of the week on which the update window is applied.
              items:
                type: string
                x-examples: [Mon]
                enum:
                  - Mon
                  - Tue
                  - Wed
                  - Thu
                  - Fri
                  - Sat
                  - Sun
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as in the Pods' `spec.nodeSelector` parameter in Kubernetes.

      If the parameter is omitted or `false`, `nodeSelector` will be determined [automatically](https://deckhouse.io/en/documentation/v1/#advanced-scheduling).
  tolerations:
    type: array
    description: |
      The same as in the Pods' `spec.tolerations` parameter in Kubernetes;

      If the parameter is omitted or `false`, `tolerations` will be determined [automatically](https://deckhouse.io/en/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
