{{- $openvpnVersion := "2.5.11" }}
{{- $opensslVersion := "3.3.2" }}
{{- $binaries := "/usr/sbin/conntrack /usr/lib64/libnetfilter_conntrack.so* /bin/mknod" }}
{{- $iptables_version := "1.8.9" }}
{{- $iptables_image_version := $iptables_version | replace "." "-" }}
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
- image: common/iptables-wrapper
  add: /iptables-wrapper
  to: /iptables-wrapper
  before: setup
- artifact: registrypackages/iptables-artifact-{{ $iptables_image_version }}
  add: /
  to: /usr/sbin
  includePaths:
  - xtables-legacy-multi
  - xtables-nft-multi
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /src/openvpn/src/openvpn/openvpn
  to: /usr/sbin/openvpn
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-entrypoint-artifact
  add: /src/entrypoint
  to: /entrypoint
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: setup
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromArtifact: common/src-artifact
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/entrypoint
  to: /src/entrypoint
  includePaths:
  - '**/*.go'
  - '**/*.mod'
  - '**/*.sum'
  stageDependencies:
    install:
    - '**/*.go'
    - 'go.mod'
    - 'go.sum'
shell:
  install:
  - cd /src
  - git clone --depth 1 -b openssl-{{ $opensslVersion }} {{ .SOURCE_REPO }}/openssl/openssl.git ./openssl
  - git clone --depth 1 -b lzo-2.10 {{ .SOURCE_REPO }}/oberhumer/lzo.git ./lzo
  - git clone --depth 1 -b v{{ $openvpnVersion }} {{ .SOURCE_REPO }}/OpenVPN/openvpn.git ./openvpn
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-entrypoint-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/entrypoint
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - cd /src
  - export GOPROXY={{ .GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - go mod tidy
  - go build -ldflags '-s -w' .
  - chown -R 64535:64535 /src
  - chmod 0700 /src/entrypoint
---
artifact: {{ .ModuleName }}/openssl-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/openssl
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache curl git autoconf automake make libtool g++ linux-headers libnl3-dev libcap-ng-dev lz4-dev linux-pam-dev tree
  install:
  - cd /src/
  - ./Configure gcc -static -no-shared
  - make -j4
  - make install_sw DESTDIR=/openssl
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
- artifact: {{ .ModuleName }}/openssl-artifact
  add: /openssl
  to: /
  before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache curl git autoconf automake make libtool g++ linux-headers libnl3-dev libcap-ng-dev lz4-dev linux-pam-dev tree
  install:
  - cd /src/lzo
  - ./configure --enable-static --disable-debug
  - make -j4
  - make install
  - cd /src/openvpn
  - autoreconf -vi
  - ./configure --enable-static --disable-shared --disable-debug --disable-unit-tests --disable-lz4 --disable-plugin-auth-pam --disable-plugin-down-root
  - make LIBS="-all-static"
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-binaries-artifact
fromArtifact: common/relocate-artifact
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - apt-get install -y conntrack-tools coreutils
  install:
  - /binary_replace.sh -i "{{ $binaries }}" -o /relocate
  - |
    for cmd in iptables iptables-save iptables-restore ip6tables ip6tables-save ip6tables-restore iptables-legacy iptables-legacy-save iptables-legacy-restore ip6tables-legacy ip6tables-legacy-save ip6tables-legacy-restore iptables-nft iptables-nft-save iptables-nft-restore ip6tables-nft ip6tables-nft-save ip6tables-nft-restore; do
      ln -f -s /iptables-wrapper "/relocate/usr/sbin/${cmd}"
    done
    # broken symlinks are not imported from the artifact
    touch /iptables-wrapper
