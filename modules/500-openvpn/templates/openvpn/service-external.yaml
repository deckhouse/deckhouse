{{- $context := . }}
{{- if hasKey .Values.openvpn "inlet" }}
{{- $tcpServiceName :=  printf "%s-external" .Chart.Name }}
{{- $udpServiceName :=  printf "%s-external-udp" .Chart.Name }}
  {{- if eq .Values.openvpn.inlet "LoadBalancer" }}
    {{ $loadBalancerClass := "" }}
    {{- if .Values.openvpn.loadBalancer.loadBalancerClass }}
      {{ $loadBalancerClass = .Values.openvpn.loadBalancer.loadBalancerClass }}
    {{- end }}
    {{- $previousLoadBalancerClass := "" }}
    {{- $serviceName := "" }}
    {{- if .Values.openvpn.tcpEnabled }}
      {{- $serviceName := $tcpServiceName }}
      {{- $existingService := lookup "v1" "Service" "d8-openvpn" $serviceName }}
      {{- if $existingService }}
        {{- $previousLoadBalancerClass = $existingService.spec.loadBalancerClass | default "" }}
      {{- end }}
    {{- end }}
    {{- if .Values.openvpn.udpEnabled }}
      {{- $serviceName := $udpServiceName }}
      {{- $existingService := lookup "v1" "Service" "d8-openvpn" $serviceName }}
      {{- if $existingService }}
        {{- $previousLoadBalancerClass = $existingService.spec.loadBalancerClass | default "" }}
      {{- end }}
    {{- end }}
  {{- if or (and (not $previousLoadBalancerClass) $loadBalancerClass) (and $previousLoadBalancerClass (ne $previousLoadBalancerClass $loadBalancerClass)) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-service-{{ $serviceName }}-{{ $loadBalancerClass | default "no-class" | sha1sum | trunc 8 }}-{{ randAlphaNum 5 | lower }}
  namespace: d8-openvpn
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: openvpn
      restartPolicy: OnFailure
      containers:
        - name: cleanup
          image: {{ include "helm_lib_module_image" (list $context "kubectl") }}
          command:
            - /kubectl
            - delete
            - service
            - {{ $serviceName }}
            - -n
            - d8-openvpn
            - --ignore-not-found=true
            - --wait=false
    {{- end }}

    {{- if .Values.openvpn.tcpEnabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $tcpServiceName }}
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
  {{- if .Values.openvpn.loadBalancer.annotations }}
  annotations:
    {{- .Values.openvpn.loadBalancer.annotations | toYaml | nindent 4 }}
  {{- end }}

spec:
  externalTrafficPolicy: Local
  {{- if .Values.openvpn.loadBalancer.sourceRanges }}
  loadBalancerSourceRanges:
    {{- .Values.openvpn.loadBalancer.sourceRanges | toYaml | nindent 4 }}
  {{- end }}
  type: LoadBalancer
  {{- if .Values.openvpn.loadBalancer.loadBalancerClass }}
  loadBalancerClass: {{ .Values.openvpn.loadBalancer.loadBalancerClass }}
  {{- end }}
  ports:
    - name: ovpn-tcp
      protocol: TCP
      port: {{ .Values.openvpn.externalPort | default 5416 }}
      targetPort: ovpn-tcp
  selector:
    app: {{ .Chart.Name }}
    {{- end }}
    {{- if .Values.openvpn.udpEnabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $udpServiceName }}
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
  {{- if .Values.openvpn.loadBalancer.annotations }}
  annotations:
    {{- .Values.openvpn.loadBalancer.annotations | toYaml | nindent 4 }}
  {{- end }}

spec:
  externalTrafficPolicy: Local
  {{- if .Values.openvpn.loadBalancer.sourceRanges }}
  loadBalancerSourceRanges:
    {{- .Values.openvpn.loadBalancer.sourceRanges | toYaml | nindent 4 }}
  {{- end }}
  type: LoadBalancer
  {{- if .Values.openvpn.loadBalancer.loadBalancerClass }}
  loadBalancerClass: {{ .Values.openvpn.loadBalancer.loadBalancerClass }}
  {{- end }}
  ports:
    - name: ovpn-udp
      protocol: UDP
      port: {{ .Values.openvpn.externalPort | default 5416 }}
      targetPort: ovpn-udp
  selector:
    app: {{ .Chart.Name }}
    {{- end }}
  {{- else if eq .Values.openvpn.inlet "ExternalIP" }}
    {{- if .Values.openvpn.tcpEnabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $tcpServiceName }}
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
spec:
  type: ClusterIP
  externalIPs:
  - {{ .Values.openvpn.externalIP }}
  ports:
    - name: ovpn-tcp
      port: {{ .Values.openvpn.externalPort | default 5416 }}
      protocol: TCP
      targetPort: ovpn-tcp
  selector:
    app: {{ .Chart.Name }}
    {{- end }}
    {{- if .Values.openvpn.udpEnabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $udpServiceName }}
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
spec:
  type: ClusterIP
  externalIPs:
  - {{ .Values.openvpn.externalIP }}
  ports:
    - name: ovpn-udp
      port: {{ .Values.openvpn.externalPort | default 5416 }}
      protocol: UDP
      targetPort: ovpn-udp
  selector:
    app: {{ .Chart.Name }}
    {{- end }}
  {{- else if eq .Values.openvpn.inlet "Direct" }}
---
  {{- else if eq .Values.openvpn.inlet "HostPort" }}
---
  {{- else }}
    {{- cat "Unsupported inlet type" .inlet | fail }}
  {{- end }}

{{- end }}
