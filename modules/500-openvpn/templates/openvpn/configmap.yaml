---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
data:
  openvpn-tcp.conf: |-
    server {{ include "get_network_address" (list . .Values.openvpn.tunnelNetwork) }} {{ include "get_dotted_network_mask" (list . .Values.openvpn.tunnelNetwork) }}
    verb 3
    tls-server
    ca /etc/openvpn/certs/pki/ca.crt
    key /etc/openvpn/certs/pki/private/server.key
    cert /etc/openvpn/certs/pki/issued/server.crt
    dh /etc/openvpn/certs/pki/dh.pem
    crl-verify /etc/openvpn/certs/pki/crl.pem
    tls-auth /etc/openvpn/certs/pki/ta.key
    client-config-dir /etc/openvpn/ccd-tcp
    key-direction 0
    cipher AES-128-CBC
    management 127.0.0.1 8989
    keepalive 10 60
    persist-key
    persist-tun
    topology subnet
    proto tcp
    port 1194
    dev tun-tcp
    status /tmp/openvpn-status.log
    user nobody
    group nogroup
    push "topology subnet"
    push "route-metric 9999"
    {{- if hasKey .Values.openvpn.internal "pushToClientRoutes" }}
    {{- range $route := .Values.openvpn.internal.pushToClientRoutes }}
    push "route {{ include "push_route_format" (list . $route) }}"
    {{- end }}
    {{- else }}
    {{- end }}
    push "dhcp-option DNS {{ .Values.openvpn.pushToClientDNS | default .Values.global.discovery.clusterDNSAddress }}"
    {{- if hasKey .Values.openvpn.internal "pushToClientSearchDomains" }}
      {{- range $searchDomain := .Values.openvpn.internal.pushToClientSearchDomains }}
    push "dhcp-option DOMAIN {{ $searchDomain }}"
      {{- end }}
    {{- end }}
 {{- if .Values.openvpn.udpEnabled }}
  openvpn-udp.conf: |-
    server {{ include "get_network_address" (list . .Values.openvpn.udpTunnelNetwork) }} {{ include "get_dotted_network_mask" (list . .Values.openvpn.udpTunnelNetwork) }}
    verb 3
    tls-server
    ca /etc/openvpn/certs/pki/ca.crt
    key /etc/openvpn/certs/pki/private/server.key
    cert /etc/openvpn/certs/pki/issued/server.crt
    dh /etc/openvpn/certs/pki/dh.pem
    crl-verify /etc/openvpn/certs/pki/crl.pem
    tls-auth /etc/openvpn/certs/pki/ta.key
    client-config-dir /etc/openvpn/ccd-udp
    key-direction 0
    cipher AES-128-CBC
    management 127.0.0.1 9090
    keepalive 10 60
    persist-key
    persist-tun
    topology subnet
    proto udp
    port 1194
    dev tun-udp
    status /tmp/openvpn-status.log
    user nobody
    group nogroup
    push "topology subnet"
    push "route-metric 9999"
    {{- if hasKey .Values.openvpn.internal "pushToClientRoutes" }}
    {{- range $route := .Values.openvpn.internal.pushToClientRoutes }}
    push "route {{ include "push_route_format" (list . $route) }}"
    {{- end }}
    {{- else }}
    {{- end }}
    push "dhcp-option DNS {{ .Values.openvpn.pushToClientDNS | default .Values.global.discovery.clusterDNSAddress }}"
    {{- if hasKey .Values.openvpn.internal "pushToClientSearchDomains" }}
      {{- range $searchDomain := .Values.openvpn.internal.pushToClientSearchDomains }}
    push "dhcp-option DOMAIN {{ $searchDomain }}"
      {{- end }}
    {{- end }}
{{- end }}
  sync_ccd.sh: |-
    #!/bin/sh

    tcp_network="$(echo $1 | rev | sed 's/\./ /' | rev | awk '{print $1}')"
    udp_network="$(echo $2 | rev | sed 's/\./ /' | rev | awk '{print $1}')"

    while true; do

      if [ -d /etc/openvpn/ccd-tcp ]; then
        for f in $(ls -1 /etc/openvpn/ccd-tcp); do
          cat "/etc/openvpn/ccd-tcp/${f}" | sed "s/$tcp_network/$udp_network/g" > "/etc/openvpn/ccd-udp/${f}"
        done
      fi

      sleep 10
    done

  entrypoint.sh: |-
    #!/bin/sh

    {{- if .Values.openvpn.tcpEnabled }}
    iptables -t nat -A POSTROUTING -s {{ include "get_network_with_bitmask" (list . .Values.openvpn.tunnelNetwork) }} ! -d {{ include "get_network_with_bitmask" (list . .Values.openvpn.tunnelNetwork) }} -j MASQUERADE
    {{- end }}

    {{- if .Values.openvpn.udpEnabled }}
    iptables -t nat -A POSTROUTING -s {{ include "get_network_with_bitmask" (list . .Values.openvpn.udpTunnelNetwork) }} ! -d {{ include "get_network_with_bitmask" (list . .Values.openvpn.udpTunnelNetwork) }} -j MASQUERADE
    {{- end }}

    mkdir -p /dev/net
    if [ ! -c /dev/net/tun ]; then
        mknod /dev/net/tun c 10 200
    fi

    wait_file() {
      file_path="$1"
      while true; do
        if [ -f $file_path ]; then
          break
        fi
        echo "wait $file_path"
        sleep 2
      done
    }

    easyrsa_path="/etc/openvpn/certs"

    wait_file "$easyrsa_path/pki/ca.crt"
    wait_file "$easyrsa_path/pki/private/server.key"
    wait_file "$easyrsa_path/pki/issued/server.crt"
    wait_file "$easyrsa_path/pki/ta.key"
    wait_file "$easyrsa_path/pki/dh.pem"
    wait_file "$easyrsa_path/pki/crl.pem"

    proto="$1"
    openvpn --config /etc/openvpn/openvpn-${proto}.conf
