apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: d8psshostfilesystem
  labels:
    heritage: deckhouse
    module: admission-policy-engine
    security.deckhouse.io: pod-security-standard
  annotations:
    metadata.gatekeeper.sh/title: "Host Filesystem"
    description: >-
      Controls usage of the host filesystem. Corresponds to the
      `spec.volumes[*].hostPath` field. For more information,
      see https://kubernetes.io/docs/concepts/security/pod-security-standards/
spec:
  crd:
    spec:
      names:
        kind: D8PSSHostFilesystem
      validation:
        openAPIV3Schema:
          type: object
          description: >-
            Controls usage of the host filesystem. Corresponds to the
            `spec.volumes[*].hostPath` field. For more information,
            see https://kubernetes.io/docs/concepts/security/pod-security-standards/
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package d8.pod_security_standards

        violation[{"msg": msg}] {
          volume := input.review.object.spec.volumes[_]
          has_hostpath_mount(volume)
          msg := sprintf("HostPath volume %v is not allowed, pod: %v.", [volume.name, input.review.object.metadata.name])
        }

        has_hostpath_mount(volume) {
          volume.hostPath
        }

