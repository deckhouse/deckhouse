type: object
properties:
  logLevel:
    type: string
    enum: ["Debug", "Info", "Error"]
    x-examples: ["Info"]
    description: |
      Deckhouse logging level.
    default: "Info"
  bundle:
    type: string
    enum: ["Default", "Minimal"]
    x-examples: ["Default"]
    description: |
      The Deckhouse [bundle](../../#module-bundles) defines a set of modules enabled by default.
      - `Default` — the recommended set of modules for cluster operation: monitoring, authorization control, networking and other needs.
      - `Minimal` — the minimum possible bundle option (includes a single module — this one). **Note** that several basic modules are not included in the set of modules `Minimal` (for example, the CNI module). Deckhouse with the set of modules `Minimal` without the basic modules will be able to work only in an already deployed cluster.
    default: "Default"
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as in the Pods' `spec.nodeSelector` parameter in Kubernetes.

      If the parameter is omitted or `false`, `nodeSelector` will be determined [automatically](/#advanced-scheduling).

      **Cation!** Deckhouse will stop working if there is a nonexistent label in `nodeSelector`. You need to change the values to the correct ones in `ModuleConfig/deckhouse` and `deployment/deckhouse` to get Deckhouse back on track.
  tolerations:
    type: array
    description: |
      The same as in the Pods' `spec.tolerations` parameter in Kubernetes;

      If the parameter is omitted or `false`, `tolerations` will be determined [automatically](/#advanced-scheduling).

      **Cation!**  Deckhouse will stop working if `tolerations` specified are incorrect. You need to change the values to the correct ones in `ModuleConfig/deckhouse` and `deployment/deckhouse` to get Deckhouse back on track.
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string

  highAvailability:
    type: boolean
    x-examples: [true]
    description: |
      Manually enable the high availability mode.

      By default, Deckhouse automatically decides whether to enable the HA mode. Click [here](../../deckhouse-configure-global.html#parameters) to learn more about the HA mode for modules.
