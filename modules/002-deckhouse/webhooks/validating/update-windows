#!/usr/bin/env bash

# Copyright 2024 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /shell_lib.sh

function __config__(){
  cat <<EOF
configVersion: v1
kubernetesValidating:
- name: update-windows.deckhouse.io
  group: main
  rules:
  - apiGroups:   ["deckhouse.io"]
    apiVersions: ["*"]
    operations:  ["CREATE", "UPDATE"]
    resources:   ["moduleconfigs"]
    scope:       "Cluster"
EOF
}

function __main__() {
  
  mc_name=$(context::jq -r '.review.request.object.metadata.name')
  if [[ "$mc_name" == "deckhouse" ]]; then
    if $(context::jq -e '.review.request.object.spec.settings.update.windows' >/dev/null;); then
      array_from=($(context::jq -r '.review.request.object.spec.settings.update.windows[] | .from'))
      array_to=($(context::jq -r '.review.request.object.spec.settings.update.windows[] | .to'))
      for key in "${!array_from[@]}"; do
          if (( $(date  +%s -d ${array_from[$key]}) >= $(date  +%s -d ${array_to[$key]}) )); then
            cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":false, "message":"invalid update window [$key] (From: ${array_from[$key]}, To: ${array_to[$key]}). Start time (windows.to) should be less than the end time of the update window (windows.from)" }
EOF
            return 0  
          fi
      done
    fi
  fi
  cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":true}
EOF
}

hook::run "$@"
