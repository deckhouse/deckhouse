{{- define "deckhouse-registry-webhook-resources" }}
cpu: 50m
memory: 100Mi
{{- end }}

{{- if and (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") (.Capabilities.APIVersions.Has "autoscaling.k8s.io/v1/VerticalPodAutoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: deckhouse-registry-webhook
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse-registry-webhook" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: deckhouse-registry-webhook
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "deckhouse-registry-webhook"
      minAllowed:
        {{- include "deckhouse-registry-webhook-resources" . | nindent 8 }}
      maxAllowed:
        cpu: 200m
        memory: 150Mi
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deckhouse-registry-webhook
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse-registry-webhook")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      heritage: deckhouse
      module: {{ .Chart.Name }}
      app: deckhouse-registry-webhook
  template:
    metadata:
      annotations:
        checksum/certificate: {{ include (print .Template.BasePath "/deckhouse-registry-webhook/secret.yaml") . | sha256sum }}
      labels:
        heritage: deckhouse
        module: {{ .Chart.Name }}
        app: deckhouse-registry-webhook
    spec:
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "deckhouse-registry-webhook")) | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      serviceAccountName: deckhouse-registry-webhook
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: deckhouse-registry-webhook
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_image" (list . "deckhouseRegistryWebhook") }}
        args:
          - --image-to-check=some-test-image
          - --log-level=info
          - --tls-cert-file=/etc/webhook/certs/tls.crt
          - --tls-key-file=/etc/webhook/certs/tls.key
        ports:
          - containerPort: 8443
            name: webhook
          - containerPort: 8001
            name: healthz
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 12 }}
{{- if not (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "deckhouse-registry-webhook-resources" . | nindent 12 }}
{{- end }}
      volumes:
      - name: webhook-certs
        secret:
          secretName: deckhouse-registry-webhook-tls
