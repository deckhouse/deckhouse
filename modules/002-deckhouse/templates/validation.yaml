{{- if and (include "helm_lib_kind_exists" (list . "ValidatingAdmissionPolicy")) (include "helm_lib_kind_exists" (list . "ValidatingAdmissionPolicyBinding")) }}
{{- $policyName := "system-ns.deckhouse.io" }}
---
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicy") }}
kind: ValidatingAdmissionPolicy
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["*"]
        operations: ["CREATE"]
        resources: ["namespaces"]
  validations:
    - expression: '!(request.userInfo.username != "system:serviceaccount:d8-system:deckhouse"
        && (object.metadata.name.startsWith("d8-") || object.metadata.name.startsWith("kube-")))'
      reason: Forbidden
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
      messageExpression: '''Creation of system namespaces is forbidden'''
{{- end }}
---
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicyBinding") }}
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  policyName: {{ $policyName }}
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  validationActions: [Deny]
{{- end }}

---
{{- $policyName := "label-objects.deckhouse.io" }}
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicy") }}
kind: ValidatingAdmissionPolicy
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
      - apiGroups: ["*"]
        apiVersions: ["*"]
        operations:  ["CREATE", "UPDATE", "DELETE"]
        resources:   ["*"]
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  matchConditions:
    - name: 'exclude-groups'
      expression: '!(["system:nodes", "system:masters", "system:serviceaccounts:kube-system"].exists(e, (e in request.userInfo.groups)))'
    - name: 'exclude-users'
      expression: '!(["kubernetes-admin", "system:kube-controller-manager", "system:kube-scheduler", "system:volume-scheduler"].exists(e, (e == request.userInfo.username)))'
    - name: 'exclude-kinds'
      expression: '!(has(request.kind) && ["StorageClass"].exists(e, (e == request.kind.kind)))'
  validations:
    - expression: 'request.userInfo.username.startsWith("system:serviceaccount:d8-")'
      reason: Forbidden
      messageExpression: '''Creating, updating and deleting an objects with the `heritage: deckhouse` label is forbidden'''
  auditAnnotations:
    - key: 'source-user'
      valueExpression: "'User: ' + string(request.userInfo.username) + ' tries to change object with the heritage label'"
{{- else }}
  validations:
    - expression: 'request.userInfo.username.startsWith("system:serviceaccount:d8-") || ["kubernetes-admin", "system:kube-controller-manager", "system:kube-scheduler", "system:volume-scheduler"].exists(e, (e == request.userInfo.username)) || ["system:nodes", "system:masters", "system:serviceaccounts:kube-system"].exists(e, (e in request.userInfo.groups)) || (has(request.kind) && ["StorageClass"].exists(e, (e == request.kind.kind)))'
      reason: Forbidden
{{- end }}
---
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicyBinding") }}
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: "heritage-label-objects.deckhouse.io"
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  policyName: {{ $policyName }}
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  validationActions: [Deny, Audit]
{{- end }}
  matchResources:
    objectSelector:
      matchLabels:
        heritage: deckhouse

---
{{- $policyName := "update-policy-label-objects.deckhouse.io" }}
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicy") }}
kind: ValidatingAdmissionPolicy
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
      - apiGroups:   ["deckhouse.io"]
        apiVersions: ["*"]
        operations:  ["UPDATE"]
        resources:   ["modulereleases"]
  validations:
    - expression: request.userInfo.username.startsWith("system:serviceaccount:d8-")
        || ! ("modules.deckhouse.io/update-policy" in object.metadata.labels)
        || ! ("modules.deckhouse.io/update-policy" in oldObject.metadata.labels)
        || object.metadata.labels["modules.deckhouse.io/update-policy"] == oldObject.metadata.labels["modules.deckhouse.io/update-policy"]
      reason: Forbidden
      {{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
      messageExpression: "'Manual update-policy change is forbidden. Please, remove the update-policy label to automatically find a new suitable policy'"
      {{- end }}
---
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicyBinding") }}
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  policyName: "update-policy-label-objects.deckhouse.io"
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  validationActions: [Deny]
{{- end }}

---
{{/* Check update windows in the deckhouse ModuleConfig */}}
{{- $policyName := "mc-update-windows.deckhouse.io" }}
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicy") }}
kind: ValidatingAdmissionPolicy
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups:   ["deckhouse.io"]
      apiVersions: ["*"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["moduleconfigs"]
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  matchConditions:
    - name: 'deckhouse-mc'
      expression: 'object.metadata.name == "deckhouse"'
    - name: 'windows-are-set'
      expression: |
        has(object.spec.settings.update) &&
        has(object.spec.settings.update.windows) &&
        object.spec.settings.update.windows.size() > 0
  validations:
    - expression: 'object.spec.settings.update.windows.all(w, int(string(w.from).replace(":", "")) < int(string(w.to).replace(":", "")))'
      reason: Forbidden
      messageExpression: "'Invalid update windows. Start time (windows.from) should be less than the end time of the update window (windows.to)'"
{{- else }}
  validations:
    - expression: |
        object.metadata.name == "deckhouse" &&
        has(object.spec.settings.update) &&
        has(object.spec.settings.update.windows) &&
        object.spec.settings.update.windows.size() > 0 &&
        object.spec.settings.update.windows.all(w, int(string(w.from).replace(":", "")) < int(string(w.to).replace(":", "")))
      reason: Forbidden
{{- end }}
---
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicyBinding") }}
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  policyName: {{ $policyName }}
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  validationActions: [Deny, Audit]
{{- end }}
{{/* End deckhouse windows validation */}}

---
{{/* Check update windows in the ModuleUpdatePolicy */}}
{{- $policyName := "mup-update-windows.deckhouse.io" }}
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicy") }}
kind: ValidatingAdmissionPolicy
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
      - apiGroups:   ["deckhouse.io"]
        apiVersions: ["*"]
        operations:  ["CREATE", "UPDATE"]
        resources:   ["moduleupdatepolicies"]
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  matchConditions:
    - name: 'windows-are-set'
      expression: |
        has(object.spec.update) &&
        has(object.spec.update.windows) &&
        object.spec.update.windows.size() > 0
  validations:
    - expression: 'object.spec.update.windows.all(w, int(string(w.from).replace(":", "")) < int(string(w.to).replace(":", "")))'
      reason: Forbidden
      messageExpression: "'Invalid update windows. Start time (windows.from) should be less than the end time of the update window (windows.to)'"
{{- else }}
  validations:
    - expression: |
        has(object.spec.update) &&
        has(object.spec.update.windows) &&
        object.spec.update.windows.size() > 0 &&
        object.spec.update.windows.all(w, int(string(w.from).replace(":", "")) < int(string(w.to).replace(":", "")))
      reason: Forbidden
{{- end }}
---
apiVersion: {{ include "helm_lib_get_api_version_by_kind" (list . "ValidatingAdmissionPolicyBinding") }}
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: {{ $policyName }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "deckhouse") ) | nindent 2 }}
spec:
  policyName: {{ $policyName }}
{{- if semverCompare ">= 1.27" .Values.global.discovery.kubernetesVersion }}
  validationActions: [Deny, Audit]
{{- end }}
{{/* End mup windows validation */}}
{{- end }}
