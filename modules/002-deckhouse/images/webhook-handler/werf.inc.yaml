---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/shell-operator
import:
- image: tools/yq
  add: /usr/bin/yq
  to: /usr/bin/yq
  before: install
- image: tools/semver
  add: /usr/bin/semver
  to: /usr/bin/semver
  before: setup
- image: prometheus/prometheus
  add: /bin/promtool
  to: /usr/local/bin/promtool
  before: setup
- image: {{ $.ModuleName }}/{{ .ImageName }}-label-converter-artifact
  add: /label-converter
  to: /usr/local/bin/label-converter
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-wheel-artifact
  add: /
  to: /
  before: install
  includePaths:
  - lib/ld-musl-x86_64*
  - usr/bin/python3*
  - usr/lib/python3*
  - usr/lib/libc.so
git:
- add: /{{ .ModulePath }}
  to: /available_hooks
  includePaths:
  - 'modules/*/webhooks/'
  - 'ee/modules/*/webhooks/'
  - 'ee/se/modules/*/webhooks'
# - 'ee/fe/modules/*/webhooks/'
  excludePaths:
    - '**/*_test.py'
  stageDependencies:
    install:
      - '**/*'
- add: /{{ .ModulePath }}modules/002-deckhouse/images/webhook-handler/src/entrypoint.sh
  to: /entrypoint.sh
  stageDependencies:
    install:
      - '**/*'
- add: /{{ .ModulePath }}shell_lib/semver.sh
  to: /{{ .ModulePath }}frameworks/shell/semver.sh
  stageDependencies:
    install:
      - '**/*'
- add: /{{ .ModulePath }}python_lib
  to: /frameworks/python
  stageDependencies:
    install:
      - '**/*'
imageSpec:
  config:
    env: {"PYTHONPATH": "/frameworks/python"}
    entrypoint: ["/entrypoint.sh"]
---
image: {{ .ModuleName }}/{{ .ImageName }}-label-converter-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/src/label-converter
  to: /src
  includePaths:
  - '**/*.go'
  - '**/go.mod'
  - '**/go.sum'
  stageDependencies:
    install:
    - '**/*.go'
    - '**/go.mod'
    - '**/go.sum'
---
image: {{ .ModuleName }}/{{ .ImageName }}-label-converter-artifact
final: false
fromImage: builder/golang-alpine
mount:
{{ include "mount points for golang builds" . }}
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-label-converter-src-artifact
  add: /src
  to: /src
  before: install
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
    - export GOPROXY=$(cat /run/secrets/GOPROXY)
    - cd /src
    - CGO_ENABLED=0 GOOS=linux go build -ldflags '-s -w -extldflags "-static"' -o /label-converter label_converter.go
    - chown 64535:64535 /label-converter
    - chmod 755 /label-converter
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-wheel-artifact
fromImage: base/python
final: false
git:
- add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/src/requirements.txt
  to: /requirements.txt
  stageDependencies:
    install:
    - '**/*'
import:
- image: common/wheel-artifact
  add: /wheels
  to: /wheels
  before: install
shell:
  install:
  - pip3 install -f file:///wheels --no-index -r /requirements.txt
