apiVersion: deckhouse.io/v1alpha1
kind: ValidationWebhook
metadata:
  labels:
    app.kubernetes.io/name: operator
    app.kubernetes.io/managed-by: kustomize
  name: validationwebhook-sample
validationObject:
  name: prometheusremotewrite-policy.deckhouse.io
  group: main
  rules:
  - apiGroups:   ["deckhouse.io"]
    apiVersions: ["v1alpha1", "v1"]
    operations:  ["CREATE", "UPDATE"]
    resources:   ["prometheusremotewrites"]
    scope:       "Cluster"
context:
  - name: prometheusremotewrites
    group: main
    executeHookOnEvent: []
    executeHookOnSynchronization: false
    keepFullObjectsInMemory: false
    apiVersion: deckhouse.io/v1
    kind: PrometheusRemoteWrite
    jqFilter: |
      {
        "name": .metadata.name,
        "url": .spec.url,
      }
handler:
  cel: |
    TODO: сейчас не делаем
  python: |
    def validate(request: admission.Request, context: []Object || Context) -> tuple[Optional[str], bool]:
      // logic here
      return "message", True