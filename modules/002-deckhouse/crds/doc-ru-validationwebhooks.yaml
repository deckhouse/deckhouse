spec:
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |
            Кастомный ресурс для настройки вебхуков валидации Kubernetes ресурсов.

            Один кастомный ресурс `ValidationWebhook` описывает обработчик валидации для определенных типов ресурсов и операций.
          properties:
            apiVersion:
              description: |- 
                APIVersion определяет версионную схему этого представления объекта. Серверы должны преобразовывать распознанные схемы в последнее внутреннее значение и могут отклонять нераспознанные значения. Более подробно: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources.
            context:
              description: |
                Запускает хук при изменениях объектов Kubernetes.
              items:
                properties:
                  kubernetes:
                    properties:
                      allowFailure:
                        description: |
                          Если `true`, Shell-operator игнорирует ошибки выполнения хука.
                          Если `false` или параметр не установлен, хук перезапускается через 5 секунд после ошибки.
                      apiVersion:
                        description: |
                          Необязательная группа и версия API объекта.
                          Например, `v1` для основных объектов (Pod и т.д.), `rbac.authorization.k8s.io/v1beta1` для ClusterRole и `monitoring.coreos.com/v1` для prometheus-operator.
                      executeHookOnEvent:
                        description: |
                          Список событий, которые приводят к выполнению хука.
                          По умолчанию все события используются для выполнения хука: "Added", "Modified" и "Deleted".
                      executeHookOnSynchronization:
                        description: |
                          Если `false`, Shell-operator пропускает выполнение хука с контекстом привязки Synchronization.
                      group:
                        description: |
                          Ключ для включения снимков из группы привязок schedule и kubernetes.
                      includeSnapshotsFrom:
                        description: |
                          Массив имен привязок kubernetes в хуке.
                          При указании, список отслеживаемых объектов из этих привязок будет добавлен в контекст привязки в поле snapshots. Возможно само-включение.
                      jqFilter:
                        description: |
                          Необязательный параметр, который указывает фильтрацию событий с использованием синтаксиса jq.
                          Хук будет запущен на событии "Modified" только если результат фильтра изменился после последнего события.
                      keepFullObjectsInMemory:
                        description: |
                          Если не установлено или `true`, дампы ресурсов Kubernetes кешируются для этой привязки, и снимок включает их как поля объекта.
                          Установите в `false`, если хук не полагается на полные объекты для уменьшения потребления памяти.
                      kind:
                        description: |
                          Тип отслеживаемого ресурса Kubernetes. Это поле обязательно.
                      labelSelector:
                        description: |
                          Селектор меток для фильтрации ресурсов. Результат matchLabels и matchExpressions объединяется через AND. Пустой селектор меток соответствует всем объектам. Нулевой селектор меток не соответствует ни одному объекту.
                        properties:
                          matchExpressions:
                            description: |-
                              Список фильтров на основе выражений.
                              Итоговый результат — результат пересечения множеств, определяемых всеми фильтрами в списке (операция `И`).
                            items:
                              description: |-
                                Селектор, содержащий значения, ключ и оператор, который  связывает ключ и значения.
                              properties:
                                key:
                                  description: |-
                                    Ключ метки, к которому применяется селектор.
                                  type: string
                                operator:
                                  description: |-
                                    Представляет соотношение ключа с набором значений.
                                    Допустимые операторы: `In`, `NotIn`, `Exists` и `DoesNotExist`.
                                  type: string
                                values:
                                  description: |-
                                    `values` — массив строковых значений. Если в `operator` значение `In` или `NotIn`, массив значений не должен быть пустым. Если в `operator` значение `Exists` или `DoesNotExist`, массив значений должен быть пустым. Этот массив заменяется во время стратегического слияния патчей.
                          matchLabels:
                            description: |-
                              Карта пар {ключ, значение}. Одна пара {ключ, значение} в карте `matchLabels` эквивалентна элементу `matchExpressions`, ключевое поле которого — `key`,  оператор — `In`, а массив значений содержит только «значение». Требования объединяются оператором `AND`.
                      namespace:
                        description: |
                          Фильтры для выбора пространств имен.
                        properties:
                          labelSelector:
                            description: |
                              Селектор меток для фильтрации пространств имен.
                            properties:
                              matchExpressions:
                                description: |-
                                  Список фильтров на основе выражений.
                                  Итоговый результат — результат пересечения множеств, определяемых всеми фильтрами в списке (операция `И`).
                                items:
                                  description: |-
                                    Селектор, содержащий значения, ключ и оператор, который  связывает ключ и значения.
                                  properties:
                                    key:
                                      description: |-
                                        Ключ метки, к которому применяется селектор.
                                      type: string
                                    operator:
                                      description: |-
                                        Представляет соотношение ключа с набором значений.
                                        Допустимые операторы: `In`, `NotIn`, `Exists` и `DoesNotExist`.
                                      type: string
                                    values:
                                      description: |-
                                        `values` — массив строковых значений. Если в `operator` значение `In` или `NotIn`, массив значений не должен быть пустым. Если в `operator` значение `Exists` или `DoesNotExist`, массив значений должен быть пустым. Этот массив заменяется во время стратегического слияния патчей.
                              matchLabels:
                                description: |-
                                  Карта пар {ключ, значение}. Одна пара {ключ, значение} в карте `matchLabels` эквивалентна элементу `matchExpressions`, ключевое поле которого — `key`,  оператор — `In`, а массив значений содержит только «значение». Требования объединяются оператором `AND`.
                          nameSelector:
                            description: |
                              Селектор имен для фильтрации пространств имен.
                      queue:
                        description: |
                          Имя отдельной очереди. Может использоваться для выполнения долго работающих хуков параллельно с хуками в «основной» очереди.
                  name:
                    description: |
                      Используется для различения разных привязок во время выполнения.
            handler:
              description: |
                Код обработчика ValidatingWebhook.
              properties:
                cel:
                  description: |
                    CEL-обработчик правил для объекта.
                python:
                  description: |
                    Python-скрипт обработчика для объекта.
            kind:
              description: |-
                Kind — это строковое значение, представляющее REST-ресурс, который описывает этот объект.
                Серверы могут определять его на основе конечной точки, к которой клиент отправляет запросы.
                Не может быть изменено. Записывается в CamelCase.
                Подробнее: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            validationObject:
              description: |
                ValidatingWebhook описывает вебхук, ресурсы и операции, к которым он применяется.
              properties:
                failurePolicy:
                  description: |
                    Определяет, как обрабатываются ошибки от хука.
                group:
                  description: |
                    Ключ для включения снимков из группы привязок schedule и kubernetes.
                includeSnapshotsFrom:
                  description: |
                    Массив имен привязок kubernetes в хуке.
                    При указании, список отслеживаемых объектов из этих привязок будет добавлен в контекст привязки в поле snapshots. Возможно само-включение.
                labelSelector:
                  description: |
                    Селектор меток для фильтрации ресурсов. Результат matchLabels и matchExpressions объединяется через AND. Пустой селектор меток соответствует всем объектам. Нулевой селектор меток не соответствует ни одному объекту.
                  properties:
                    matchExpressions:
                      description: |-
                        Список фильтров на основе выражений.
                        Итоговый результат — результат пересечения множеств, определяемых всеми фильтрами в списке (операция `И`).
                      items:
                        description: |-
                          Селектор, содержащий значения, ключ и оператор, который  связывает ключ и значения.
                        properties:
                          key:
                            description: |-
                              Ключ метки, к которому применяется селектор.
                            type: string
                          operator:
                            description: |-
                              Представляет соотношение ключа с набором значений.
                                    Допустимые операторы: `In`, `NotIn`, `Exists` и `DoesNotExist`.
                            type: string
                          values:
                            description: |-
                              `values` — массив строковых значений. Если в `operator` значение `In` или `NotIn`, массив значений не должен быть пустым. Если в `operator` значение `Exists` или `DoesNotExist`, массив значений должен быть пустым. Этот массив заменяется во время стратегического слияния патчей.
                    matchLabels:
                      description: |-
                        Карта пар {ключ, значение}. Одна пара {ключ, значение} в карте `matchLabels` эквивалентна элементу `matchExpressions`, ключевое поле которого — `key`,  оператор — `In`, а массив значений содержит только «значение». Требования объединяются оператором `AND`.
                matchConditions:
                  description: Дополнительный список условий соответствия для тонкой фильтрации запросов. Доступно только начиная с версии Kubernetes 1.27.
                  items:
                    description:  MatchCondition представляет собой условие, которое должно быть выполнено для отправки запроса в вебхук.
                    properties:
                      expression:
                        description: |-
                          Представляет собой выражение, которое будет оценено CEL. Должно оцениваться как bool.
                          Выражения CEL имеют доступ к содержимому AdmissionRequest и Authorizer, организованному в переменные CEL:

                          - `object` - объект из входящего запроса. Значение равно `null`` для запросов `DELETE`.
                          - `oldObject` — существующий объект. Для запросов `CREATE` значение равно `null`.
                          - `request` — атрибуты запроса на допуск (/pkg/apis/admission/types.go#AdmissionRequest).
                          - `authorizer` — авторизатор CEL. Может использоваться для выполнения проверок авторизации для субъекта (пользователя или учетной записи службы) запроса. См. https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
                          - `authorizer.requestResource` — CEL ResourceCheck, построенный из `authorizer` и настроенный с помощью ресурса запроса.
                          Документация по CEL: https://kubernetes.io/docs/reference/using-api/cel/.
                      name:
                        description: |-
                          Является идентификатором для этого условия соответствия, используемым для стратегического объединения MatchConditions,
                          а также для предоставления идентификатора для целей ведения журнала. Хорошее имя должно описывать связанное с ним выражение.
                          Имя должно быть квалифицированным именем, состоящим из алфавитно-цифровых символов, `-`, `_` или `.`, и должно начинаться и заканчиваться алфавитно-цифровым символом (например, `MyName`,  или `my.name`,  или `123-abc`, регулярное выражение, используемое для проверки, — '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') с необязательным префиксом поддомена DNS и `/` (например, `example.com/MyName`).
                name:
                  description: |
                    Должно быть доменом с как минимум тремя сегментами, разделенными точками.
                namespace:
                  properties:
                    labelSelector:
                      description: |
                        Селектор меток для фильтрации пространств имен.
                      properties:
                        matchExpressions:
                          description: |-
                            Список фильтров на основе выражений.
                            Итоговый результат — результат пересечения множеств, определяемых всеми фильтрами в списке (операция `И`).
                          items:
                            description: |-
                              Селектор, содержащий значения, ключ и оператор, который  связывает ключ и значения.
                            properties:
                              key:
                                description: |-
                                  Ключ метки, к которому применяется селектор.
                                type: string
                              operator:
                                description: |-
                                  Представляет соотношение ключа с набором значений.
                                  Допустимые операторы: `In`, `NotIn`, `Exists` и `DoesNotExist`.
                                type: string
                              values:
                                description: |-
                                  `values` — массив строковых значений. Если в `operator` значение `In` или `NotIn`, массив значений не должен быть пустым. Если в `operator` значение `Exists` или `DoesNotExist`, массив значений должен быть пустым. Этот массив заменяется во время стратегического слияния патчей.
                        matchLabels:
                          description: |-
                            Карта пар {ключ, значение}. Одна пара {ключ, значение} в карте `matchLabels` эквивалентна элементу `matchExpressions`, ключевое поле которого — `key`,  оператор — `In`, а массив значений содержит только «значение». Требования объединяются оператором `AND`.
                    nameSelector:
                      description: |
                        Селектор имен для фильтрации пространств имен.
                rules:
                  description: |
                    Обязательный список правил, используемых для определения, следует ли отправить запрос к Kubernetes API server в хук.
                  items:
                    properties:
                      apiGroups:
                        description: |
                          API-группы, к которым принадлежат ресурсы. `*` означает все группы.
                      apiVersions:
                        description: |
                          API-версии, к которым принадлежат ресурсы. `*` означает все версии.
                      operations:
                        description: |
                          Операции, которые интересуют admission hook: CREATE, UPDATE, DELETE, CONNECT или * для всех операций.
                      resources:
                        description: |
                          Список ресурсов, к которым применяется это правило.
                      scope:
                        description: |
                          Определяет область действия этого правила. Допустимые значения: `Cluster`, `Namespaced` и `*`. `Cluster` означает, что этому правилу будут соответствовать только ресурсы, относящиеся к кластеру. Объекты API пространства имен относятся к кластеру. `Namespaced` означает, что только ресурсы с пространством имен будут соответствовать этому правилу. `*` означает, что нет ограничений по области действия. Подресурсы соответствуют области действия своего родительского ресурса. По умолчанию используется значение `*`.
                sideEffects:
                  description: |
                    Определяет, знает ли хук о dryRun.
                timeoutSeconds:
                  description: |
                    Количество секунд, которое API сервер должен ждать ответа от хука, прежде чем считать вызов неудачным. По умолчанию 10 (секунд).