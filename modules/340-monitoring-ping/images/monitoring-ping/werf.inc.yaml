---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - image: {{ .ModuleName }}/{{ .ImageName }}-build-artifact
    add: /src/monitoring-ping
    to: /monitoring-ping
    after: setup
imageSpec:
  config:
    entrypoint: ["/monitoring-ping"]
---
image: {{ .ModuleName }}/{{ .ImageName }}-build-artifact
fromImage: builder/golang-alpine-1.23
final: false
import:
  - image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache bash git binutils
  install:
    - cd /src
    - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
  setup:
    - cd /src
    - export GO_VERSION=${GOLANG_VERSION} GOPROXY={{ .GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
    - go build -ldflags="-s -w" -o /src/monitoring-ping
    - chmod 0700 /src/monitoring-ping # it is necessary to make a launch from user deckhouse after allocation of the file /var/run/node-exporter-textfile/monitoring-ping_*.prom
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
  - add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
    to: /src
    stageDependencies:
      install:
        - "**/*"
shell:
  install:
    - cd /src
