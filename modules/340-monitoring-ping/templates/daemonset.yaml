{{- define "monitoring_ping_resources" }}
cpu: 25m
memory: 25Mi
{{- end }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: monitoring-ping
  namespace: d8-monitoring
  {{- include "helm_lib_module_labels" (list . (dict "app" "monitoring-ping")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: monitoring-ping
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "monitoring-ping"
      minAllowed:
        {{- include "monitoring_ping_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 50m
        memory: 25Mi
    {{- include "helm_lib_vpa_kube_rbac_proxy_resources" . | nindent 4 }}

{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: monitoring-ping
  namespace: d8-monitoring
  {{- include "helm_lib_module_labels" (list . (dict "app" "monitoring-ping")) | nindent 2 }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: monitoring-ping
  template:
    metadata:
      labels:
        name: monitoring-ping
        app: monitoring-ping
    spec:
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" . | nindent 6 }}
      serviceAccountName: monitoring-ping
      containers:
      - image: {{ include "helm_lib_module_image" (list . "monitoringPing") }}
        name: monitoring-ping
        {{- /*
          UID: 0 GID:0 using for privilege access for fping because using hostNetwork
          it is necessary to make a launch from user deckhouse after allocation of the file /var/run/node-exporter-textfile/monitoring-ping_*.prom
        */}}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_RAW
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts: # TODO remove volumes in future, need for clean staled metrics
          - name: textfile
            mountPath: /node-exporter-textfile
        livenessProbe:
          httpGet:
            path: /healthz
            port: 4288
            scheme: HTTP
            host: 127.0.0.1
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 4288
            scheme: HTTP
            host: 127.0.0.1
          initialDelaySeconds: 2
          periodSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "monitoring_ping_resources" . | nindent 12 }}
{{- end }}
      - name: kube-rbac-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_common_image" (list . "kubeRbacProxy") }}
        args:
          - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):4229"
          - "--v=2"
          - "--logtostderr=true"
          - "--stale-cache-interval=1h30m"
          - "--livez-path=/livez"
        env:
          - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KUBE_RBAC_PROXY_CONFIG
            value: |
              upstreams:
              - upstream: http://127.0.0.1:4288/
                path: /
                authorization:
                  resourceAttributes:
                    namespace: d8-monitoring
                    apiGroup: apps
                    apiVersion: v1
                    resource: daemonsets
                    subresource: prometheus-metrics
                    name: monitoring-ping
        ports:
          - containerPort: 4229
            name: https-metrics
        livenessProbe:
          httpGet:
            path: /livez
            port: 4229
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /livez
            port: 4229
            scheme: HTTPS
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
  {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 12 }}
  {{- end }}
      volumes: # TODO remove volumes in future, need for clean staled metrics
        - name: textfile
          hostPath:
            path: /var/run/node-exporter-textfile
      imagePullSecrets:
      - name: deckhouse-registry
