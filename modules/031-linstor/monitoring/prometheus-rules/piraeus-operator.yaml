- name: kubernetes.linstor.piraeus_operator_state
  rules:
    - alert: D8PiraeusOperatorTargetDown
      expr: max by (job) (up{job="piraeus-operator"} == 0)
      for: 1m
      labels:
        severity_level: "6"
        tier: cluster
      annotations:
        plk_markup_format: "markdown"
        plk_protocol_version: "1"
        plk_create_group_if_not_exists__d8_piraeus_operator_health: ",D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_ignore_labels: "job"
        summary: Prometheus cannot scrape the piraeus-operator metrics.
        description: |
          The recommended course of action:
          1. Check the Pod status: `kubectl -n d8-linstor get pod -l app=piraeus-operator`
          2. Or check the Pod logs: `kubectl -n d8-linstor logs -l app=piraeus-operator -c piraeus-operator`

    - alert: D8PiraeusOperatorTargetAbsent
      expr: absent(up{job="piraeus-operator"}) == 1
      for: 15m
      labels:
        severity_level: "6"
        tier: cluster
      annotations:
        plk_protocol_version: "1"
        plk_markup_format: "markdown"
        plk_ignore_labels: "job"
        plk_create_group_if_not_exists__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: There is no `piraeus-operator` target in Prometheus.
        description: |
          The recommended course of action:
          1. Check the Pod status: `kubectl -n d8-linstor get pod -l app=piraeus-operator`
          2. Or check the Pod logs: `kubectl -n d8-linstor logs -l app=piraeus-operator -c piraeus-operator`

    - alert: D8PiraeusOperatorPodIsNotReady
      expr: min by (pod) (kube_pod_status_ready{condition="true", namespace="d8-linstor", pod=~"piraeus-operator-.*"}) != 1
      for: 30m
      labels:
        severity_level: "6"
        tier: cluster
      annotations:
        plk_protocol_version: "1"
        plk_markup_format: "markdown"
        plk_labels_as_annotations: "pod"
        plk_create_group_if_not_exists__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: The piraeus-operator Pod is NOT Ready.
        description: |
          The recommended course of action:
          1. Retrieve details of the Deployment: `kubectl -n d8-linstor describe deploy piraeus-operator`
          2. View the status of the Pod and try to figure out why it is not running: `kubectl -n d8-linstor describe pod -l app=piraeus-operator`

    - alert: D8PiraeusOperatorPodIsNotRunning
      expr: absent(kube_pod_status_phase{namespace="d8-linstor",phase="Running",pod=~"piraeus-operator-.*"})
      for: 30m
      labels:
        severity_level: "6"
        tier: cluster
      annotations:
        plk_protocol_version: "1"
        plk_markup_format: "markdown"
        plk_create_group_if_not_exists__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_piraeus_operator_health: "D8PiraeusOperatorHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: The piraeus-operator Pod is NOT Running.
        description: |
          The recommended course of action:
          1. Retrieve details of the Deployment: `kubectl -n d8-linstor describe deploy piraeus-operator`
          2. View the status of the Pod and try to figure out why it is not running: `kubectl -n d8-linstor describe pod -l app=piraeus-operator`
