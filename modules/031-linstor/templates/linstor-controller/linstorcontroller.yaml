# Source https://github.com/piraeusdatastore/piraeus-operator/blob/master/charts/piraeus/templates/operator-satelliteset.yaml
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: linstor-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-controller" "workload-resource-policy.deckhouse.io" "every-node")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: linstor-controller
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: piraeus.linbit.com/v1
kind: LinstorController
metadata:
  name: linstor
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-controller")) | nindent 2 }}
spec:
  {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 2 }}
  {{- include "helm_lib_tolerations" (tuple . "master") | nindent 2 }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          {{- range $k, $v := index ((include "helm_lib_node_selector" (tuple . "master")) | fromYaml) "nodeSelector" }}
          - key: {{ $k }}
            operator: In
            values:
            - {{ $v | quote }}
          {{- end }}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: linstor
              app.kubernetes.io/managed-by: piraeus-operator
              app.kubernetes.io/name: piraeus-controller
  dbConnectionURL: k8s
  #luksSecret: linstor-passphrase
  sslSecret: linstor-controller-ssl-cert
  dbCertSecret: ""
  dbUseClientCert: false
  drbdRepoCred: deckhouse-registry
  serviceAccountName: linstor-controller
  controllerImage: {{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.linstor.linstorServer }}
  imagePullPolicy: IfNotPresent
  linstorHttpsClientSecret: linstor-client-https-cert
  linstorHttpsControllerSecret: linstor-controller-https-cert
  resources:
    requests:
      {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 6 }}
  replicas: 1
  additionalEnv: []
  additionalProperties:
    Autoplacer/Weights/MaxFreeSpace: "0"
    Autoplacer/Weights/MinReservedSpace: "1"
    Autoplacer/Weights/MinRscCount: "0"
    Autoplacer/Weights/MaxThroughput: "0"
  logLevel: info
  httpBindAddress: "127.0.0.1"
  sidecars:
  - name: kube-rbac-proxy
    {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" . | nindent 4 }}
    image: "{{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.common.kubeRbacProxy }}"
    args:
      - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):3370"
      - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      - "--v=2"
      - "--logtostderr=true"
      - "--stale-cache-interval=1h30m"
    env:
      - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: KUBE_RBAC_PROXY_CONFIG
        value: |
          upstreams:
          - upstream: http://127.0.0.1:3370/metrics
            path: /metrics
            authorization:
              resourceAttributes:
                namespace: d8-{{ .Chart.Name }}
                apiGroup: apps
                apiVersion: v1
                resource: deployments
                subresource: prometheus-metrics
                name: linstor-controller
    resources:
      requests:
        {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
