# Source https://github.com/piraeusdatastore/piraeus-operator/blob/master/charts/piraeus/templates/ha-controller-deployment.yaml
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: linstor-ha-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-ha-controller" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: linstor-ha-controller
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    helm.sh/hook: post-upgrade, post-install
    helm.sh/hook-delete-policy: before-hook-creation
  name: linstor-ha-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-ha-controller" )) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app: linstor-ha-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linstor-ha-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-ha-controller" )) | nindent 2 }}
spec:
  replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: linstor-ha-controller
  template:
    metadata:
      labels:
        app: linstor-ha-controller
    spec:
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "linstor-ha-controller")) | nindent 6 }}
      imagePullSecrets:
        - name: deckhouse-registry
      serviceAccountName: linstor-ha-controller
      initContainers:
        - name: wait-for-linstor
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" . | nindent 10 }}
          image: "{{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.linstor.piraeusHaController }}"
          imagePullPolicy: "IfNotPresent"
          command:
            - /linstor-wait-until
            - api-online
          env:
            - name: LS_CONTROLLERS
              value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
            - name: LS_USER_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: tls.crt
            - name: LS_USER_KEY
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: tls.key
            - name: LS_ROOT_CA
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: ca.crt
      containers:
        - name: piraeus-ha-controller
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" . | nindent 10 }}
          image: "{{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.linstor.piraeusHaController }}"
          imagePullPolicy: "IfNotPresent"
          args:
            - --leader-election=true
            - --leader-election-lease-name=$(NAME)
            - --leader-election-namespace=$(NAMESPACE)
            - --leader-election-resource-name=linstor-ha-controller
            - --v=5
          env:
            - name: LS_CONTROLLERS
              value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
            - name: LS_USER_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: tls.crt
            - name: LS_USER_KEY
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: tls.key
            - name: LS_ROOT_CA
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: ca.crt
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              port: 8080
              path: /healthz
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
