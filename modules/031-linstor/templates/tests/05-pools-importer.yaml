---
apiVersion: batch/v1
kind: Job
metadata:
  name: linstor-test-pools-importer
  namespace: d8-{{ .Chart.Name }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-test" )) | nindent 2 }}
spec:
  backoffLimit: 1
  completions: 1
  template:
    spec:
      restartPolicy: Never
      {{- include "helm_lib_priority_class" (tuple . "cluster-low") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      imagePullSecrets:
        - name: deckhouse-registry
      serviceAccountName: linstor-pools-importer
      containers:
        - name: test
          {{- include "helm_lib_module_container_security_context_privileged" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "linstorServer") }}
          imagePullPolicy: "IfNotPresent"
          command: [ "/bin/bash" ]
          args:
            - -xc
            - |
              CA_CERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              URL="https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_PORT_443_TCP_PORT"
              curlsc() {
                curl --fail -o /dev/null -s --cacert "$CA_CERT" -H "Authorization: Bearer $TOKEN" "$URL/apis/storage.k8s.io/v1/storageclasses/$@"
              }

              for i in $(losetup --list | awk '$6 == "/tmp/linstor-integration-test" {print $1}'); do
                losetup -d "$i"
              done
              rm -f /tmp/linstor-integration-test

              fallocate -l 1G /tmp/linstor-integration-test
              loop=$(losetup --find --show /tmp/linstor-integration-test)
              pvcreate "$loop"
              vgcreate linstor_integration_test "$loop" --add-tag linstor-integration-test-vg
              lvcreate -L 600M -T linstor_integration_test/test --add-tag linstor-integration-test-tp
              lvmdiskscan
              fail=0

              vg_sp_found=0
              tp_sp_found=0
              vg_sc_found=0
              tp_sc_found=0

              try=0
              until [ "${vg_sp_found}${tp_sc_found}${vg_sc_found}${tp_sc_found}" = 1111 ] || [ "$((try++))" -ge 5 ]; do
                sleep 5
                linstor -m sp l -s integration-test-vg -n "$KUBE_NODE_NAME" | grep -q stor_pool_name && vg_sp_found=1
                linstor -m sp l -s integration-test-tp -n "$KUBE_NODE_NAME" | grep -q stor_pool_name && tp_sp_found=1
                curlsc linstor-integration-test-tp-r1 && vg_sc_found=1
                curlsc linstor-integration-test-vg-r1 && tp_sc_found=1
              done

              if [ "$vg_sp_found" -ne 1 ]; then
                echo "Can't find storage pool for LVM Volume Group"
                fail=1
              else
                linstor sp d "$KUBE_NODE_NAME" integration-test-vg
              fi

              if [ "$tp_sp_found" -ne 1 ]; then
                echo "Can't find storage pool for LVM Thin Pool"
                fail=1
              else
                linstor sp d "$KUBE_NODE_NAME" integration-test-tp
              fi

              if [ "$vg_sc_found" -ne 1 ]; then
                echo "Can't find storage class for LVM Volume Group"
                fail=1
              else
                curlsc linstor-integration-test-vg-r1 -X DELETE
                curlsc linstor-integration-test-vg-r2 -X DELETE
                curlsc linstor-integration-test-vg-r3 -X DELETE
              fi

              if [ "$tp_sc_found" -ne 1 ]; then
                echo "Can't find storage class for LVM Thin Pool"
                fail=1
              else
                curlsc linstor-integration-test-tp-r1 -X DELETE
                curlsc linstor-integration-test-tp-r2 -X DELETE
                curlsc linstor-integration-test-tp-r3 -X DELETE
              fi

              vgremove -y -f linstor_integration_test
              losetup -d "$loop"
              rm -f /tmp/linstor-integration-test

              exit $fail
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
          volumeMounts:
          - mountPath: /sys
            name: sys-dir
          - mountPath: /device-dir
            name: device-dir
          - mountPath: /tmp-dir
            name: tmp-dir
          - mountPath: /etc/linstor
            name: linstor-conf
          - mountPath: /etc/linstor/client
            name: linstor-client
      volumes:
      - hostPath:
          path: /dev/
          type: ""
        name: device-dir
      - hostPath:
          path: /sys/
          type: Directory
        name: sys-dir
      - hostPath:
          path: /tmp/
          type: ""
        name: tmp-dir
      - configMap:
          defaultMode: 420
          name: linstor-controller-config
        name: linstor-conf
      - name: linstor-client
        secret:
          defaultMode: 420
          secretName: linstor-client-https-cert
