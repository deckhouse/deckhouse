---
apiVersion: batch/v1
kind: Job
metadata:
  name: linstor-test-pod-with-volume
  namespace: d8-{{ .Chart.Name }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "3"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-test" )) | nindent 2 }}
spec:
  completions: 1
  template:
    spec:
      schedulerName: linstor
      restartPolicy: Never
      {{- include "helm_lib_priority_class" (tuple . "cluster-low") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
        - name: test
          {{- include "helm_lib_module_container_security_context_not_allow_privilege_escalation" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "listorServer") }}
          imagePullPolicy: "IfNotPresent"
          command: [ "/bin/bash" ]
          args:
            - -xc
            - |
              echo 123 > /data/some_file
              cat /data/some_file
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
          volumeMounts:
          - mountPath: /data
            name: data
      volumes:
      - name: data
        ephemeral:
          volumeClaimTemplate:
            metadata:
              labels:
                app: linstor-test
            spec:
              accessModes: [ "ReadWriteOnce" ]
              storageClassName: "linstor-test-storage-class"
              resources:
                requests:
                  storage: 10Mi
