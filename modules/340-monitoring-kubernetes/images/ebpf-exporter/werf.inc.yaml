---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/entrypoint
  to: /src/entrypoint
  stageDependencies:
    install:
    - '**/*'
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/metrics
  to: /src/metrics
  stageDependencies:
    install:
    - '**/*'
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
  - cd /src
  - git clone --branch=v2.4.2 --depth=1 {{ .SOURCE_REPO }}/cloudflare/ebpf_exporter.git ebpf-exporter
  - cd ebpf-exporter
  - git apply /patches/*.patch --verbose
  - mkdir -p libbpf
  - git clone --branch v1.4.2 --depth=1 {{ .SOURCE_REPO }}/libbpf/libbpf.git libbpf
  - rm -rf libbpf/.git .git
---
image: {{ .ModuleName }}/{{ .ImageName }}/entrypoint-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/entrypoint
  to: /entrypoint
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - cd /entrypoint
  - export GOPROXY={{ .GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - go build -ldflags="-s -w" -o entrypoint main.go
  - chown -R 64535:64535 /entrypoint/
  - chmod 0700 /entrypoint/entrypoint
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_BOOKWORM }}
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /build
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  {{- include "debian packages proxy" . | nindent 2 }}
  - apt-get install -y build-essential clang libelf-dev
  install:
  - export BUILD_DIR="/build/ebpf-exporter"
  - cd ${BUILD_DIR}
  - make -C ./libbpf/src LIBSUBDIR=lib DESTDIR=../dest install install_uapi_headers
  - export CGO_LDFLAGS="-L${BUILD_DIR}/libbpf/dest/usr/lib -l bpf"
  - export CGO_CFLAGS="-I${BUILD_DIR}/libbpf/dest/usr/include"
  - GOPROXY={{ .GOPROXY }} CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o ./ebpf_exporter -v -ldflags=" -extldflags "-static"" ./cmd/ebpf_exporter
  - mkdir -p metrics
  - cp /build/metrics/* ${BUILD_DIR}/metrics
  - make -C metrics clean build
---
{{ $copyFiles := "/sbin/setcap" }}
---
image: {{ .ModuleName }}/{{ .ImageName }}-binaries-artifact
fromImage: common/relocate-artifact
final: false
shell:
  install:
    - /binary_replace.sh -i "{{ $copyFiles }}" -o /relocate
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
- image: {{ .ModuleName }}/{{ .ImageName }}/entrypoint-artifact
  add: /entrypoint/entrypoint
  to: /usr/local/bin/entrypoint
  before: install
- image: {{ .ModuleName }}/{{ .ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
- image: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /build/ebpf-exporter/ebpf_exporter
  to: /usr/local/bin/ebpf_exporter
  before: setup
- image: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /build/ebpf-exporter/metrics
  to: /metrics
  before: setup
  includePaths:
  - '**/*.yaml'
  - '**/*.o'
docker:
  ENTRYPOINT: ["/usr/local/bin/entrypoint"]
