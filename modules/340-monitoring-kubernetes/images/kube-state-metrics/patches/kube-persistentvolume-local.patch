diff --git a/internal/store/persistentvolume.go b/internal/store/persistentvolume.go
index 54b0251d..e4e1d3f9 100644
--- a/internal/store/persistentvolume.go
+++ b/internal/store/persistentvolume.go
@@ -164,7 +164,7 @@ func persistentVolumeMetricFamilies(allowAnnotationsList, allowLabelsList []stri
 			metric.Gauge,
 			"",
 			wrapPersistentVolumeFunc(func(p *v1.PersistentVolume) *metric.Family {
-				var gcePDDiskName, ebsVolumeID, azureDiskName, fcWWIDs, fcLun, fcTargetWWNs, iscsiTargetPortal, iscsiIQN, iscsiLun, iscsiInitiatorName, nfsServer, nfsPath, csiDriver, csiVolumeHandle string
+				var gcePDDiskName, ebsVolumeID, azureDiskName, fcWWIDs, fcLun, fcTargetWWNs, iscsiTargetPortal, iscsiIQN, iscsiLun, iscsiInitiatorName, nfsServer, nfsPath, csiDriver, csiVolumeHandle, localFS, localPath string

 				switch {
 				case p.Spec.PersistentVolumeSource.GCEPersistentDisk != nil:
@@ -202,6 +202,11 @@ func persistentVolumeMetricFamilies(allowAnnotationsList, allowLabelsList []stri
 				case p.Spec.PersistentVolumeSource.CSI != nil:
 					csiDriver = p.Spec.PersistentVolumeSource.CSI.Driver
 					csiVolumeHandle = p.Spec.PersistentVolumeSource.CSI.VolumeHandle
+				case p.Spec.Local != nil:
+					localPath = p.Spec.Local.Path
+					if p.Spec.Local.FSType != nil {
+						localFS = *p.Spec.Local.FSType
+					}
 				}

 				return &metric.Family{
@@ -223,6 +228,8 @@ func persistentVolumeMetricFamilies(allowAnnotationsList, allowLabelsList []stri
 								"nfs_path",
 								"csi_driver",
 								"csi_volume_handle",
+								"local_path",
+								"local_fs",
 							},
 							LabelValues: []string{
 								p.Spec.StorageClassName,
@@ -240,6 +247,8 @@ func persistentVolumeMetricFamilies(allowAnnotationsList, allowLabelsList []stri
 								nfsPath,
 								csiDriver,
 								csiVolumeHandle,
+								localPath,
+								localFS,
 							},
 							Value: 1,
 						},
