---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}modules/150-{{ $.ModuleName }}/images/{{ $.ImageName }}/src/web/
  to: /src/web
  stageDependencies:
    install:
    - '**/*'
- add: /{{ $.ModulePath }}modules/150-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
    - git clone --branch v2.41.1 --depth 1 {{ .SOURCE_REPO }}/dexidp/dex.git /src/dex
    - cd /src/dex
    - git apply /patches/*.patch --verbose

---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
  - image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 4 }}
    - apk add --no-cache build-base
  install:
    - export GO_VERSION=${GOLANG_VERSION} GOPROXY={{ $.GOPROXY }} CGO_ENABLED=1 GOOS=linux GOARCH=amd64
    - cd /src/dex
    - go build -ldflags '-s -w' -ldflags "-linkmode external -extldflags -static" -tags netgo ./cmd/dex
    - chown 64535:64535 dex
    - chmod 0700 dex
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - image: {{ .ModuleName }}/{{ $.ImageName }}-artifact
    add: /src/dex/dex
    to: /usr/local/bin/dex
    before: setup
  - image: {{ .ModuleName }}/{{ $.ImageName }}-src-artifact
    add: /src/web/
    to: /web
    before: setup
docker:
  ENTRYPOINT: ["dex", "serve", "/etc/dex/config.docker.yaml"]
