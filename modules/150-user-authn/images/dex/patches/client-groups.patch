diff --git a/storage/kubernetes/types.go b/storage/kubernetes/types.go
--- a/storage/kubernetes/types.go	(revision 43956db7fd75c488a82c70cf231f44287300a75d)
+++ b/storage/kubernetes/types.go	(date 1724337051437)
@@ -251,6 +251,8 @@

 	Name    string `json:"name,omitempty"`
 	LogoURL string `json:"logoURL,omitempty"`
+
+	AllowedGroups []string `json:"allowedGroups,omitempty"`
 }

 // ClientList is a list of Clients.
@@ -270,25 +272,27 @@
 			Name:      cli.idToName(c.ID),
 			Namespace: cli.namespace,
 		},
-		ID:           c.ID,
-		Secret:       c.Secret,
-		RedirectURIs: c.RedirectURIs,
-		TrustedPeers: c.TrustedPeers,
-		Public:       c.Public,
-		Name:         c.Name,
-		LogoURL:      c.LogoURL,
+		ID:            c.ID,
+		Secret:        c.Secret,
+		RedirectURIs:  c.RedirectURIs,
+		TrustedPeers:  c.TrustedPeers,
+		Public:        c.Public,
+		Name:          c.Name,
+		LogoURL:       c.LogoURL,
+		AllowedGroups: c.AllowedGroups,
 	}
 }

 func toStorageClient(c Client) storage.Client {
 	return storage.Client{
-		ID:           c.ID,
-		Secret:       c.Secret,
-		RedirectURIs: c.RedirectURIs,
-		TrustedPeers: c.TrustedPeers,
-		Public:       c.Public,
-		Name:         c.Name,
-		LogoURL:      c.LogoURL,
+		ID:            c.ID,
+		Secret:        c.Secret,
+		RedirectURIs:  c.RedirectURIs,
+		TrustedPeers:  c.TrustedPeers,
+		Public:        c.Public,
+		Name:          c.Name,
+		LogoURL:       c.LogoURL,
+		AllowedGroups: c.AllowedGroups,
 	}
 }

diff --git a/storage/storage.go b/storage/storage.go
--- a/storage/storage.go	(revision 43956db7fd75c488a82c70cf231f44287300a75d)
+++ b/storage/storage.go	(date 1724337051440)
@@ -171,6 +171,8 @@
 	// Name and LogoURL used when displaying this client to the end user.
 	Name    string `json:"name" yaml:"name"`
 	LogoURL string `json:"logoURL" yaml:"logoURL"`
+
+	AllowedGroups []string `json:"allowedGroups,omitempty" yaml:"allowedGroups,omitempty"`
 }

 // Claims represents the ID Token claims supported by the server.
diff --git a/server/handlers.go b/server/handlers.go
--- a/server/handlers.go	(revision 43956db7fd75c488a82c70cf231f44287300a75d)
+++ b/server/handlers.go	(date 1724396069272)
@@ -18,6 +18,7 @@
 	"time"

 	"github.com/coreos/go-oidc/v3/oidc"
+	"github.com/dexidp/dex/pkg/groups"
 	"github.com/go-jose/go-jose/v4"
 	"github.com/gorilla/mux"

@@ -380,7 +381,7 @@
 		redirectURL, canSkipApproval, err := s.finalizeLogin(r.Context(), identity, authReq, conn.Connector)
 		if err != nil {
 			s.logger.ErrorContext(r.Context(), "failed to finalize login", "err", err)
-			s.renderError(r, w, http.StatusInternalServerError, "Login error.")
+			s.renderError(r, w, http.StatusUnauthorized, fmt.Sprintf("Failed to authenticate: %v", err))
 			return
 		}

@@ -388,7 +389,7 @@
 			authReq, err = s.storage.GetAuthRequest(authReq.ID)
 			if err != nil {
 				s.logger.ErrorContext(r.Context(), "failed to get finalized auth request", "err", err)
-				s.renderError(r, w, http.StatusInternalServerError, "Login error.")
+				s.renderError(r, w, http.StatusUnauthorized, fmt.Sprintf("Failed to authenticate: %v", err))
 				return
 			}
 			s.sendCodeResponse(w, r, authReq)
@@ -473,14 +474,14 @@

 	if err != nil {
 		s.logger.ErrorContext(r.Context(), "failed to authenticate", "err", err)
-		s.renderError(r, w, http.StatusInternalServerError, fmt.Sprintf("Failed to authenticate: %v", err))
+		s.renderError(r, w, http.StatusUnauthorized, fmt.Sprintf("Failed to authenticate: %v", err))
 		return
 	}

 	redirectURL, canSkipApproval, err := s.finalizeLogin(ctx, identity, authReq, conn.Connector)
 	if err != nil {
 		s.logger.ErrorContext(r.Context(), "failed to finalize login", "err", err)
-		s.renderError(r, w, http.StatusInternalServerError, "Login error.")
+		s.renderError(r, w, http.StatusUnauthorized, fmt.Sprintf("Failed to authenticate: %v", err))
 		return
 	}

@@ -488,7 +489,7 @@
 		authReq, err = s.storage.GetAuthRequest(authReq.ID)
 		if err != nil {
 			s.logger.ErrorContext(r.Context(), "failed to get finalized auth request", "err", err)
-			s.renderError(r, w, http.StatusInternalServerError, "Login error.")
+			s.renderError(r, w, http.StatusUnauthorized, fmt.Sprintf("Failed to authenticate: %v", err))
 			return
 		}
 		s.sendCodeResponse(w, r, authReq)
@@ -525,6 +526,18 @@
 		email += " (unverified)"
 	}

+	client, err := s.storage.GetClient(authReq.ClientID)
+	if err != nil {
+		return "", false, fmt.Errorf("failed to retrieve client")
+	}
+
+	if len(client.AllowedGroups) > 0 {
+		authReq.Claims.Groups = groups.Filter(authReq.Claims.Groups, client.AllowedGroups)
+		if len(authReq.Claims.Groups) == 0 {
+			return "", false, fmt.Errorf("user not in allowed groups")
+		}
+	}
+
 	s.logger.InfoContext(ctx, "login successful",
 		"connector_id", authReq.ConnectorID, "username", claims.Username,
 		"preferred_username", claims.PreferredUsername, "email", email, "groups", claims.Groups)
