diff --git a/storage/kubernetes/types.go b/storage/kubernetes/types.go
--- a/storage/kubernetes/types.go	(revision 23efe9200ccd9e0a69242bf61cd221462370d1f4)
+++ b/storage/kubernetes/types.go	(date 1718352821998)
@@ -251,6 +251,8 @@

 	Name    string `json:"name,omitempty"`
 	LogoURL string `json:"logoURL,omitempty"`
+
+	AllowedGroups []string `json:"allowedGroups,omitempty"`
 }

 // ClientList is a list of Clients.
@@ -270,25 +272,27 @@
 			Name:      cli.idToName(c.ID),
 			Namespace: cli.namespace,
 		},
-		ID:           c.ID,
-		Secret:       c.Secret,
-		RedirectURIs: c.RedirectURIs,
-		TrustedPeers: c.TrustedPeers,
-		Public:       c.Public,
-		Name:         c.Name,
-		LogoURL:      c.LogoURL,
+		ID:            c.ID,
+		Secret:        c.Secret,
+		RedirectURIs:  c.RedirectURIs,
+		TrustedPeers:  c.TrustedPeers,
+		Public:        c.Public,
+		Name:          c.Name,
+		LogoURL:       c.LogoURL,
+		AllowedGroups: c.AllowedGroups,
 	}
 }

 func toStorageClient(c Client) storage.Client {
 	return storage.Client{
-		ID:           c.ID,
-		Secret:       c.Secret,
-		RedirectURIs: c.RedirectURIs,
-		TrustedPeers: c.TrustedPeers,
-		Public:       c.Public,
-		Name:         c.Name,
-		LogoURL:      c.LogoURL,
+		ID:            c.ID,
+		Secret:        c.Secret,
+		RedirectURIs:  c.RedirectURIs,
+		TrustedPeers:  c.TrustedPeers,
+		Public:        c.Public,
+		Name:          c.Name,
+		LogoURL:       c.LogoURL,
+		AllowedGroups: c.AllowedGroups,
 	}
 }

diff --git a/server/handlers.go b/server/handlers.go
--- a/server/handlers.go	(revision 23efe9200ccd9e0a69242bf61cd221462370d1f4)
+++ b/server/handlers.go	(date 1718355021185)
@@ -22,6 +22,7 @@
 	"github.com/gorilla/mux"

 	"github.com/dexidp/dex/connector"
+	"github.com/dexidp/dex/pkg/groups"
 	"github.com/dexidp/dex/server/internal"
 	"github.com/dexidp/dex/storage"
 )
@@ -629,6 +630,22 @@
 		s.renderError(r, w, http.StatusUnauthorized, "Unauthorized request")
 		return
 	}
+
+	client, err := s.storage.GetClient(authReq.ClientID)
+	if err != nil {
+		s.logger.Error("Failed to get client", "client_id", authReq.ClientID, "err", err)
+		s.renderError(r, w, http.StatusInternalServerError, "Failed to retrieve client.")
+		return
+	}
+
+	if len(client.AllowedGroups) > 0 {
+		authReq.Claims.Groups = groups.Filter(authReq.Claims.Groups, client.AllowedGroups)
+		if len(authReq.Claims.Groups) == 0 {
+			s.logger.Error(fmt.Sprintf("user not in allowed groups: %v", client.AllowedGroups))
+			s.renderError(r, w, http.StatusInternalServerError, "User not in allowed groups.")
+			return
+		}
+	}

 	switch r.Method {
 	case http.MethodGet:
diff --git a/storage/storage.go b/storage/storage.go
--- a/storage/storage.go	(revision 23efe9200ccd9e0a69242bf61cd221462370d1f4)
+++ b/storage/storage.go	(date 1718352822001)
@@ -171,6 +171,8 @@
 	// Name and LogoURL used when displaying this client to the end user.
 	Name    string `json:"name" yaml:"name"`
 	LogoURL string `json:"logoURL" yaml:"logoURL"`
+
+	AllowedGroups []string `json:"allowedGroups,omitempty" yaml:"allowedGroups,omitempty"`
 }

 // Claims represents the ID Token claims supported by the server.
