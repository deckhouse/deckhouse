spec:
  versions:
    - name: v1alpha1
      schema: &schema
        openAPIV3Schema:
          description: |-
            При появлении объекта `DexAuthenticator` в пространстве имен будут созданы:
            * Deployment с OAuth2-Proxy и Redis;
            * Сервис (Service), ведущий на OAuth2-Proxy;
            * Ingress, который принимает запросы по адресу `https://<applicationDomain>/dex-authenticator` и отправляет их в сторону сервиса;
            * Секреты, необходимые для доступа к Dex.

            **Внимание.** При перезапуске пода с OAuth2-Proxy, с помощью refresh-токена в память Redis будут получены и сохранены актуальные Access Token и ID Token.
          properties:
            spec:
              properties:
                applicationDomain:
                  description: |-
                    Внешний адрес вашего приложения, с которого пользовательский запрос будет перенаправлен для аутентификации в Dex.

                    **Внимание.** Адрес не должен содержать HTTP-схему.
                sendAuthorizationHeader:
                  description: |-
                    Флаг, который отвечает за отправку конечному приложению заголовка `Authorization: Bearer`.

                    **Внимание.** Включайте, только если приложение умеет обрабатывать такой заголовок.
                applicationIngressCertificateSecretName:
                  description: |
                    Имя секрета (Secret) с TLS-сертификатом (от домена `applicationDomain`), который используется в Ingress-объекте приложения. Секрет должен обязательно находиться в том же пространстве имен, что и DexAuthenticator.
                applicationIngressClassName:
                  description: |
                    Название Ingress-класса, которое будет использоваться в Ingress-объекте (должно совпадать с названием Ingress-класса для `applicationDomain`).
                keepUsersLoggedInFor:
                  description: |
                    Отвечает за то, как долго пользовательская сессия будет считаться активной, если пользователь бездействует (указывается с суффиксом `s`, `m` или `h`).
                allowedGroups:
                  description: |-
                    Группы, пользователям которых разрешено проходить аутентификацию.

                    **По умолчанию** разрешено всем группам.
                whitelistSourceRanges:
                  description: |
                    Список адресов в формате CIDR, которым разрешено проходить аутентификацию. Если параметр не указан, аутентификацию разрешено проходить без ограничения по IP-адресу.
                signOutURL:
                  description: |
                    Укажите URL приложения, с которого запросы будут перенаправляться на URL выхода в `dex-authenticator`.
                additionalApplications:
                  description: |
                    Список дополнительных приложений (Ingress-ресурсов), для которых пользовательский запрос будет перенаправлен для аутентификации в Dex.
                  items:
                    properties:
                      domain:
                        description: |-
                          Внешний адрес вашего приложения, с которого пользовательский запрос будет перенаправлен для аутентификации в Dex.

                          **Внимание.** Адрес не должен содержать HTTP-схему.
                      ingressSecretName:
                        description: |
                          Имя секрета с TLS-сертификатом (от домена `domain`), который используется в Ingress-объекте приложения. Секрет должен обязательно находиться в том же пространстве имен, что и DexAuthenticator.
                      ingressClassName:
                        description: |
                          Название Ingress-класса, которое будет использоваться в Ingress-объекте (должно совпадать с названием Ingress-класса для `applicationDomain` и `domain`).
                      signOutURL:
                        description: |
                          Укажите URL приложения, с которого запросы будут перенаправляться на URL выхода в `dex-authenticator`.
                      whitelistSourceRanges:
                        description: |
                          Список адресов в формате CIDR, которым разрешено проходить аутентификацию. Если параметр не указан, аутентификацию разрешено проходить без ограничения по IP-адресу.
                nodeSelector:
                  description: |-
                    Определяет nodeSelector для подов `dex-authenticator`.

                    **Формат**: стандартный список nodeSelector. Поды инстанса унаследуют это поле как есть.
                tolerations:
                  description: |
                     Определяет tolerations для подов `dex-authenticator`.

                     **Формат**: стандартный список [toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/). Поды инстанса унаследуют это поле как есть.
                  items:
                    properties:
                      effect:
                        description: |
                          Определяет, какому effect’у taint’а соответствует описываемый toleration. Пустой подразумевает соответствие любому effect.
                      key:
                        description: |-
                          Определяет, какому ключу (key) taint’a соответствует описываемый toleration. Пустой подразумевает соответствие любому ключу.

                          Если ключ (key) не указан (пуст), `operator` должен быть `Exists`, что подразумевает соответствие любым `value` и `key`.
                      operator:
                        description: |-
                          Определяет отношение ключа (key) к значению (value) — должен ли ключ быть равен (`Equal`) значению или допустимо существование ключа с любым значением.

                          Указание `Exists` равносильно допуску любого значения для value, чтобы под с указанным toleration удовлетворял соответствующему taint.
                      tolerationSeconds:
                        description: |-
                          Определяет период времени в секундах, в течение которого планировщик должен ждать, прежде чем выгнать (evict) под с узла, если toleration перестал удовлетворять taint’у (справедливо **только** для effect `NoExecute`, иначе игнорируется).

                          Если **не установлено**, тогда под не будет выгнан с узла, если toleration перестал удовлетворять taint’у. Если **установлен в ноль** (или отрицателен), под будет выгнан с узла немедленно, если toleration перестал удовлетворять taint’у..

                          **По умолчанию** используется значение «не установлено».
                      value:
                        description: |-
                          Значение, которому должен удовлетворять toleration.

                          Должно быть пустым, если operator имеет параметр `Exists`.
      additionalPrinterColumns: &additionalPrinterColumns
        - jsonPath: .spec.applicationDomain
          name: Domain
          type: string
    - name: v1
      served: true
      storage: false
      schema: *schema
      additionalPrinterColumns: *additionalPrinterColumns
    - name: v2alpha1
      schema: &schema
        openAPIV3Schema:
          description: |-
            При появлении объекта `DexAuthenticator` в пространстве имен будут созданы:
            * Deployment с oAuth2 Proxy и Redis;
            * Сервис (Service), ведущий на oAuth2 Proxy;
            * Ingress, который принимает запросы по адресу `https://<applicationDomain>/dex-authenticator` и отправляет их в сторону сервиса;
            * Секреты, необходимые для доступа к Dex.

            **Внимание.** При перезапуске пода с oAuth2 Proxy, с помощью refresh-токена в память Redis будут получены и сохранены актуальные Access Token и ID Token.
          properties:
            spec:
              properties:
                sendAuthorizationHeader:
                  description: |-
                    Флаг, который отвечает за отправку конечному приложению заголовка `Authorization: Bearer`.

                    **Внимание.** Включайте, только если приложение умеет обрабатывать такой заголовок.
                keepUsersLoggedInFor:
                  description: |
                    Отвечает за то, как долго пользовательская сессия будет считаться активной, если пользователь бездействует (указывается с суффиксом `s`, `m` или `h`).
                allowedGroups:
                  description: |-
                   Группы, пользователям которых разрешено проходить аутентификацию.

                   **По умолчанию** разрешено всем группам.
                  x-doc-default: Разрешены все группы.
                applications:
                  description: |
                    Список приложений (Ingress ресурсов), для которых пользовательский запрос будет перенаправлен для аутентификации в Dex.
                  items:
                    properties:
                      domain:
                        description: |-
                          Внешний адрес вашего приложения, с которого пользовательский запрос будет перенаправлен для аутентификации в Dex.

                          **Внимание.** Адрес не должен содержать HTTP-схему.
                      ingressSecretName:
                        description: |
                          Имя секрета с TLS-сертификатом (от домена `applicationDomain`), который используется в Ingress-объекте приложения. Секрет должен обязательно находиться в том же пространстве имен, что и DexAuthenticator.
                      ingressClassName:
                        description: |
                          Название Ingress-класса, которое будет использоваться в Ingress-объекте (должно совпадать с названием Ingress-класса для `applicationDomain`).
                      signOutURL:
                        description: |
                          Укажите URL приложения, с которого запросы будут перенаправляться на URL выхода в `dex-authenticator`.
                      whitelistSourceRanges:
                        description: |
                          Список адресов в формате CIDR, которым разрешено проходить аутентификацию. Если параметр не указан, аутентификацию разрешено проходить без ограничения по IP-адресу.
                nodeSelector:
                  description: |-
                    Определяет nodeSelector для подов dex-authenticator.

                    **Формат**: стандартный список nodeSelector. Поды инстанса унаследуют это поле как есть.
                tolerations:
                  description: |-
                     Определяет tolerations для подов `dex-authenticator`.

                     **Формат**: стандартный список [toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/). Поды инстанса унаследуют это поле как есть.
                  items:
                    properties:
                      effect:
                        description: |-
                          Определяет, какому effect’у taint’а соответствует описываемый toleration. Пустой подразумевает соответствие любому effect.
                      key:
                        description: |
                          Определяет, какому ключу (key) taint’a соответствует описываемый toleration. Пустой подразумевает соответствие любому ключу.

                          Если ключ (key) не указан (пуст), `operator` должен быть `Exists`, что подразумевает соответствие любым `value` и `key`.
                      operator:
                        description: |
                          Определяет отношение ключа (key) к значению (value) — должен ли ключ быть равен (`Equal`) значению или допустимо существование ключа с любым значением.

                          Указание `Exists` равносильно допуску любого значения для value, чтобы под с указанным toleration удовлетворял соответствующему taint.
                      tolerationSeconds:
                        description: |
                          Определяет период времени в секундах, в течение которого планировщик должен ждать, прежде чем выгнать (evict) под с узла, если toleration перестал удовлетворять taint’у (справедливо **только** для effect `NoExecute`, иначе игнорируется).

                          Если **не установлено**, тогда под не будет выгнан с узла, если toleration перестал удовлетворять taint’у. Если **установлен в ноль** (или отрицателен), под будет выгнан с узла немедленно, если toleration перестал удовлетворять taint’у..

                          **По умолчанию** используется значение «не установлено».
                      value:
                        description: |
                          Значение, которому должен удовлетворять toleration.

                          Должно быть пустым, если operator имеет параметр `Exists`.
      additionalPrinterColumns: &additionalPrinterColumns
        - jsonPath: .spec.applications[*].domain
          name: Domain
          type: string
