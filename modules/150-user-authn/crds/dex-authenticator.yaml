apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dexauthenticators.deckhouse.io
  labels:
    heritage: deckhouse
    module: user-authn
    backup.deckhouse.io/cluster-config: "true"
spec:
  group: deckhouse.io
  scope: Namespaced
  names:
    plural: dexauthenticators
    singular: dexauthenticator
    kind: DexAuthenticator
    shortNames:
      - dex-auth
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: false
      deprecated: true
      schema: &schema
        openAPIV3Schema:
          type: object
          required:
            - spec
          description: |-
            After the `DexAuthenticator` object appears in the namespace, the following objects will be created:
            * Deployment containing OAuth2-Proxy and Redis containers;
            * Service, pointing to OAuth2-Proxy;
            * Ingress resource, configured to receive requests on `https://<applicationDomain>/dex-authenticator` and send it to a service side;
            * Secrets, needed to access Dex.

            **Warning.** After restarting a pod with an OAuth2-Proxy, the current Access Token and ID Token will be queried (using the refresh token) and stored in a Redis memory.
          x-doc-examples:
            - apiVersion: deckhouse.io/v1
              kind: DexAuthenticator
              metadata:
                name: app-name
                namespace: app-namespace
              spec:
                applicationDomain: "app-name.kube.my-domain.com"
                sendAuthorizationHeader: false
                applicationIngressCertificateSecretName: "ingress-tls"
                applicationIngressClassName: "nginx"
                keepUsersLoggedInFor: "720h"
                allowedGroups:
                  - everyone
                  - admins
                whitelistSourceRanges:
                  - 1.1.1.1/32
                  - 192.168.0.0/24
                additionalApplications:
                  - domain: "additional-app-name.kube.my-domain.com"
                    ingressSecretName: "ingress-tls"
                    ingressClassName: "nginx"
                    signOutURL: "/logout"
                    whitelistSourceRanges:
                      - 2.2.2.2/32
          properties:
            spec:
              type: object
              required:
                - applicationDomain
                - applicationIngressClassName
              properties:
                applicationDomain:
                  type: string
                  description: |-
                    An address for the application (DNS domain for Ingress resource) from which the user request will be redirected for authentication in Dex.

                    **Warning.** Must be specified without HTTP scheme.
                  x-doc-examples: ['my-app.domain.com']
                  pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                sendAuthorizationHeader:
                  type: boolean
                  description: 'Request to application will be sent with `Authorization: Bearer` header when the option is switched to true.'
                applicationIngressCertificateSecretName:
                  type: string
                  description: |-
                    The name of the Secret containing the TLS certificate for the application domain (is used in the Ingress resource). The Secret must be located in the same namespace as the DexAuthenticator.
                  x-doc-examples: ['ingress-tls']
                  pattern: '^(|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)$'
                applicationIngressClassName:
                  type: string
                  description: |
                    The name of the Ingress class to be used in the Ingress resource (it must match the Ingress class name for the application domain).
                  x-doc-examples: ['nginx']
                  pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                signOutURL:
                  type: string
                  description: |-
                    The URL of the application from which requests will be redirected to the sign-out URL of the `dex-authenticator`.

                    It is used in the application to direct logout requests. A separate Ingress resource will be created for the specified URL, and requests to it will be redirected to `dex-authenticator`.
                keepUsersLoggedInFor:
                  type: string
                  description: |-
                    User session will be kept for specified amount of time even if user will not log in.
                    Specified with  `s`, `m` or `h` suffix.
                  x-doc-examples: ['24h']
                  x-doc-default: '168h'
                allowedGroups:
                  type: array
                  description: |-
                    A list of groups whose members are allowed to connect to the client.

                    **By default**, all groups can connect.
                  x-doc-default: 'All groups are allowed.'
                  items:
                    type: string
                whitelistSourceRanges:
                  type: array
                  description: |
                    CIDRs that are allowed to authenticate. Authentication is allowed without IP address restrictions, If not specified.
                  x-doc-examples: ['192.168.42.0/24']
                  items:
                    type: string
                    pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                nodeSelector:
                  additionalProperties:
                    type: string
                  x-kubernetes-preserve-unknown-fields: true
                  description: |-
                    If specified, the `dex-authenticator` pods nodeSelector.

                    **Format**: the standard `nodeSelector` list. Instance pods inherit this field as is.
                  type: object
                tolerations:
                  description: |-
                    If specified the `dex-authenticator` pods tolerations.

                    **Format**: the standard [toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) list. Instance pods inherit this field as is.
                  items:
                    properties:
                      effect:
                        description: |
                          Defines the taint’s effect this toleration is associated with (it matches any effect if empty).
                        type: string
                        enum: ["NoSchedule", "PreferNoSchedule", "NoExecute"]
                      key:
                        description: |-
                          Defines the taint’s key this toleration is associated with (it matches any key if empty).

                          If the key is omitted (emplty), then `operator` must be set to `Exists` (which means it matches any `value` and `key`).
                        type: string
                      operator:
                        description: |-
                          Defines how the key and its value are linked — whether the key must be `Equal` to the value or can have any value.

                          Setting it to `Exists` is equivalent to the value having any value so that the pod with the specified toleration can match the corresponding taint.
                        type: string
                        enum: ["Exists", "Equal"]
                        x-doc-default: Equal
                      tolerationSeconds:
                        description: |-
                          Specifies the period (in seconds) that the scheduler waits before evicting a Pod from a node if the toleration no longer matches the taint (**only** applicable to the `NoExecute` effect, otherwise ignored).

                          If the parameter **is not set**, the Pod will not be evicted from the node if the toleration no longer matches the taint. If the parameter **is set to zero** (or negative), the Pod will be evicted immediately if the toleration no longer matches the taint.

                          **The default is**: not set.
                        format: int64
                        type: integer
                      value:
                        description: |-
                          The value that the toleration must match.

                          Must be empty if the operator parameter is set to `Exists`.
                        type: string
                    type: object
                  type: array
                additionalApplications:
                  type: array
                  description: |
                    A list of additional applications for which user authentication is required.
                  items:
                    type: object
                    required:
                      - domain
                      - ingressClassName
                    properties:
                      domain:
                        type: string
                        description: |-
                          An application domain from which the user request will be redirected for authentication in Dex.

                          **Warning.** Must be specified without HTTP scheme.
                        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                      ingressSecretName:
                        type: string
                        description: 'The name of the Secret containing the TLS certificate (from the domain) used in the applications Ingress resource. The Secret must be in the same namespace as DexAuthenticator.'
                        pattern: '^(|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)$'
                      ingressClassName:
                        type: string
                        description: |-
                          The name of the Ingress class to be used in the Ingress resource (it must match the Ingress class name for the application domain).
                        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                      signOutURL:
                        type: string
                        description: |-
                          The URL of the application from which requests will be redirected to the sign-out URL of the `dex-authenticator`.

                          It is used in the application to direct logout requests. A separate Ingress resource will be created for the specified URL, and requests to it will be redirected to `dex-authenticator`.
                      whitelistSourceRanges:
                        type: array
                        description: |
                          CIDRs that are allowed to authenticate. Authentication is allowed without IP address restrictions, If not specified.
                        items:
                          type: string
                          pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
      additionalPrinterColumns: &additionalPrinterColumns
        - jsonPath: .spec.applicationDomain
          name: Domain
          type: string
    - name: v2alpha1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          type: object
          required:
            - spec
          properties:
            spec:
              type: object
              required:
                - applications
              properties:
                applications:
                  type: array
                  description: |
                    A list of applications for which user authentication is required.
                  items:
                    type: object
                    required:
                      - domain
                      - ingressClassName
                    properties:
                      domain:
                        type: string
                        description: |-
                          An application domain (for Ingress resources) from which the user request will be redirected for authentication in Dex.

                          **Warning.** Must be specified without HTTP scheme.
                        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                      ingressSecretName:
                        type: string
                        description: |-
                          The name of the Secret containing the TLS certificate for the application domain (is used in the Ingress resource). The Secret must be located in the same namespace as the DexAuthenticator.
                        pattern: '^(|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)$'
                      ingressClassName:
                        type: string
                        description: |-
                          The name of the Ingress class to be used in the Ingress resource (it must match the Ingress class name for the application domain).
                        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                      signOutURL:
                        type: string
                        description: |-
                          The URL of the application from which requests will be redirected to the sign-out URL of the `dex-authenticator`.

                          It is used in the application to direct logout requests. A separate Ingress resource will be created for the specified URL, and requests to it will be redirected to `dex-authenticator`.
                      whitelistSourceRanges:
                        type: array
                        description: |
                          CIDRs that are allowed to authenticate. Authentication is allowed without IP address restrictions, if not specified.
                        items:
                          type: string
                          pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                sendAuthorizationHeader:
                  type: boolean
                  description: 'Request to application will be sent with `Authorization: Bearer` header when the option is switched to true.'
                keepUsersLoggedInFor:
                  type: string
                  description: |-
                    User session will be kept for specified amount of time even if user will not log in.

                    Specified with  `s`, `m` or `h` suffix.
                  x-doc-default: '168h'
                allowedGroups:
                  type: array
                  description: |-
                    A list of groups whose members are allowed to connect to the client.

                    **By default**, all groups can connect.
                  x-doc-default: 'All groups are allowed.'
                  items:
                    type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  x-kubernetes-preserve-unknown-fields: true
                  description: |-
                    If specified, the `dex-authenticator` pods nodeSelector.

                    **Format**: the standard `nodeSelector` list. Instance pods inherit this field as is.
                  type: object
                tolerations:
                  description: |-
                    If specified the `dex-authenticator` pods tolerations.

                    **Format**: the standard [toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) list. Instance pods inherit this field as is.
                  items:
                    properties:
                      effect:
                        description: |
                          Defines the taint’s effect this toleration is associated with (it matches any effect if empty).
                        type: string
                        enum: ["NoSchedule", "PreferNoSchedule", "NoExecute"]
                      key:
                        description: |-
                          Defines the taint’s key this toleration is associated with (it matches any key if empty).

                          If the key is omitted (emplty), then `operator` must be set to `Exists` (which means it matches any `value` and `key`).
                        type: string
                      operator:
                        description: |-
                          Defines how the key and its value are linked — whether the key must be `Equal` to the value or can have any value.

                          Setting it to `Exists` is equivalent to the value having any value so that the pod with the specified toleration can match the corresponding taint.
                        type: string
                        enum: ["Exists", "Equal"]
                        x-doc-default: Equal
                      tolerationSeconds:
                        description: |
                          Specifies the period (in seconds) that the scheduler waits before evicting a Pod from a node if the toleration no longer matches the taint (**only** applicable to the `NoExecute` effect, otherwise ignored).

                          If the parameter **is not set**, the Pod will not be evicted from the node if the toleration no longer matches the taint. If the parameter **is set to zero** (or negative), the Pod will be evicted immediately if the toleration no longer matches the taint.

                          **The default is**: not set.
                        format: int64
                        type: integer
                      value:
                        description: |-
                          The value that the toleration must match.

                          Must be empty if the operator parameter is set to `Exists`.
                        type: string
                    type: object
                  type: array
      additionalPrinterColumns:
        - jsonPath: .spec.applications[*].domain
          name: Domains
          type: string
    - name: v1
      served: true
      storage: true
      schema: *schema
      additionalPrinterColumns: *additionalPrinterColumns
