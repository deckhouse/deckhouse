{{- $context := . }}
{{- range $crd := $context.Values.userAuthn.internal.dexAuthenticatorCRDs }}
  {{- $id := printf "%s@%s" $crd.name $crd.namespace }}
  {{- $info := (index $context.Values.userAuthn.internal.dexAuthenticatorNames $id) }}
  {{- $secretName := (default (printf "dex-authenticator-%s" $crd.name) (index $info "secretName")) }}
  {{- $secretTruncated := (index $info "secretTruncated") }}
  {{- $secretHash := (index $info "secretHash") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ $crd.namespace }}
  {{- $labels := dict "app" "dex-authenticator" "name" "credentials" }}
  {{- if $secretTruncated }}
  {{- $_ := set $labels "deckhouse.io/dex-authenticator-for" $crd.name }}
  {{- $_ := set $labels "deckhouse.io/name-truncated" "true" }}
  {{- $_ := set $labels "deckhouse.io/name-hash" $secretHash }}
  {{- end }}
  {{- include "helm_lib_module_labels" (list $context $labels) | nindent 2 }}
data:
  {{- if $crd.allowAccessToKubernetes }}
  client-secret: {{ $context.Values.userAuthn.internal.kubernetesDexClientAppSecret | b64enc }}
  {{- else }}
  client-secret: {{ $crd.credentials.appDexSecret | b64enc }}
  {{- end }}
  cookie-secret: {{ $crd.credentials.cookieSecret | b64enc }}
  {{- $namespaces := (get $context "namespaces") | default (list) }}
  {{- if not (has $crd.namespace $namespaces) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-dex-authenticator
  namespace: {{ $crd.namespace }}
  {{- include "helm_lib_module_labels" (list $context (dict "app" "dex-authenticator")) | nindent 2 }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ $context.Values.global.modulesImages.registry.dockercfg }}
  {{- $_ := set $context "namespaces" (append $namespaces $crd.namespace) }}
  {{- end }}
{{- end }}
