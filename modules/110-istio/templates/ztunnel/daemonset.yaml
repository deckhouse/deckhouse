{{- define "istio_ztunnel_resources" }}
cpu: 200m
memory: 512Mi
{{- end }}

{{- if and ($.Values.istio.internal.enableAmbientMode) (eq (first $.Values.istio.internal.operatorVersionsToInstall) "1.25") }}
    {{- $versions := .Values.istio.internal.operatorVersionsToInstall }}
    {{- range $version := .Values.istio.internal.operatorVersionsToInstall }}
        {{- $versionInfo := get $.Values.istio.internal.versionMap $version }}
        {{ $imageSuffix := get $versionInfo "imageSuffix" }}
        {{- $revision := get $versionInfo "revision" }}
        {{- $fullVersion := get $versionInfo "fullVersion" }}

        {{- if ($.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: ztunnel-{{ $revision }}
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list $ (dict "app" "ztunnel")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: ztunnel-{{ $revision }}
  updatePolicy:
    updateMode: "Initial"
  resourcePolicy:
    containerPolicies:
      {{- include "helm_lib_vpa_kube_rbac_proxy_resources" . | nindent 6 }}
      - containerName: "istio-proxy"
        minAllowed:
          cpu: 200m
          memory: 512Mi
        maxAllowed:
          cpu: 400m
          memory: 1024Mi
        {{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ztunnel-{{ $revision }}
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list $ (dict 
      "app" "ztunnel"
      "app.kubernetes.io/name" "ztunnel"
      "app.kubernetes.io/instance" (print $revision "-ztunnel")
      "app.kubernetes.io/version" $fullVersion
      "app.kubernetes.io/part-of" "istio"
  )) | nindent 2 }}
spec:
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ztunnel
  template:
    metadata:
      {{- include "helm_lib_module_labels" (list $ (dict 
          "app" "ztunnel"
          "sidecar.istio.io/inject" "false"
          "istio.io/dataplane-mode" "none"
          "app.kubernetes.io/name" "ztunnel"
          "app.kubernetes.io/instance" (print $revision "-ztunnel")
          "app.kubernetes.io/version" $fullVersion
          "app.kubernetes.io/part-of" "istio"
      )) | nindent 6 }}
      annotations:
        sidecar.istio.io/inject: "false"
        istio.io/rev: {{ $revision }}
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: ztunnel
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      containers:
      - name: istio-proxy
        image: {{ include "helm_lib_module_image" (list $ (printf "ztunnel%s" $imageSuffix)) }}
        ports:
        - containerPort: 15020
          name: ztunnel-stats
          protocol: TCP
        resources:
            {{- include "istio_ztunnel_resources" . | nindent 14 }}
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
        imagePullPolicy: IfNotPresent
        securityContext:
          # K8S docs are clear that CAP_SYS_ADMIN *or* privileged: true
          # both force this to `true`: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          # But there is a K8S validation bug that doesn't propery catch this: https://github.com/kubernetes/kubernetes/issues/119568
          allowPrivilegeEscalation: true
          privileged: false
          capabilities:
            drop:
            - ALL
            add: # See https://man7.org/linux/man-pages/man7/capabilities.7.html
            - NET_ADMIN # Required for TPROXY and setsockopt
            - SYS_ADMIN # Required for `setns` - doing things in other netns
            - NET_RAW # Required for RAW/PACKET sockets, TPROXY
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: false
          runAsUser: 0
        readinessProbe:
          httpGet:
            port: 15021
            path: /healthz/ready
        args:
        - proxy
        - ztunnel
        env:
        - name: CA_ADDRESS
          value: istiod-{{ $revision }}.d8-istio.svc:15012
        - name: XDS_ADDRESS
          value: istiod-{{ $revision }}.d8-istio.svc:15012
        - name: RUST_LOG
          value: info
        - name: RUST_BACKTRACE
          value: "1"
        - name: ISTIO_META_CLUSTER_ID
          value: {{ $.Values.global.discovery.clusterDomain | replace "." "-" }}-{{ adler32sum $.Values.global.discovery.clusterUUID }}
        - name: INPOD_ENABLED
          value: "true"
        - name: TERMINATION_GRACE_PERIOD_SECONDS
          value: "30"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        - mountPath: /var/run/ztunnel
          name: cni-ztunnel-sock-dir
        - mountPath: /tmp
          name: tmp
      priorityClassName: system-node-critical
      terminationGracePeriodSeconds: 30
      volumes:
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              path: istio-token
              expirationSeconds: 43200
              audience: istio-ca
      - name: istiod-ca-cert
        configMap:
          name: istio-ca-root-cert
      - name: cni-ztunnel-sock-dir
        hostPath:
          path: /var/run/ztunnel
          type: DirectoryOrCreate # ideally this would be a socket, but istio-cni may not have started yet.
      # pprof needs a writable /tmp, and we don't have that thanks to `readOnlyRootFilesystem: true`, so mount one
      - name: tmp
        emptyDir: {}
    {{- end }}
{{- end }}
