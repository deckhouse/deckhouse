spec:
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Probe определяет мониторинг для набора статических целей или ingress.
        properties:
          apiVersion:
            description: 'APIVersion определяет версионную схему этого представления объекта. Серверы должны преобразовывать распознанные схемы в последнее внутреннее значение и могут отклонять нераспознанные значения. Более подробно: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            description: 'Kind — это строковое значение, представляющее ресурс REST, который представляет этот объект. Серверы могут определять это из конечной точки, к которой клиент отправляет запросы. Не может быть обновлено. Используется CamelCase. Более подробно: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          spec:
            description: Спецификация желаемого выбора ingress для обнаружения целей Prometheus.
            properties:
              authorization:
                description: Раздел авторизации для этой конечной точки
                properties:
                  credentials:
                    description: Выбирает ключ Секрета в пространстве имен, который содержит учетные данные для аутентификации.
                    properties:
                      key:
                        description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                      name:
                        description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля. apiVersion, kind, uid?'
                      optional:
                        description: Укажите, должен ли быть определён Secret или его ключ.
                  type:
                    description: "Определяет тип аутентификации. Значение нечувствительно к регистру. \n \"Basic\" не поддерживается. \n По умолчанию: \"Bearer\""
                    type: string
              basicAuth:
                description: 'BasicAuth позволяет конечной точке аутентифицироваться с использованием базовой аутентификации. Более подробно: https://prometheus.io/docs/operating/configuration/#endpoint'
                properties:
                  password:
                    description: Секрет в пространстве имен мониторинга сервиса, который содержит пароль для аутентификации.
                    properties:
                      key:
                        description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                      name:
                        description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                      optional:
                        description: Укажите, должен ли быть определён Secret или его ключ.
                  username:
                    description: Секрет в пространстве имен мониторинга сервиса, который содержит имя пользователя для аутентификации.
                    properties:
                      key:
                        description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                      name:
                        description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                      optional:
                        description: Укажите, должен ли быть определён Secret или его ключ.
              bearerTokenSecret:
                description: Секрет для монтирования, чтобы считать токен владельца для целей сканирования. Секрет должен находиться в том же пространстве имен, что и probe, и быть доступным для Prometheus Operator.
                properties:
                  key:
                    description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                  name:
                    description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля. apiVersion, kind, uid?'
                  optional:
                    description: Укажите, должен ли быть определён Secret или его ключ.
              interval:
                description: Интервал, на котором цели сканируются с использованием настроенного prob. Если не указано, используется глобальный интервал сбора Prometheus.
              jobName:
                description: Имя задания, присваиваемое собранным метрикам по умолчанию.
              keepDroppedTargets:
                description: "Предел на количество целей, отклоненных переименованием, которые будут оставаться в памяти. 0 означает отсутствие ограничения. \n Требуется Prometheus >= v2.47.0."
              labelLimit:
                description: Предел на количество меток, которые будут приниматься за одно сканирование. Действительно только в версиях Prometheus 2.27.0 и выше.
              labelNameLengthLimit:
                description: Предел на длину имени меток, которые будут приниматься за одно сканирование. Действительно только в версиях Prometheus 2.27.0 и выше.
              labelValueLengthLimit:
                description: Предел на длину значений меток, которые будут приниматься за одно сканирование. Действительно только в версиях Prometheus 2.27.0 и выше.
              metricRelabelings:
                description: MetricRelabelConfigs для применения к выборкам до ввода данных.
                items:
                  description: "RelabelConfig позволяет динамически переписывать набор меток для целей, оповещений, собранных выборок и выборок удаленной записи. \n Более подробно: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config"
                  properties:
                    action:
                      default: replace
                      description: "Действие на основе сопоставления с регулярным выражением. \n Действия `Uppercase` и `Lowercase` требуют Prometheus версии не ниже v2.36.0. Действия `DropEqual` и `KeepEqual` требуют Prometheus версии не ниже v2.41.0. \n По умолчанию: \"Replace\""
                    modulus:
                      description: "Модуль для вычисления хеша значений исходных меток. \n Применимо только в случае, когда действие — `HashMod`."
                    regex:
                      description: Регулярное выражение, с которым сопоставляется извлеченное значение.
                    replacement:
                      description: "Значение замены для действия Replace, если регулярное выражение совпадает. \n Доступны группы захвата из регулярного выражения."
                    separator:
                      description: Разделитель — это строка между объединенными исходными метками (SourceLabels).
                    sourceLabels:
                      description: Исходные метки выбирают значения из существующих меток. Их содержимое объединяется с использованием настроенного разделителя и сопоставляется с настроенным регулярным выражением.
                      items:
                        description: LabelName — это допустимое имя метки Prometheus, которое может содержать только буквы ASCII, цифры, а также символы подчеркивания.
                    targetLabel:
                      description: "Метка, в которую записывается результирующая строка при замене. \n Она обязательна для действий `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` и `DropEqual`. \n Доступны группы захвата из регулярного выражения."
              module:
                description: 'Модуль для использования во время пробинга, указывающий, как осуществлять пробинг цели. Пример настройки модуля в экспортере Blackbox: https://github.com/prometheus/blackbox_exporter/blob/master/example.yml'
              oauth2:
                description: OAuth2 для URL. Действительно только в версиях Prometheus 2.27.0 и выше.
                properties:
                  clientId:
                    description: Секрет или ConfigMap, содержащие клиентский идентификатор OAuth2.
                    properties:
                      configMap:
                        description: ConfigMap, содержащий данные для использования в целях.
                        properties:
                          key:
                            description: Ключ для выбора.
                          name:
                            description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                          optional:
                            description: Укажите, должен ли быть определён ConfigMap или его ключ.
                      secret:
                        description: Секрет, содержащий данные для использования в целях.
                        properties:
                          key:
                            description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                          name:
                            description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                          optional:
                            description: Укажите, должен ли быть определён Secret или его ключ.
                  clientSecret:
                    description: Секрет, содержащий клиентский секрет OAuth2.
                    properties:
                      key:
                        description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                      name:
                        description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                      optional:
                        description: Укажите, должен ли быть определён Secret или его ключ.
                  endpointParams:
                    additionalProperties:
                    description: Параметры для добавления к URL токена
                  scopes:
                    description: Области OAuth2, используемые для запроса токена
                  tokenUrl:
                    description: URL для получения токена
              prober:
                description: Спецификация для prob для использования пробиры целей. Параметр prober.URL обязателен. Цели не могут быть пробированы, если не указаны.
                properties:
                  path:
                    description: Путь для сбора метрик. По умолчанию `/probe`.
                  proxyUrl:
                    description: Необязательный ProxyURL.
                  scheme:
                    description: HTTP-схема для использования при сборе данных. Ожидаемые значения — `http` и `https`, если вы не переписываете метку `__scheme__` посредством переименования. Если не указано, Prometheus использует значение по умолчанию — `http`.
                  url:
                    description: Обязательный URL для prob.
              sampleLimit:
                description: Предел на количество выборок, которое будет принято за одно сканирование.
              scrapeTimeout:
                description: Таймаут для сбора метрик с экспортера Prometheus. Если не указано, используется глобальный таймаут сбора Prometheus.
              targetLimit:
                description: Предел количества целей, которые будут приняты для сбора.
              targets:
                description: Targets определяет набор статических или динамически обнаруживаемых целей для пробинга.
                properties:
                  ingress:
                    description: ingress определяет объекты Ingress для пробинга и конфигурацию переименования. Если также определен `staticConfig`, он имеет приоритет.
                    properties:
                      namespaceSelector:
                        description: Из каких пространств имен выбирать объекты Ingress.
                        properties:
                          any:
                            description: Логическое значение, описывающее, выбраны ли все пространства имен в отличие от списка, ограничивающего их.
                          matchNames:
                            description: Список имен пространств имен для выбора.
                      relabelingConfigs:
                        description: 'RelabelConfigs для применения к набору меток цели до их сбора. Изначальный адрес ingress доступен через метку `__tmp_prometheus_ingress_address`. Он может быть использован для настройки пробируемого URL. Имя изначальной задачи сбора доступно через метку `__tmp_prometheus_job_name`. Более подробно: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          description: "RelabelConfig позволяет динамически переписывать набор меток для целей, оповещений, собранных выборок и выборок удаленной записи. \n Более подробно: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config"
                          properties:
                            action:
                              description: "Действие на основе сопоставления с регулярным выражением. \n Действия `Uppercase` и `Lowercase` требуют Prometheus версии не ниже v2.36.0. Действия `DropEqual` и `KeepEqual` требуют Prometheus версии не ниже v2.41.0. \n По умолчанию: \"Replace\""
                            modulus:
                              description: "Модуль для вычисления хеша значений исходных меток. \n Применимо только в случае, когда действие — `HashMod`."
                            regex:
                              description: Регулярное выражение, с которым сопоставляется извлеченное значение.
                            replacement:
                              description: "Значение замены для действия Replace, если регулярное выражение совпадает. \n Доступны группы захвата из регулярного выражения."
                            separator:
                              description: Разделитель — это строка между объединенными исходными метками (SourceLabels).
                            sourceLabels:
                              description: Исходные метки выбирают значения из существующих меток. Их содержимое объединяется с использованием настроенного разделителя и сопоставляется с настроенным регулярным выражением.
                              items:
                                description: LabelName — это допустимое имя метки Prometheus, которое может содержать только буквы ASCII, цифры, а также символы подчеркивания.
                            targetLabel:
                              description: "Метка, в которую записывается результирующая строка при замене. \n Она обязательна для действий `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` и `DropEqual`. \n Доступны группы захвата из регулярного выражения."
                      selector:
                        description: Селектор для выбора объектов Ingress.
                        properties:
                          matchExpressions:
                            description: matchExpressions — это список требований для селектора меток. Эти требования объединяются с помощью логического оператора И (AND).
                            items:
                              description: Требование селектора меток — это селектор, который содержит значения, ключ и оператор, связывающий ключ и значения.
                              properties:
                                key:
                                  description: key — это ключ метки, к которому применяется селектор.
                                operator:
                                  description: "operator представляет взаимоотношение ключа с набором значений. Допустимые операторы: In, NotIn, Exists и DoesNotExist."
                                values:
                                  description: values — это массив строковых значений. Если оператор In или NotIn, массив values должен быть непустым. Если оператор Exists или DoesNotExist, массив values должен быть пустым. Этот массив заменяется во время стратегического объединения патчей.
                          matchLabels:
                            additionalProperties:
                            description: matchLabels — это отображение пар {ключ, значение}. Одиночная пара {ключ, значение} в matchLabels эквивалентна элементу matchExpressions, у которого поле ключа — "key", оператор — "In", а массив значений содержит только "value". Эти требования объединяются с помощью логического оператора И (AND).
                  staticConfig:
                    description: 'staticConfig определяет статический список целей для пробинга и конфигурации переименования. Если также определен `ingress`, `staticConfig` имеет приоритет. Более подробно: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.'
                    properties:
                      labels:
                        additionalProperties:
                        description: Метки, присваиваемые всем метрикам, полученным с целей.
                      relabelingConfigs:
                        description: 'RelabelConfigs для применения к набору меток целей до их сбора. Более подробно: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          description: "RelabelConfig позволяет динамически переписывать набор меток для целей, оповещений, собранных выборок и выборок удаленной записи. \n Более подробно: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config"
                          properties:
                            action:
                              description: "Действие на основе сопоставления с регулярным выражением. \n Действия `Uppercase` и `Lowercase` требуют Prometheus версии не ниже v2.36.0. Действия `DropEqual` и `KeepEqual` требуют Prometheus версии не ниже v2.41.0. \n По умолчанию: \"Replace\""
                            modulus:
                              description: "Модуль для вычисления хеша значений исходных меток. \n Применимо только в случае, когда действие — `HashMod`."
                            regex:
                              description: Регулярное выражение, с которым сопоставляется извлеченное значение.
                            replacement:
                              description: "Значение замены для действия Replace, если регулярное выражение совпадает. \n Доступны группы захвата из регулярного выражения."
                            separator:
                              description: Разделитель — это строка между объединенными исходными метками (SourceLabels).
                            sourceLabels:
                              description: Исходные метки выбирают значения из существующих меток. Их содержимое объединяется с использованием настроенного разделителя и сопоставляется с настроенным регулярным выражением.
                              items:
                                description: LabelName — это допустимое имя метки Prometheus, которое может содержать только буквы ASCII, цифры, а также символы подчеркивания.
                            targetLabel:
                              description: "Метка, в которую записывается результирующая строка при замене. \n Она обязательна для действий `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` и `DropEqual`. \n Доступны группы захвата из регулярного выражения."
                      static:
                        description: Список хостов для пробинга.
              tlsConfig:
                description: Конфигурация TLS для использования при сборе данных с конечной точки.
                properties:
                  ca:
                    description: Удостоверяющий центр, используемый при проверке сертификатов сервера.
                    properties:
                      configMap:
                        description: ConfigMap, содержащий данные для использования в целях.
                        properties:
                          key:
                            description: Ключ для выбора.
                          name:
                            description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                          optional:
                            description: Укажите, должен ли быть определён ConfigMap или его ключ.
                      secret:
                        description: Секрет, содержащий данные для использования в целях.
                        properties:
                          key:
                            description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                          name:
                            description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                          optional:
                            description: Укажите, должен ли быть определён Secret или его ключ.
                  cert:
                    description: Клиентский сертификат, который предъявляется для аутентификации клиента.
                    properties:
                      configMap:
                        description: ConfigMap, содержащий данные для использования в целях.
                        properties:
                          key:
                            description: Ключ для выбора.
                          name:
                            description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                          optional:
                            description: Укажите, должен ли быть определён ConfigMap или его ключ.
                      secret:
                        description: Секрет, содержащий данные для использования в целях.
                        properties:
                          key:
                            description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                          name:
                            description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                          optional:
                            description: Укажите, должен ли быть определён Secret или его ключ.
                  insecureSkipVerify:
                    description: Отключить проверку сертификата цели.
                  keySecret:
                    description: Секрет, содержащий клиентский ключевой файл для целей.
                    properties:
                      key:
                        description: Ключ секрета для выбора. Должен быть допустимым секретным ключом.
                      name:
                        description: 'Имя объекта, на который ссылаются. Дополнительная информация: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Добавить другие полезные поля, такие как apiVersion, kind, uid?'
                      optional:
                        description: Укажите, должен ли быть определён Secret или его ключ.
                  serverName:
                    description: Используется для проверки имени хоста для целей.
