diff --git a/pkg/prometheus/statefulset.go b/pkg/prometheus/statefulset.go
--- a/pkg/prometheus/statefulset.go	(revision 21147bd93fa83f01b3fbf1542015d3508962561a)
+++ b/pkg/prometheus/statefulset.go	(date 1690987159767)
@@ -434,14 +434,13 @@
 	var ports []v1.ContainerPort
 	if p.Spec.ListenLocal {
 		promArgs = append(promArgs, monitoringv1.Argument{Name: "web.listen-address", Value: "127.0.0.1:9090"})
-	} else {
-		ports = []v1.ContainerPort{
-			{
-				Name:          p.Spec.PortName,
-				ContainerPort: 9090,
-				Protocol:      v1.ProtocolTCP,
-			},
-		}
+	}
+	ports = []v1.ContainerPort{
+		{
+			Name:          p.Spec.PortName,
+			ContainerPort: 9090,
+			Protocol:      v1.ProtocolTCP,
+		},
 	}

 	assetsVolume := v1.Volume{
@@ -610,29 +609,11 @@
 	probeHandler := func(probePath string) v1.ProbeHandler {
 		probePath = path.Clean(webRoutePrefix + probePath)
 		handler := v1.ProbeHandler{}
-		if p.Spec.ListenLocal {
-			probeURL := url.URL{
-				Scheme: "http",
-				Host:   "localhost:9090",
-				Path:   probePath,
-			}
-			handler.Exec = &v1.ExecAction{
-				Command: []string{
-					"sh",
-					"-c",
-					fmt.Sprintf(
-						`if [ -x "$(command -v curl)" ]; then exec %s; elif [ -x "$(command -v wget)" ]; then exec %s; else exit 1; fi`,
-						operator.CurlProber(probeURL.String()),
-						operator.WgetProber(probeURL.String()),
-					),
-				},
-			}
-			return handler
-		}

 		handler.HTTPGet = &v1.HTTPGetAction{
-			Path: probePath,
-			Port: intstr.FromString(p.Spec.PortName),
+			Path:   probePath,
+			Port:   intstr.FromString(p.Spec.PortName),
+			Scheme: v1.URISchemeHTTPS,
 		}
 		if p.Spec.Web != nil && p.Spec.Web.TLSConfig != nil && webConfigGenerator.IsCompatible() {
 			handler.HTTPGet.Scheme = v1.URISchemeHTTPS
