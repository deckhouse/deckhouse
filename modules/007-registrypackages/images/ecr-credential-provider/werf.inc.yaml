{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := $key | toString }}
  {{- $image_version := $version | replace "." "-" }}
  {{- $patches := (printf "/%smodules/%s-%s/images/%s" $.ModulePath $.ModulePriority $.ModuleName $.ImageName) }}
  {{- $patch := false }}
  {{- range $path, $_ := $.Files.Glob (printf "%s/*" $patches) }}
    {{- if contains $version $path }}
      {{- $patch = true }}
    {{- end }}
  {{- end }}
  {{- if $value.ccm.aws }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/scripts
  to: /src/scripts
  stageDependencies:
    install:
    - '**/*'
  {{- if $patch }}
- add: {{ $patches }}/patches/{{ $version }}
  to: /patches
  stageDependencies:
    install:
    - '**/*'
  {{- end }}
shell:
  install:
  - cd /src
  - git clone --depth=1 --branch {{ $value.ccm.aws }} {{ $.SOURCE_REPO }}/kubernetes/cloud-provider-aws.git
  - cd cloud-provider-aws
  {{- if $patch }}
  - git apply /patches/*.patch --verbose
  {{- end }}
  - rm -rf .git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
from: {{ $.Images.BASE_SCRATCH }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /
  to: /
  includePaths:
  - ecr-credential-provider
  - install
  - uninstall
  before: setup
imageSpec:
  config:
    labels: { "distro": "all", "version": "all", "ecr-credential-provider": "{{ $version }}" }
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
final: false
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
  add: /src
  to: /src
  before: install
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  beforeInstall:
  {{- include "alpine packages proxy" $ | nindent 2 }}
  - apk add --no-cache make bash
  install:
    - export GOPROXY={{ $.GOPROXY }}
    - export CGO_ENABLED=0
    - export GOOS=linux
    - export GOARCH=amd64
    - cd /src/cloud-provider-aws
    - export VERSION={{ $value.ccm.aws }}
    - make ecr-credential-provider
    - mv /src/scripts/* /
    - chown 64535:64535 ecr-credential-provider /install /uninstall
    - chmod 0755 ecr-credential-provider /install /uninstall
    - mv ecr-credential-provider /ecr-credential-provider
  {{- end }}
{{- end }}
