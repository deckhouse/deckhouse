{{- $version := "v0.0.1-flant.3" }}
{{- $image_version := $version | replace "." "-" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}/modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/scripts
  to: /src/scripts
  stageDependencies:
    install:
    - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}
shell:
  install:
  - git clone -b {{ $version }} --depth 1 $(cat /run/secrets/SOURCE_REPO)/flant/go-ec2-describe-tags.git /src/go-ec2-describe-tags
  - rm -rf /src/go-ec2-describe-tags/.git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
from: {{ $.Images.BASE_SCRATCH }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /
  to: /
  includePaths:
  - ec2_describe_tags
  - install
  - uninstall
  before: setup
imageSpec:
  config:
    labels: { "distro": "all", "version": "all", "ec2-describe-tags": "{{ $version }}" }
    clearUser: true
    clearWorkingDir: true
    clearCmd: true
    clearEntrypoint: true
    removeEnv: ["/.*/"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
final: false
fromImage: builder/golang-alpine
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact-{{ $image_version }}
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  setup:
    - cd /src/go-ec2-describe-tags
    - GOPROXY=$(cat /run/secrets/GOPROXY) GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /ec2_describe_tags
    - mv /src/scripts/* /
