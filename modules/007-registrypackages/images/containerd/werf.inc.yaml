{{- $containerd_versions := list "1.7.27" "2.1.3" }}
{{- $runc_version := "1.2.6" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-runc-src-artifact-{{ $runc_version }}
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches/runc
  to: /patches
  stageDependencies:
    install:
    - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
shell:
  install:
  - git clone --depth=1 --branch v{{ $runc_version }} $(cat /run/secrets/SOURCE_REPO)/opencontainers/runc /src
  - cd /src
  - git apply /patches/*.patch --verbose
  - git describe --dirty --long --always > COMMIT
  - rm -rf /src/.git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-runc-artifact-{{ $runc_version }}
fromImage: builder/golang-bullseye
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-runc-src-artifact-{{ $runc_version }}
  add: /src
  to: /src
  before: install
mount:
  {{ include "mount points for golang builds" $ }}
secrets:
- id: GOPROXY
  value: {{ $.GOPROXY }}
shell:
  beforeInstall:
  {{- include "debian packages proxy" $ | nindent 2 }}
  - apt-get update && apt-get install libseccomp-dev -y
  - mkdir -p /out
  install:
  - cd /src
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod vendor
  - git config --global user.email "builder@deckhouse.io"
  - make COMMIT="$(cat COMMIT)" static
  - mv runc /out/runc
  - chown -R 64535:64535 /out
  - chmod 755 /out/runc
{{- range $containerd_version := $containerd_versions }}
  {{- $image_version := $containerd_version | replace "." "-" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
fromImage: builder/scratch
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /out
  to: /
  includePaths:
  - containerd
  - containerd-shim-runc-v1
  - containerd-shim-runc-v2
  - ctr
  - install
  - uninstall
  - containerd.service
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-runc-artifact-{{ $runc_version }}
  add: /out/runc
  to: /runc
  before: setup
imageSpec:
  config:
    labels: { "distro": "all", "version": "all", "containerd": "{{ $containerd_version }}", "runc": "{{ $runc_version }}" }
    clearUser: true
    clearWorkingDir: true
    clearCmd: true
    clearEntrypoint: true
    removeEnv: ["/.*/"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/scripts
  to: /src/scripts
  stageDependencies:
    install:
    - '**/*'
- add: /{{ $.ModulePath }}modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches/containerd/{{ $containerd_version }}
  to: /patches
  stageDependencies:
    install:
    - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
shell:
  install:
  - git clone --depth=1 --branch v{{ $containerd_version }} $(cat /run/secrets/SOURCE_REPO)/containerd/containerd.git /src
  - cd /src
  - git describe --match 'v[0-9]*' --dirty='.m' --always > VERSION
  - git rev-parse HEAD > REVISION
  - git apply /patches/*.patch --verbose
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
fromImage: builder/golang-bullseye
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" $ }}
secrets:
- id: GOPROXY
  value: {{ $.GOPROXY }}
shell:
  beforeInstall:
  {{- include "debian packages proxy" $ | nindent 2 }}
  - apt-get update && apt-get install libseccomp-dev -y
  - mkdir -p /out
  install:
  - cd /src
  - git config --global user.email "builder@deckhouse.io"
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod vendor
  - make STATIC=1 VERSION="$(cat VERSION)" REVISION="$(cat REVISION)" all
  - mv bin/* /out
  - mv /src/scripts/* /out
  - chown -R 64535:64535 /out
  - chmod 755 /out/runc
{{- end }}
