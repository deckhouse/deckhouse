{{- $cni_version := "1.4.0" }}
{{- $flannel_version := "1.1.2" }}
{{- $image_version := $cni_version | replace "." "-" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
from: {{ $.Images.BASE_SCRATCH }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /
  to: /
  includePaths:
  - bandwidth
  - bridge
  - dhcp
  - dummy
  - firewall
  - host-device
  - host-local
  - ipvlan
  - loopback
  - macvlan
  - portmap
  - ptp
  - sbr
  - static
  - tap
  - tuning
  - vlan
  - vrf
  - flannel
  - install
  - uninstall
  before: setup
docker:
  LABEL:
    distro: all
    version: all
    kubernetes-cni: {{ $cni_version }}
    flannel: {{ $flannel_version }}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
fromArtifact: src-artifact
git:
- add: /{{ $.ModulePath }}/modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
      - '**/*'
- add: /{{ $.ModulePath }}/modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/scripts
  to: /src/scripts
  stageDependencies:
    install:
      - '**/*'
shell:
  install:
  - git clone --depth 1 --branch v{{ $cni_version }} {{ $.SOURCE_REPO }}/containernetworking/plugins.git /src/plugins
  - cd /src/plugins
  - git apply /patches/plugins/*.patch --verbose 
  - git clone --depth 1 --branch v{{ $flannel_version }} {{ $.SOURCE_REPO }}/flannel-io/cni-plugin.git /src/cni-plugin
  - cd /src/cni-plugin
  - git apply /patches/cni-plugins/*.patch --verbose 
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache make bash
  install:
    - export GOPROXY={{ $.GOPROXY }}
    - cd /src/plugins
    - go mod tidy
    - go mod vendor
    - CGO_ENABLED=0 ./build_linux.sh -ldflags '-extldflags -static -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion={{ $cni_version }}'
    - cp -f bin/* /
    - cd /src/cni-plugin
    - make build_linux
    - mv /src/scripts/* /
    - cp -f /go/src/github.com/flannel-io/cni-plugin/dist/flannel-amd64 /flannel
