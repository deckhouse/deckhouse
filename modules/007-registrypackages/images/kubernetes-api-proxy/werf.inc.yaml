{{- $version := "08.04.25" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: builder/scratch
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /
  to: /
  includePaths:
  - kubernetes-api-proxy.tar
  - install
  - uninstall
  before: setup
imageSpec:
  config:
    labels: {"distro": "all", "version": "all", "kubernetes-api-proxy": "{{ $version }}" }
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
fromImage: builder/golang-alpine
final: false
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/scripts
  to: /
  stageDependencies:
    setup:
    - '**/*'
import:
- image: common/crane
  add: /crane
  to: /crane
  before: setup
dependencies:
- image: control-plane-manager/kubernetes-api-proxy
  before: setup
  imports:
  - type: ImageDigest
    targetEnv: IMAGE_DIGEST
  - type: ImageRepo
    targetEnv: IMAGE_REPO
secrets:
- id: REGISTRY_USER
  value: {{ $context.RegistryUser }}
- id: REGISTRY_PASSWORD
  value: {{ $context.RegistryPassword }}
shell:
  setup:
  - case "$IMAGE_REPO" in *.local/*) export param="--insecure" ;; esac
  - /crane auth login --password "$(cat /run/secrets/REGISTRY_PASSWORD)" --username "$(cat /run/secrets/REGISTRY_USER)" "${IMAGE_REPO%%/*}"
  - /crane pull $IMAGE_REPO@$IMAGE_DIGEST $param /kubernetes-api-proxy.tar
  - rm -f ~/.docker/config.json
  - mkdir /tmp/kubernetes-api-proxy
  - tar -xf /kubernetes-api-proxy.tar -C /tmp/kubernetes-api-proxy
  - cd /tmp/kubernetes-api-proxy
  - sed -i 's/"RepoTags":\["[^"]*"\]/"RepoTags":[]/' manifest.json
  - rm /kubernetes-api-proxy.tar
  - tar -cvf /kubernetes-api-proxy.tar ./
  - rm -rf /tmp/kubernetes-api-proxy
