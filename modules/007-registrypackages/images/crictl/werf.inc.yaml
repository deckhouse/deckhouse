{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $image_version := $version | replace "." "-" }}
  {{- $patch := toString $value.patch }}
  {{- $v := semver $version }}
  {{- $full_version := printf "%s.%s" $version $patch }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
from: {{ $.Images.BASE_SCRATCH }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /
  to: /
  includePaths:
  - crictl
  - install
  - uninstall
  before: setup
docker:
  LABEL:
    distro: all
    version: all
    crictl: {{ $version }}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
{{- if semverCompare ">=1.30" $version }}
from: {{ $.Images.BASE_GOLANG_22_ALPINE_DEV }}
{{- else }}
from: {{ $.Images.BASE_GOLANG_20_ALPINE_DEV }}
{{- end }}
git:
  - add: /{{ $.ModulePath }}modules/007-{{ $.ModuleName }}/images/{{ $.ImageName }}/scripts
    to: /
    stageDependencies:
      setup:
      - '**/*'
shell:
  setup:
  - export GOPROXY={{ $.GOPROXY }}
  - latestTag=$(git ls-remote --tags  {{ $.SOURCE_REPO }}/kubernetes-sigs/cri-tools.git | grep refs/tags/v{{ $version }} | grep -o '[^\/]*$' | tail -n1)
  - git clone --depth 1 --branch $latestTag {{ $.SOURCE_REPO }}/kubernetes-sigs/cri-tools.git
  - cd /cri-tools
  - make install crictl
  - mv /usr/local/bin/crictl /crictl
  - chmod +x /crictl /install /uninstall
{{- end }}
