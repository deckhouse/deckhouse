{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: operator
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "operator" "workload-resource-policy.deckhouse.io" "master")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: operator
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- include "helm_lib_module_labels" (list . (dict "app" "operator")) | nindent 2 }}
  name: operator
  namespace: d8-{{ .Chart.Name }}
spec:
{{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | nindent 2 }}
  selector:
    matchLabels:
      app: operator
  template:
    metadata:
      annotations:
        configmap-checksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | quote }}
      labels:
        app: operator
    spec:
{{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "any-uninitialized-node") | indent 6 }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "operator")) | nindent 6 }}
{{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-operator
        env:
        - name: GOPS_CONFIG_DIR
          value: /tmp/gops-hack
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.cniCilium.operator }}
        name: operator
        ports:
        - containerPort: 9092
          hostPort: 9092
          name: prometheus
          protocol: TCP
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
      - name: kube-rbac-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.common.kubeRbacProxy }}
        args:
        - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):9735"
        - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        - "--v=2"
        - "--logtostderr=true"
        - "--stale-cache-interval=1h30m"
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            upstreams:
            - upstream: http://127.0.0.1:9092/metrics
              path: /metrics
              authorization:
                resourceAttributes:
                  namespace: d8-cni-cilium
                  apiGroup: apps
                  apiVersion: v1
                  resource: deployments
                  subresource: prometheus-metrics
                  name: operator
        ports:
        - containerPort: 9735
          name: https-metrics
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      restartPolicy: Always
      serviceAccount: operator
      serviceAccountName: operator
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
