---
image: {{ $.ModuleName }}/{{ $.ImageName }}
from: {{ .Images.BASE_ALPINE }}
git:
  - add: /
    to: /deckhouse
    includePaths:
      - modules/*/openapi
      - global-hooks/openapi
      # Include schemas from candi.
      - candi/openapi/*
      - candi/cloud-providers/*/openapi
      # Include EE and FE modules.
{{ if eq .Env "EE" }}
      - ee/modules/*/openapi
{{ end }}
{{ if eq .Env "FE" }}
      - ee/modules/*/openapi
      - ee/fe/modules/*/openapi
{{ end }}
    stageDependencies:
      install:
        - modules/*/openapi
        - global-hooks/openapi
        # Include schemas from candi.
        - candi/openapi/*
        - candi/cloud-providers/*/openapi
        # Include EE and FE modules.
{{ if eq .Env "EE" }}
        - ee/modules/*/openapi
{{ end }}
{{ if eq .Env "FE" }}
        - ee/modules/*/openapi
        - ee/fe/modules/*/openapi
{{ end }}
import:
  - artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
    add: /deckhouse-config-webhook
    to: /deckhouse-config-webhook
    before: setup
shell:
  install:
    # Move ee/fe modules to MODULES_DIR.
    - mv /deckhouse/ee/modules/* /deckhouse/modules || true
    - mv /deckhouse/ee/fe/modules/* /deckhouse/modules || true
docker:
  ENTRYPOINT: ["/deckhouse-config-webhook"]
---
{{ $webhookAbsPath := "/deckhouse/modules/003-deckhouse-config/images/deckhouse-config-webhook" }}
{{ $webhookRelPath := "modules/003-deckhouse-config/images/deckhouse-config-webhook" }}
artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_16_ALPINE }}
shell:
  install:
    - cd {{ $webhookAbsPath }}
    - go mod download
  setup:
    - cd {{ $webhookAbsPath }}
    # Re-generate conversion imports for particular edition (CE/EE/FE).
    # TODO(future) Create special register file in tools to generate only conversion imports for the webhook, and use go generate here.
    - cp register-settings-conversions.go register-settings-conversions.go~
    - go run ../../../../tools/settings_conversions/main.go -output register-settings-conversions.go
    - echo "Excluded conversions:" && (diff -u register-settings-conversions.go~ register-settings-conversions.go | grep '^-' || true)
    # Build webhook binary.
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /deckhouse-config-webhook

git:
- add: /{{ $webhookRelPath }}
  to:  {{ $webhookAbsPath }}
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
    - hack
  stageDependencies:
    install:
      - go.mod
      - go.sum
    setup:
      - "**/*.go"
- add: /
  to: /deckhouse
  includePaths:
    - dhctl/go.mod
    - dhctl/go.sum
    - go_lib
    - tools
    - go.mod
    - go.sum
    - modules/*/settings-conversion/**/*.go
{{ if eq .Env "EE" }}
    - ee/modules/*/settings-conversion/**/*.go
{{ end }}
{{ if eq .Env "FE" }}
    - ee/modules/*/settings-conversion/**/*.go
    - ee/fe/modules/*/settings-conversion/**/*.go
{{ end }}
  excludePaths:
    - {{ $webhookRelPath }}
  stageDependencies:
    install:
      - dhctl/go.mod
      - dhctl/go.sum
      - go.mod
      - go.sum
    setup:
      - go_lib/**/*.go
      - tools/**/*.go
      - modules/*/settings-conversion/**/*.go
{{ if eq .Env "EE" }}
      - ee/modules/*/settings-conversion/**/*.go
{{ end }}
{{ if eq .Env "FE" }}
      - ee/modules/*/settings-conversion/**/*.go
      - ee/fe/modules/*/settings-conversion/**/*.go
{{ end }}
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
