{{- $REPO := "deckhouse/3p-docker_auth.git"}}
{{- $BRANCH := "v1.13.0-deckhouse.0"}}
{{- $GIT_CLONE_DEST_PATH := "/go/src/github.com/cesanta/docker_auth"}}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
  - add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/scripts
    to: /scripts
    stageDependencies:
      install:
        - '**/*'
secrets:
  - id: SOURCE_REPO
    value: {{ .SOURCE_REPO }}
shell:
  install:
    - mkdir -m 1777 /tmp-tmp
    - git config --global advice.detachedHead false
    - git clone --depth 1 --single-branch --branch {{ $BRANCH }} $(cat /run/secrets/SOURCE_REPO)/{{ $REPO }} {{ $GIT_CLONE_DEST_PATH }}
    - cd {{ $GIT_CLONE_DEST_PATH }}
    - rm -rf .git
---
image: "{{ $.ModuleName }}/{{ $.ImageName }}-artifact"
fromImage: builder/golang-alpine
final: false
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
    add: {{ $GIT_CLONE_DEST_PATH }}
    before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
  - id: GOPROXY
    value: {{ .GOPROXY }}
shell:
  beforeInstall:
    - apk add --no-cache make
  install:
    - cd {{ $GIT_CLONE_DEST_PATH }}/auth_server
    - export GOPROXY=$(cat /run/secrets/GOPROXY)
    - export GOOS=linux
    - export GOARCH=amd64
    - export CGO_ENABLED=0
    - make build
    - mv ./auth_server /auth_server
---
image: "{{ $.ModuleName }}/{{ $.ImageName }}"
fromImage: common/distroless
import:
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-src-artifact"
    add: /tmp-tmp
    to: /tmp
    before: setup
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-src-artifact"
    add: /scripts
    to: /
    before: setup
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-artifact"
    add: /auth_server
    to: /auth_server
    before: setup
  - image: common/pause
    add: /pause
    to: /pause
    before: setup
imageSpec:
  config:
    entrypoint: ["/auth_server"]
