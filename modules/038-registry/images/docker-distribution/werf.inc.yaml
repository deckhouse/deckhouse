{{- $version := "v2.8.3-deckhouse.0"}}
---
image: "{{ $.ModuleName }}/{{ $.ImageName }}-src-artifact"
fromImage: common/src-artifact
final: false
git:
  - add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/scripts
    to: /src/scripts
    stageDependencies:
      install:
        - '**/*'
secrets:
  - id: SOURCE_REPO
    value: "{{ $.SOURCE_REPO }}"
shell:
  install:
    - mkdir -m 1777 /src/tmp
    - chmod +x /src/scripts/*
    - git config --global advice.detachedHead false
    - git clone --depth 1 --single-branch --branch {{ $version }} $(cat /run/secrets/SOURCE_REPO)/deckhouse/3p-distribution.git /src/distribution
    - rm -rf /src/distribution/.git
---
image: "{{ $.ModuleName }}/{{ $.ImageName }}-artifact"
fromImage: builder/golang-alpine
final: false
import:
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-src-artifact"
    add: /src/distribution
    before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
  - id: GOPROXY
    value: "{{ $.GOPROXY }}"
shell:
  beforeInstall:
    - apk add --no-cache make
  install:
    - export GOPROXY=$(cat /run/secrets/GOPROXY)
    - export GOOS=linux
    - export GOARCH=amd64
    - export CGO_ENABLED=0
    - cd /src/distribution
    - make build
    - make binaries
    - chmod +x ./registry
    - mv ./bin/registry /registry
---
image: "{{ $.ModuleName }}/{{ $.ImageName }}"
fromImage: common/distroless
import:
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-src-artifact"
    add: /src/scripts
    to: /
    includePaths:
    - install
    - uninstall
    before: setup
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-src-artifact"
    add: /src/tmp
    to: /tmp
    before: setup
  - image: "{{ $.ModuleName }}/{{ $.ImageName }}-artifact"
    add: /registry
    to: /registry
    before: setup
  - image: common/pause
    add: /pause
    to: /pause
    before: setup
imageSpec:
  config:
    entrypoint: ["/registry"]
    cmd: ["serve", "/config/config.yaml"]
