properties:
  storageClass:
    description: |
      Имя storageClass'а, который использовать.

      Если не указано, используется StorageClass существующей PVC Loki, а если PVC пока нет, используется или [глобальный StorageClass](../../deckhouse-configure-global.html#parameters-storageclass), или `global.discovery.defaultStorageClass`, а если и их нет, данные сохраняются в `emptyDir`.

      `false` — принудительное использование `emptyDir`. Удалить старый PVC и рестартануть под придется вручную.

      **ОСТОРОЖНО!** При указании этой опции в значение, отличное от текущего (из существующей PVC), диск Loki будет перезаказан, а все данные удалены.
  diskSizeGigabytes:
    description: |
      Размер диска для хранения логов или размер PVC при указании параметра [storageClass](#parameters-storageclass).

      Вы должны самостоятельно указать необходимый размер диска для хранения логов за период, указанный в параметре `retentionPeriodHours`.
      Loki не может удалять старые данные автоматически при заполнении диска.

      Занятый объем автоматически мониторится с помощью модуля [extended-monitoring](../340-extended-monitoring/configuration.html#namespaced-kubernetes-объекты)

      **ОСТОРОЖНО!**  Если диск с данными Loki переполнится, приложение перестанет работать. Вам следует выбрать необходимый баланс между значениями параметров `retentionPeriodHours` и `diskSizeGigabytes`.
  retentionPeriodHours:
    description: |
      Сколько часов логи будут храниться, прежде чем будут удалены.
  storeSystemLogs:
    description: |
      Сохранять логи из пространства имен `d8-*` в loki.

      Для работы необходим включенный модуль [log-shipper](../460-log-shipper).
  nodeSelector:
    description: |
      Структура, аналогичная `spec.nodeSelector` пода Kubernetes.

      Если ничего не указано или указано `false`, будет [использоваться автоматика](https://deckhouse.ru/documentation/v1/#выделение-узлов-под-определенный-вид-нагрузки).
  tolerations:
    description: |
      Структура, аналогичная `spec.tolerations` пода Kubernetes.

      Если ничего не указано или указано `false`, будет [использоваться автоматика](https://deckhouse.ru/documentation/v1/#выделение-узлов-под-определенный-вид-нагрузки).
  resourcesManagement:
    description: |
      Настройки запросов и ограничений (limits) использования CPU и памяти подами Loki.
    properties:
      mode:
        description: |
          Режим управления ресурсами:
          - `Static` — классический, с помощью указания запросов/ограничений (requests/limits). Настраивается в секции параметров [static](#parameters-resourcesmanagement-static);
          - `VPA` — с помощью [VPA](https://github.com/kubernetes/design-proposals-archive/blob/main/autoscaling/vertical-pod-autoscaler.md). Настраивается в секции параметров [vpa](#parameters-resourcesmanagement-vpa).
      vpa:
        description: |
          Параметры управления ресурсами в режиме VPA.
        properties:
          mode:
            description: |
              Режим работы VPA.
          cpu:
            description: |
              Настройки VPA при работе с CPU.
            properties:
              max:
                description: |
                  Максимальное значение, которое может выставить VPA для запроса CPU (CPU requests).
              min:
                description: |
                  Минимальное значение, которое может выставить VPA для запроса CPU (CPU requests).
              limitRatio:
                description: |
                  Коэффициент расчета ограничений использования CPU относительно запросов (limits/requests).

                  Применяется для расчета начальных ограничений использования CPU для пода (CPU limits).

                  Если параметр указан, то VPA, при пересчете запросов CPU (CPU requests) будет пересчитывать ограничения использования CPU (CPU limits) сохраняя указанное соотношение ограничений к запросам (limits/requests).
          memory:
            description: |
              Настройки VPA при работе с памятью.
            properties:
              max:
                description: |
                  Максимальное значение, которое может выставить VPA для запроса к памяти (memory requests).
              min:
                description: |
                  Минимальное значение, которое может выставить VPA для запроса к памяти (memory requests).
              limitRatio:
                description: |
                  Коэффициент расчета ограничений использования памяти относительно запросов (limits/requests).

                  Применяется для расчета начальных ограничений использования памяти для пода (memory limits).

                  Если параметр указан, то VPA, при пересчете запросов памяти (memory requests) будет пересчитывать ограничения использования памяти (memory limits) сохраняя указанное соотношение ограничений к запросам (limits/requests).
      static:
        description: |
          Настройка управления ресурсами в режиме `Static`.
        properties:
          requests:
            description: |
              Настройки запросов ресурсов (requests) подов.
            properties:
              cpu:
                description: |
                  Настройка запроса CPU (CPU requests).
              memory:
                description: |
                  Настройка запроса памяти (memory requests).
          limits:
            description: |
              Настройка ограничений (limits) использования CPU и памяти.
            properties:
              cpu:
                description: |
                  Настройка ограничений использования CPU (CPU limits).
              memory:
                description: |
                  Настройка ограничений использования памяти (memory limits).

