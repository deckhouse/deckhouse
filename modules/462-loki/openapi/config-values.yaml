type: object
properties:
  storageClass:
    oneOf:
      - type: string
      - type: boolean
        enum:
          - false
    x-examples:
      - false
      - default
    description: >
      The name of the StorageClass to use.

      If omitted, the StorageClass of the existing Loki PVC is used. If there is
      no PVC yet, either the [global
      StorageClass](../../deckhouse-configure-global.html#parameters-storageclass)
      or `global.discovery.defaultStorageClass` is used, and if those are
      undefined, the emptyDir volume is used to store the data.

      `storageClass: false` — forces the `emptyDir` usage. You will need to
      delete the old PVC and restart the Pod manually.

      **CAUTION!** Setting a value other than the current one (in the existing
      PVC) will cause the Loki volume to be re-provisioned and the data to be
      lost.
  diskSizeGigabytes:
    type: integer
    description: >
      Disk size for log storage or PVC size when specifying the
      [storageClass](#parameters-storageclass) parameters.

      You should manually specify the required disk size for storing logs for
      the period defined by the `retentionPeriodHours` parameter.

      Loki cannot automatically delete old data when the disk is full.

      The
      [extended-monitoring](../340-extended-monitoring/configuration.html#namespaced-kubernetes-objects)
      module automatically monitors the percentage of used disk space.

      **CAUTION!** If the Loki data disk becomes full, the application will stop
      working. You must find the right balance between `retentionPeriodHours`
      and `diskSizeGigabytes` values.
    x-doc-default: 2
    default: 2
  retentionPeriodHours:
    type: integer
    description: |
      How many hours to keep logs before deleting.
    x-doc-default: 168
    default: 168
  storeSystemLogs:
    type: boolean
    default: true
    x-doc-default: 'true'
    description: |
      Save logs from the `d8-*` namespaces to loki.

      The [log-shipper](../460-log-shipper) module must be enabled.
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: >
      The same as the Pods' `spec.nodeSelector` parameter in Kubernetes.

      If the parameter is omitted or `false`, `nodeSelector` will be determined
      [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
  tolerations:
    type: array
    description: >
      The same as the Pods' `spec.tolerations` parameter in Kubernetes.

      If the parameter is omitted or `false`, `tolerations` will be determined
      [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
  resourcesManagement:
    description: |
      Настройки запросов и ограничений (limits) использования CPU и памяти подами Loki.
    default: {}
    x-examples:
      - mode: VPA
        vpa:
          mode: Auto
          cpu:
            min: 50m
            max: 2
            limitRatio: 1.5
          memory:
            min: 256Mi
            max: 2Gi
            limitRatio: 1.5
      - mode: Static
        static:
          requests:
            cpu: 55m
            memory: 256Mi
          limits:
            cpu: 2
            memory: 2Gi
    properties:
      mode:
        type: string
        description: |
          Режим управления ресурсами:
          - `Static` — классический, с помощью указания запросов/ограничений (requests/limits). Настраивается в секции параметров [static](#parameters-resourcesmanagement-static);
          - `VPA` — с помощью [VPA](https://github.com/kubernetes/design-proposals-archive/blob/main/autoscaling/vertical-pod-autoscaler.md). Настраивается в секции параметров [vpa](#parameters-resourcesmanagement-vpa).
        enum:
          - VPA
          - Static
        default: VPA
      vpa:
        type: object
        default: {}
        description: |
          Параметры управления ресурсами в режиме VPA.
        properties:
          mode:
            type: string
            description: |
              The VPA usage mode.
            enum:
              - Initial
              - Auto
            default: Auto
          cpu:
            type: object
            default: {}
            description: |
              Настройки VPA при работе с CPU.
            properties:
              max:
                description: |
                  Максимальное значение, которое может выставить VPA для запроса CPU (CPU requests).
                default: 2
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
              min:
                description: |
                  Минимальное значение, которое может выставить VPA для запроса CPU (CPU requests).
                default: 50m
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
              limitRatio:
                type: number
                examples:
                  - 1.5
                description: |
                  Коэффициент расчета ограничений использования CPU относительно запросов (limits/requests).

                  Применяется для расчета начальных ограничений использования CPU для пода (CPU limits).

                  Если параметр указан, то VPA, при пересчете запросов CPU (CPU requests) будет пересчитывать ограничения использования CPU (CPU limits) сохраняя указанное соотношение ограничений к запросам (limits/requests).
          memory:
            type: object
            default: {}
            description: |
              Настройки VPA при работе с памятью.
            properties:
              max:
                description: |
                  Максимальное значение, которое может выставить VPA для запроса к памяти (memory requests).
                default: 2Gi
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
              min:
                description: |
                  Минимальное значение, которое может выставить VPA для запроса к памяти (memory requests).
                default: 256Mi
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
              limitRatio:
                type: number
                examples:
                  - 1.5
                description: |
                  Коэффициент расчета ограничений использования памяти относительно запросов (limits/requests).

                  Применяется для расчета начальных ограничений использования памяти для пода (memory limits).

                  Если параметр указан, то VPA, при пересчете запросов памяти (memory requests) будет пересчитывать ограничения использования памяти (memory limits) сохраняя указанное соотношение ограничений к запросам (limits/requests).
      static:
        type: object
        description: |
          Настройка управления ресурсами в режиме `Static`.
        properties:
          requests:
            type: object
            description: |
              Настройки запросов ресурсов (requests) подов.
            properties:
              cpu:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
                description: |
                  Настройка запроса CPU (CPU requests).
              memory:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
                description: |
                  Настройка запроса памяти (memory requests).
          limits:
            type: object
            description: |
              Настройка ограничений (limits) использования CPU и памяти.
            properties:
              cpu:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
                description: |
                  Настройка ограничений использования CPU (CPU limits).
              memory:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
                description: |
                  Настройка ограничений использования памяти (memory limits).
