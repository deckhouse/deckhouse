type: object
properties:
  storageClass:
    oneOf:
      - type: string
      - type: boolean
        enum: [false]
    x-examples: [false, "default"]
    description: |
      The name of the StorageClass to use.

      If omitted, the StorageClass of the existing Loki PVC is used. If there is no PVC yet, either the [global StorageClass](../../deckhouse-configure-global.html#parameters-storageclass) or `global.discovery.defaultStorageClass` is used, and if those are undefined, the emptyDir volume is used to store the data.

      `storageClass: false` â€” forces the `emptyDir` usage. You will need to delete the old PVC and restart the Pod manually.

      **CAUTION!** Setting a value other than the current one (in the existing PVC) will cause the Loki volume to be re-provisioned and the data to be lost.
  diskSizeGigabytes:
    type: integer
    description: |
      Disk size for log storage or PVC size when specifying the [storageClass](#parameters-storageclass) parameters.

      You should manually specify the required disk size for storing logs for the period defined by the `retentionPeriodHours` parameter.
      Loki cannot automatically delete old data when the disk is full.

      The occupied disk space is automatically monitored by [extended-monitoring](../340-extended-monitoring/configuration.html#namespaced-kubernetes-objects) module.

      **CAUTION!** If the Loki data disk becomes full, the application will stop working. You must find the right balance between `retentionPeriodHours` and `diskSizeGigabytes` values.
    x-doc-default: 2
    default: 2
  retentionPeriodHours:
    type: integer
    description: |
      How many hours to keep logs before deleting.
    x-doc-default: 168
    default: 168
  storeSystemLogs:
    type: boolean
    default: true
    x-doc-default: 'true'
    description: |
      Save logs from the `d8-*` namespaces to loki.

      The [log-shipper](../460-log-shipper) module must be enabled.
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as the Pods' `spec.nodeSelector` parameter in Kubernetes.

      If the parameter is omitted or `false`, `nodeSelector` will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
  tolerations:
    type: array
    description: |
      The same as the Pods' `spec.tolerations` parameter in Kubernetes.

      If the parameter is omitted or `false`, `tolerations` will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
  resourcesRequests:
    required: ["mode"]
    type: object
    description: |
      The max amounts of CPU and memory resources the Pod can request when being scheduled on a node.

      If the [vertical-pod-autoscaler](../302-vertical-pod-autoscaler/) module is disabled, then these values become the default ones.
    default: {}
    x-examples:
    - mode: VPA
      vpa:
        mode: Auto
        cpu:
          min: "50m"
          max: 2
        memory:
          min: "256Mi"
          max: "2Gi"
    - mode: VPA
      vpa:
        mode: Initial
        cpu:
          min: 1
          max: 3000m
        memory:
          min: 1024
          max: 4096
    - mode: Static
      static:
        cpu: "55m"
        memory: "256Ki"
    oneOf:
      - properties:
          mode:
            enum: ["VPA"]
          vpa: {}
      - properties:
          mode:
            enum: ["Static"]
          static: {}
    properties:
      mode:
        type: string
        description: |
          The mode for managing resource requests.
        enum: ["VPA", "Static"]
        default: "VPA"
      vpa:
        type: object
        description: |
          Parameters of the VPA mode.
        required:
          - mode
          - cpu
          - memory
        default: {}
        properties:
          mode:
            type: string
            description: |
              The VPA usage mode.
            enum: ["Initial", "Auto"]
            default: "Initial"
          cpu:
            type: object
            description: |
              CPU-related parameters.
            default: {}
            properties:
              max:
                oneOf:
                  - type: string
                    pattern: "^[0-9]+m?$"
                  - type: number
                description: |
                  The max amount of CPU requests the VPA can set.
                default: "500m"
              min:
                oneOf:
                  - type: string
                    pattern: "^[0-9]+m?$"
                  - type: number
                description: |
                  The min amount of CPU requests the VPA can set.
                default: "50m"
          memory:
            type: object
            description: |
              The amount of memory requested.
            default: {}
            properties:
              max:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
                description: |
                  The max amount of memory requests the VPA can set.
                default: "2048Mi"
              min:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
                description: |
                  The min amount of memory requests the VPA can set.
                default: "64Mi"
      static:
        type: object
        description: |
          Static mode settings.
        required:
          - cpu
          - memory
        default: {}
        properties:
          cpu:
            oneOf:
              - type: string
                pattern: "^[0-9]+m?$"
              - type: number
            description: |
              CPU requests.
            default: "50m"
          memory:
            oneOf:
              - type: string
                pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
              - type: number
            description: |
              Memory requests.
            default: "64Mi"
