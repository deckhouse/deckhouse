type: object
description: The module does not have any mandatory parameters.
properties:
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as in the pods' `spec.nodeSelector` parameter in Kubernetes.

      If the parameter is omitted or `false`, it will be determined [automatically](/#advanced-scheduling).
    x-examples:
    - { "has-gpu": "true" }

  tolerations:
    description: |
      The same as in the pods' `spec.tolerations` parameter in Kubernetes.

      If the parameter is omitted or `false`, it will be determined [automatically](/#advanced-scheduling).
    type: array
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          format: int64
          type: integer
        value:
          type: string
    x-examples:
    - [{"key":"dedicated.deckhouse.io","operator":"Equal","value":"cert-manager"}]

  cloudDNSServiceAccount:
    type: string
    format: byte
    description: |
      The Service Account for [Google Cloud](usage.html#issuing-a-dns-wildcard-certificate-using-google)
      for the same project that has the DNS Administrator role.
    x-examples: ["eyJzYSI6ICJhYmNkZWZnaEBzZXJ2aWNlYWNjb3VudC5jb20iLCAicHJvamVjdF9pZCI6ImFhYWFhIn0="]

  email:
    type: string
    format: email
    description: |
      The email used for sending notifications by LetsEncrypt.
    x-examples: ["example@example.com"]

  cleanupOrphanSecrets:
    type: boolean
    default: false
    description: |
      Delete a secret with a certificate automatically if the corresponding Certificate resource was deleted from the cluster.
    x-examples: [true, false]

  maxConcurrentChallenges:
    type: integer
    format: int32
    minimum: 0
    description: |
      The maximum number of challenges that can be scheduled as 'processing' at once. (default 60)
    x-examples: [25]

  enableCAInjector:
    type: boolean
    default: false
    x-examples: [true, false]
    description: |
      Enable CAInjector. It only needs to inject CA certs into `ValidatingWebhookConfiguration`, `MutatingWebhookConfiguration`, `CustomResourceDefinition` and `APIService`.
      Deckhouse does not use CAInjector, so you have to enable it only if you use custom CA injections in your services.
