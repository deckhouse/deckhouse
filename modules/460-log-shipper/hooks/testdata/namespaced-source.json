{
  "sources": {
    "d8_namespaced_source_tests-whispers_whispers-logs_loki-storage": {
      "type": "kubernetes_logs",
      "extra_label_selector": "app=test",
      "extra_field_selector": "metadata.name!=$VECTOR_SELF_POD_NAME,metadata.namespace=tests-whispers",
      "annotation_fields": {
        "container_image": "image",
        "container_name": "container",
        "pod_ip": "pod_ip",
        "pod_labels": "pod_labels",
        "pod_name": "pod",
        "pod_namespace": "namespace",
        "pod_node_name": "node",
        "pod_owner": "pod_owner"
      },
      "glob_minimum_cooldown_ms": 1000
    },
    "d8_namespaced_source_tests-whispers_whispers-logs_test-es-dest": {
      "type": "kubernetes_logs",
      "extra_label_selector": "app=test",
      "extra_field_selector": "metadata.name!=$VECTOR_SELF_POD_NAME,metadata.namespace=tests-whispers",
      "annotation_fields": {
        "container_image": "image",
        "container_name": "container",
        "pod_ip": "pod_ip",
        "pod_labels": "pod_labels",
        "pod_name": "pod",
        "pod_namespace": "namespace",
        "pod_node_name": "node",
        "pod_owner": "pod_owner"
      },
      "glob_minimum_cooldown_ms": 1000
    }
  },
  "transforms": {
    "d8_tf_tests-whispers_whispers-logs_loki-storage_00_clean_up": {
      "drop_on_abort": false,
      "inputs": [
        "d8_namespaced_source_tests-whispers_whispers-logs_loki-storage"
      ],
      "source": "if exists(.pod_labels.\"controller-revision-hash\") {\n    del(.pod_labels.\"controller-revision-hash\")\n}\nif exists(.pod_labels.\"pod-template-hash\") {\n    del(.pod_labels.\"pod-template-hash\")\n}\nif exists(.kubernetes) {\n    del(.kubernetes)\n}\nif exists(.file) {\n    del(.file)\n}",
      "type": "remap"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_01_json_parse": {
      "drop_on_abort": false,
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_00_clean_up"
      ],
      "source": "structured, err = parse_json(.message)\nif err == null {\n    .parsed_data = structured\n}",
      "type": "remap"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_02_log_filter": {
      "condition": "exists(.parsed_data.foo)",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_01_json_parse"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_03_log_filter": {
      "condition": "!exists(.parsed_data.foo)",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_02_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_04_log_filter": {
      "condition": "if is_boolean(.parsed_data.foo) || is_float(.parsed_data.foo) {\n    data, err = to_string(.parsed_data.foo);\n    if err != null {\n        false;\n    } else {\n        includes([\"wvrr\"], data);\n    };\n} else {\n    includes([\"wvrr\"], .parsed_data.foo);\n}",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_03_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_05_log_filter": {
      "condition": "if is_boolean(.parsed_data.foo) || is_float(.parsed_data.foo) {\n    data, err = to_string(.parsed_data.foo);\n    if err != null {\n        true;\n    } else {\n        !includes([\"wvrr\"], data);\n    };\n} else {\n    !includes([\"wvrr\"], .parsed_data.foo);\n}",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_04_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_06_log_filter": {
      "condition": "match!(.parsed_data.foo, r'^wvrr')",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_05_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_loki-storage_07_log_filter": {
      "condition": "if exists(.parsed_data.foo) \u0026\u0026 is_string(.parsed_data.foo) {\n  {\n  matched, err = match(.parsed_data.foo, r'^wvrr')\n  if err != null {\n    true\n  } else {\n    !matched\n  }\n}\n} else {\n  true\n}",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_06_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_00_clean_up": {
      "drop_on_abort": false,
      "inputs": [
        "d8_namespaced_source_tests-whispers_whispers-logs_test-es-dest"
      ],
      "source": "if exists(.pod_labels.\"controller-revision-hash\") {\n    del(.pod_labels.\"controller-revision-hash\")\n}\nif exists(.pod_labels.\"pod-template-hash\") {\n    del(.pod_labels.\"pod-template-hash\")\n}\nif exists(.kubernetes) {\n    del(.kubernetes)\n}\nif exists(.file) {\n    del(.file)\n}",
      "type": "remap"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_01_json_parse": {
      "drop_on_abort": false,
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_00_clean_up"
      ],
      "source": "structured, err = parse_json(.message)\nif err == null {\n    .parsed_data = structured\n}",
      "type": "remap"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_02_elastic_dedot": {
      "hooks": {
        "process": "process"
      },
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_01_json_parse"
      ],
      "source": "\nfunction process(event, emit)\n\tif event.log.pod_labels == nil then\n\t\treturn\n\tend\n\tdedot(event.log.pod_labels)\n\temit(event)\nend\nfunction dedot(map)\n\tif map == nil then\n\t\treturn\n\tend\n\tlocal new_map = {}\n\tlocal changed_keys = {}\n\tfor k, v in pairs(map) do\n\t\tlocal dedotted = string.gsub(k, \"%.\", \"_\")\n\t\tif dedotted ~= k then\n\t\t\tnew_map[dedotted] = v\n\t\t\tchanged_keys[k] = true\n\t\tend\n\tend\n\tfor k in pairs(changed_keys) do\n\t\tmap[k] = nil\n\tend\n\tfor k, v in pairs(new_map) do\n\t\tmap[k] = v\n\tend\nend",
      "type": "lua",
      "version": "2"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_03_extra_fields": {
      "drop_on_abort": false,
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_02_elastic_dedot"
      ],
      "source": " .foo=\"bar\" \n",
      "type": "remap"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_04_log_filter": {
      "condition": "exists(.parsed_data.foo)",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_03_extra_fields"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_05_log_filter": {
      "condition": "!exists(.parsed_data.foo)",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_04_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_06_log_filter": {
      "condition": "if is_boolean(.parsed_data.foo) || is_float(.parsed_data.foo) {\n    data, err = to_string(.parsed_data.foo);\n    if err != null {\n        false;\n    } else {\n        includes([\"wvrr\"], data);\n    };\n} else {\n    includes([\"wvrr\"], .parsed_data.foo);\n}",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_05_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_07_log_filter": {
      "condition": "if is_boolean(.parsed_data.foo) || is_float(.parsed_data.foo) {\n    data, err = to_string(.parsed_data.foo);\n    if err != null {\n        true;\n    } else {\n        !includes([\"wvrr\"], data);\n    };\n} else {\n    !includes([\"wvrr\"], .parsed_data.foo);\n}",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_06_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_08_log_filter": {
      "condition": "match!(.parsed_data.foo, r'^wvrr')",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_07_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_09_log_filter": {
      "condition": "if exists(.parsed_data.foo) \u0026\u0026 is_string(.parsed_data.foo) {\n  {\n  matched, err = match(.parsed_data.foo, r'^wvrr')\n  if err != null {\n    true\n  } else {\n    !matched\n  }\n}\n} else {\n  true\n}",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_08_log_filter"
      ],
      "type": "filter"
    },
    "d8_tf_tests-whispers_whispers-logs_test-es-dest_10_del_parsed_data": {
      "drop_on_abort": false,
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_09_log_filter"
      ],
      "source": "if exists(.parsed_data) {\n    del(.parsed_data)\n}",
      "type": "remap"
    }
  },
  "sinks": {
    "d8_cluster_sink_loki-storage": {
      "type": "loki",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_loki-storage_07_log_filter"
      ],
      "healthcheck": {
        "enabled": false
      },
      "encoding": {
        "codec": "text",
        "only_fields": [
          "message"
        ],
        "timestamp_format": "rfc3339"
      },
      "endpoint": "http://loki.loki:3100",
      "labels": {
        "container": "{{ container }}",
        "foo": "bar",
        "image": "{{ image }}",
        "namespace": "{{ namespace }}",
        "node": "{{ node }}",
        "pod": "{{ pod }}",
        "pod_ip": "{{ pod_ip }}",
        "pod_labels_*": "{{ pod_labels }}",
        "pod_owner": "{{ pod_owner }}",
        "stream": "{{ stream }}"
      },
      "remove_label_fields": true,
      "out_of_order_action": "rewrite_timestamp"
    },
    "d8_cluster_sink_test-es-dest": {
      "type": "elasticsearch",
      "inputs": [
        "d8_tf_tests-whispers_whispers-logs_test-es-dest_10_del_parsed_data"
      ],
      "healthcheck": {
        "enabled": false
      },
      "endpoint": "http://192.168.1.1:9200",
      "encoding": {
        "timestamp_format": "rfc3339"
      },
      "batch": {
        "max_bytes": 10485760,
        "timeout_secs": 1
      },
      "compression": "gzip",
      "bulk": {
        "action": "index",
        "index": "logs-%F"
      },
      "mode": "bulk"
    }
  }
}
