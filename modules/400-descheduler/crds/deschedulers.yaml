---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: deschedulers.deckhouse.io
spec:
  group: deckhouse.io
  names:
    kind: Descheduler
    listKind: DeschedulerList
    plural: deschedulers
    singular: descheduler
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.ready
          name: Ready
          type: boolean
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Descheduler is a description of a single descheduler instance
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
              properties:
                name:
                  type: string
            spec:
              description: Spec defines the behavior of a descheduler instance.
              properties:
                deploymentTemplate:
                  description: Defines Template of a descheduler Deployment
                  properties:
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    tolerations:
                      items:
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            format: int64
                            type: integer
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                deschedulerPolicy:
                  description: globalParameters and strategies follow descheduler's documentation https://github.com/kubernetes-sigs/descheduler#policy-and-strategies
                  properties:
                    globalParameters:
                      description: Parameters that apply to all policies
                      properties:
                        evictFailedBarePods:
                          description: EvictFailedBarePods allows pods without ownerReferences and in failed phase to be evicted.
                          type: boolean
                        evictLocalStoragePods:
                          description: EvictLocalStoragePods allows pods using local storage to be evicted.
                          type: boolean
                        evictSystemCriticalPods:
                          description: EvictSystemCriticalPods allows eviction of pods of any priority (including Kubernetes system pods).
                          type: boolean
                        ignorePvcPods:
                          description: IgnorePVCPods prevents pods with PVCs from being evicted.
                          type: boolean
                        maxNoOfPodsToEvictPerNamespace:
                          description: MaxNoOfPodsToEvictPerNamespace restricts maximum of pods to be evicted per namespace.
                          type: integer
                        maxNoOfPodsToEvictPerNode:
                          description: MaxNoOfPodsToEvictPerNode restricts maximum of pods to be evicted per node.
                          type: integer
                        nodeSelector:
                          type: string
                      type: object
                    strategies:
                      description: List of strategies with corresponding parameters for a given Descheduler instances
                      properties:
                        highNodeUtilization:
                          description: >
                            This strategy finds nodes that are over utilized and evicts pods from the nodes in the hope
                            that these pods will be scheduled compactly into fewer nodes.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: &node-filter
                              description: Filters Nodes to which the strategy applies
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              type: object
                            priorityFilter: &priority-filter
                              description: Only Pods with priority lower than this will be descheduled
                              thresholdPriority:
                                format: int32
                                type: integer
                              thresholdPriorityClassName:
                                type: string
                              type: object
                            namespaceFilter: &namespace-filter
                              description: Restricts Namespaces to which this strategy applies
                              namespaces:
                                properties:
                                  exclude:
                                    items:
                                      type: string
                                    type: array
                                  include:
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type: object
                            nodeFit: &node-fit
                              description: >
                                If set to true the descheduler will consider whether or not the pods
                                that meet eviction criteria will fit on other nodes before evicting them.
                              type: boolean
                          type: object
                        lowNodeUtilization:
                          description: >
                            This strategy finds nodes that are under utilized and evicts pods, if possible, from other nodes in the hope
                            that recreation of evicted pods will be scheduled on these underutilized nodes.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removeDuplicates:
                          description: >
                            This strategy makes sure that there is only one pod associated with
                            a ReplicaSet (RS), ReplicationController (RC), StatefulSet, or Job running on the same node.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removeFailedPods:
                          description: This strategy evicts pods that are in failed status phase.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removePodsHavingTooManyRestarts:
                          description: This strategy makes sure that pods having too many restarts are removed from nodes.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removePodsViolatingInterPodAntiAffinity:
                          description: This strategy makes sure that pods violating interpod anti-affinity are removed from nodes.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removePodsViolatingNodeAffinity:
                          description: This strategy makes sure all pods violating node affinity are eventually removed from nodes.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removePodsViolatingNodeTaints:
                          description: This strategy makes sure that pods violating NoSchedule taints on nodes are removed.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                        removePodsViolatingTopologySpreadConstraint:
                          description: This strategy makes sure that pods violating topology spread constraints are evicted from nodes.
                          properties:
                            enabled:
                              type: boolean
                            nodeFilter: *node-filter
                            priorityFilter: *priority-filter
                            namespaceFilter: *namespace-filter
                            nodeFit: *node-fit
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: Most recently observed status of a descheduler instance.
              properties:
                ready:
                  type: boolean
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
