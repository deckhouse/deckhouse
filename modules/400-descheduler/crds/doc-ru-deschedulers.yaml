spec:
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          description: Descheduler is a description of a single descheduler instance.
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
              properties:
                name:
                  type: string
            spec:
              type: object
              description: Defines the behavior of a descheduler instance.
              properties:
                nodeLabelSelector:
                  description: Limiting the nodes which are allowed to fit evicted pods.
                  type: object
                  properties:
                    matchExpressions:
                      type: array
                      description: List of label expressions that a node should have to qualify for the filter condition.
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: A label name.
                          operator:
                            type: string
                            description: A comparison operator.
                            enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                          values:
                            type: array
                            description: A label value.
                            items:
                              type: string
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              minLength: 1
                              maxLength: 63
                        oneOf:
                          - properties:
                              operator:
                                enum: [ Exists, DoesNotExist ]
                            required: [ key, operator ]
                            not:
                              required: [ values ]
                          - properties:
                              operator:
                                enum: [ In, NotIn ]
                            required: [ key, operator, values ]
                      x-doc-examples:
                        - - key: tier
                            operator: In
                            values:
                              - production
                              - staging
                          - key: tier
                            operator: NotIn
                            values: [ production ]
                    matchLabels:
                      type: object
                      additionalProperties:
                        type: string
                podLabelSelector:
                  type: object
                  description: Limiting the pods which are processed by labels.
                  properties:
                    matchExpressions:
                      type: array
                      description: List of label expressions that a node should have to qualify for the filter condition.
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: A label name.
                          operator:
                            type: string
                            description: A comparison operator.
                            enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                          values:
                            type: array
                            description: A label value.
                            items:
                              type: string
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              minLength: 1
                              maxLength: 63
                        oneOf:
                          - properties:
                              operator:
                                enum: [ Exists, DoesNotExist ]
                            required: [ key, operator ]
                            not:
                              required: [ values ]
                          - properties:
                              operator:
                                enum: [ In, NotIn ]
                            required: [ key, operator, values ]
                      x-doc-examples:
                        - - key: tier
                            operator: In
                            values:
                              - production
                              - staging
                          - key: tier
                            operator: NotIn
                            values: [ production ]
                    matchLabels:
                      type: object
                      additionalProperties:
                        type: string
                namespaceLabelSelector:
                  type: object
                  description: Limiting the pods which are processed by namespace labels.
                  properties:
                    matchExpressions:
                      type: array
                      description: List of label expressions that a node should have to qualify for the filter condition.
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: A label name.
                          operator:
                            type: string
                            description: A comparison operator.
                            enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                          values:
                            type: array
                            description: A label value.
                            items:
                              type: string
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              minLength: 1
                              maxLength: 63
                        oneOf:
                          - properties:
                              operator:
                                enum: [ Exists, DoesNotExist ]
                            required: [ key, operator ]
                            not:
                              required: [ values ]
                          - properties:
                              operator:
                                enum: [ In, NotIn ]
                            required: [ key, operator, values ]
                      x-doc-examples:
                        - - key: tier
                            operator: In
                            values:
                              - production
                              - staging
                          - key: tier
                            operator: NotIn
                            values: [ production ]
                    matchLabels:
                      type: object
                      additionalProperties:
                        type: string
                priorityClassThreshold:
                  type: object
                  description: |
                    Only pods under the threshold can be evicted.
                    You can specify this threshold by setting `priorityClassThreshold.name` (setting the threshold to the value of the given priority class)
                    or `priorityThreshold.value` (directly setting the threshold) parameters.
                    By default, this threshold is set to the value of system-cluster-critical priority class.
                  properties:
                    name:
                      type: string
                    value:
                      type: integer
                  oneOf:
                    - required: ["name"]
                    - required: ["value"]
                strategies:
                  type: object
                  description: List of strategies with corresponding parameters for a given Descheduler instances.
                  properties:
                    lowNodeUtilization:
                      type: object
                      description: |
                        This strategy finds nodes that are under utilized and evicts pods, if possible, from other
                        nodes in the hope that recreation of evicted pods will be scheduled on these underutilized nodes.
                        The parameters of this strategy are configured under `nodeResourceUtilizationThresholds`.
                        The under utilization of nodes is determined by a configurable threshold thresholds.
                        The threshold thresholds can be configured for cpu, memory, number of pods, and extended resources
                        in terms of percentage (the percentage is calculated as the current resources requested on the node
                        vs total allocatable. For pods, this means the number of pods on the node as a fraction of the pod capacity set for that node).
                        If a node's usage is below threshold for all (cpu, memory, number of pods and extended resources),
                        the node is considered underutilized. Currently, pods request resource requirements are considered for computing node resource utilization.
                        There is another configurable threshold, `targetThresholds`, that is used to compute those potential
                        nodes from where pods could be evicted. If a node's usage is above `targetThreshold` for any (cpu, memory, number of pods, or extended resources),
                        the node is considered over utilized. Any node between the `thresholds` and `targetThresholds` is considered
                        appropriately utilized and is not considered for eviction. The threshold, `targetThresholds`, can be configured for cpu, memory, and number of pods too in terms of percentage.
                        These thresholds, `thresholds` and `targetThresholds`, could be tuned as per your cluster requirements.
                        Note that this strategy evicts pods from overutilized nodes (those with usage above `targetThresholds`)
                        to underutilized nodes (those with usage below `thresholds`), it will abort if any number of underutilized nodes or overutilized nodes is zero.
                        Additionally, the strategy accepts a `useDeviationThresholds` parameter. If that parameter is set to true,
                        the thresholds are considered as percentage deviations from mean resource usage. `thresholds` will be deducted from
                        the mean among all nodes and `targetThresholds` will be added to the mean. A resource consumption above (resp. below) this window is considered as overutilization (resp. underutilization).
                        NOTE: Node resource consumption is determined by the requests and limits of pods, not actual usage.
                        This approach is chosen in order to maintain consistency with the kube-scheduler, which follows the same design for scheduling pods onto nodes.
                        This means that resource usage as reported by Kubelet (or commands like kubectl top) may differ from the calculated consumption, due to these components reporting actual usage metrics.
                      properties:
                        thresholds:
                          type: object
                          properties:
                            cpu:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: CPU fraction in percents
                            memory:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: Memory fraction in percents
                            pods:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: Pods count in percents
                          additionalProperties: true
                        targetThresholds:
                          type: object
                          properties:
                            cpu:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: CPU fraction in percents
                            memory:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: Memory fraction in percents
                            pods:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: Pods count in percents
                          additionalProperties: true
                    highNodeUtilization:
                      type: object
                      description: |
                        This strategy finds nodes that are under utilized and evicts pods from the nodes in the hope that these pods will be scheduled compactly into fewer nodes.
                        Used in conjunction with node auto-scaling, this strategy is intended to help trigger down scaling of under utilized nodes.
                        This strategy must be used with the scheduler scoring strategy MostAllocated. The parameters of this strategy are configured under nodeResourceUtilizationThresholds.
                        Note: On GKE, it is not possible to customize the default scheduler config. Instead, you can use the optimize-utilization autoscaling strategy,
                        which has the same effect as enabling the MostAllocated scheduler plugin. Alternatively, you can deploy a second custom scheduler and edit that scheduler's config yourself.
                        The under utilization of nodes is determined by a configurable threshold `thresholds`. The threshold `thresholds` can be configured for cpu, memory, number of pods,
                        and extended resources in terms of percentage. The percentage is calculated as the current resources requested on the node vs total allocatable.
                        For pods, this means the number of pods on the node as a fraction of the pod capacity set for that node.
                        If a node's usage is below threshold for all (cpu, memory, number of pods and extended resources), the node is considered underutilized.
                        Currently, pods request resource requirements are considered for computing node resource utilization. Any node above thresholds is considered appropriately utilized
                        and is not considered for eviction.
                        The `thresholds` param could be tuned as per your cluster requirements. Note that this strategy evicts pods from underutilized nodes (those with usage below thresholds)
                        so that they can be recreated in appropriately utilized nodes. The strategy will abort if any number of underutilized nodes or appropriately utilized nodes is zero.
                        NOTE: Node resource consumption is determined by the requests and limits of pods, not actual usage. This approach is chosen in order to maintain consistency with the kube-scheduler,
                        which follows the same design for scheduling pods onto nodes. This means that resource usage as reported by Kubelet (or commands like kubectl top) may differ from the calculated
                        consumption, due to these components reporting actual usage metrics.
                      properties:
                        thresholds:
                          type: object
                          properties:
                            cpu:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: CPU fraction in percents
                            memory:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: Memory fraction in percents
                            pods:
                              type: integer
                              minimal: 0
                              maximal: 100
                              description: Pods count in percents
                          additionalProperties: true
                  anyOf:
                    - required: ["lowNodeUtilization", "highNodeUtilization"]
                    - required: ["lowNodeUtilization"]
                    - required: ["highNodeUtilization"]
              required:
                - strategies
          required:
            - spec
      served: true
      storage: true
