spec:
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            Описание одного экземпляра descheduler.
          properties:
            apiVersion:
            kind:
            metadata:
              properties:
                name:
            spec:
              description: |-
                Описывает поведение экземпляра descheduler.
              properties:
                deploymentTemplate:
                  description: |-
                    Описание шаблона Deployment’а descheduler.
                  properties:
                    nodeSelector:
                      additionalProperties:
                        properties:
                          tolerationSeconds:
                deschedulerPolicy:
                  description: |-
                    `globalParameters` и `strategies` соответствуют [документации descheduler](https://github.com/kubernetes-sigs/descheduler#policy-and-strategies).
                  properties:
                    globalParameters:
                      description: |-
                        Параметры, применяемые ко всем политикам.
                      properties:
                        evictFailedBarePods:
                          description: |-
                            Позволяет вытеснять поды без `ownerReferences` и в состоянии `failed`.
                        evictLocalStoragePods:
                          description: |-
                            Позволяет вытеснять поды, использующие локальное хранилище.
                        evictSystemCriticalPods:
                          description: |-
                            Позволяет вытеснять поды любого приоритета (включая системные поды Kubernetes).
                        ignorePvcPods:
                          description: |-
                            Предотвращает вытеснение подов с PVC (Persistent Volume Claims).
                        maxNoOfPodsToEvictPerNamespace:
                          description: |-
                            Ограничивает максимальное количество подов, которые могут быть вытеснены в пределах одного пространства имен.
                        maxNoOfPodsToEvictPerNode:
                          description: |-
                            Ограничивает максимальное количество подов, которые могут быть вытеснены с одного узла.
                        nodeSelector:
                    strategies:
                      description: |-
                        Список стратегий с соответствующими параметрами для данного экземпляра Descheduler.
                      properties:
                        highNodeUtilization:
                          description: |-
                            Эта стратегия находит узлы с недостаточной загрузкой и вытесняет с них поды, предполагая, что эти поды будут компактно размещены на меньшем количестве узлов.
                          properties:
                            enabled:
                            nodeFilter: &node-filter
                              description: Фильтрует узлы, к которым применяется стратегия.
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    description: Список выражений меток, которые должен содержать узел, чтобы соответствовать условию фильтра.
                                    items:
                                    properties:
                                      key:
                                        description: Имя метки.
                                      operator:
                                        description: Оператор сравнения.
                                      values:
                                        description: Значение метки.
                                        items:
                                  matchLabels:
                                    additionalProperties:
                            priorityFilter: &priority-filter
                              description: |-
                                Только поды с приоритетом ниже этого значения будут вытеснены.
                              thresholdPriority:
                              thresholdPriorityClassName:
                            namespaceFilter: &namespace-filter
                              description: |-
                                Ограничивает пространства имен, к которым применяется эта стратегия.
                              namespaces:
                              properties:
                            nodeFit: &node-fit
                              description: |-
                                Если установлено значение `true`, descheduler будет учитывать, смогут ли поды, соответствующие критериям вытеснения, быть размещены на других узлах перед тем, как их вытеснить.
                        lowNodeUtilization:
                          description: |-
                            Эта стратегия находит узлы с низкой загрузкой и, если возможно, вытесняет с других узлов поды, предполагая, что новые экземпляры вытесненных подов будут размещены на этих менее загруженных узлах.
                          properties:
                            enabled:
                        removeDuplicates:
                          description: |-
                            Эта стратегия гарантирует, что на одном узле будет работать только один под, связанный с ReplicaSet (RS), ReplicationController (RC), StatefulSet или Job.
                          properties:
                            enabled:
                        removeFailedPods:
                          description: |-
                            Эта стратегия вытесняет поды, находящиеся в статусе `failed`.
                          properties:
                            enabled:
                        removePodsHavingTooManyRestarts:
                          description: |-
                            Эта стратегия гарантирует, что поды с слишком большим количеством перезапусков будут удалены с узлов.
                          properties:
                            enabled:
                        removePodsViolatingInterPodAntiAffinity:
                          description: |-
                            Эта стратегия гарантирует, что поды, которые не могут располагаться рядом с другими подами по определённым условиям, будут удалены с узлов.
                          properties:
                            enabled:
                        removePodsViolatingNodeAffinity:
                          description: |-
                            Эта стратегия гарантирует, что все поды которые не могут быть размещены на определённых узлах, в конечном итоге будут удалены с узлов.
                          properties:
                            enabled:
                        removePodsViolatingNodeTaints:
                          description: |-
                            Эта стратегия гарантирует, что поды, нарушающие taint-метки с правилом `NoSchedule` на узлах, будут удалены.
                          properties:
                            enabled:
                        removePodsViolatingTopologySpreadConstraint:
                          description: |-
                            Эта стратегия гарантирует, что поды, нарушающие ограничения распределения по топологии (topology spread constraints), будут вытеснены с узлов.
                          properties:
                            enabled:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Описание одного экземпляра descheduler
          properties:
            apiVersion:
            kind:
            metadata:
              properties:
                name:
            spec:
              description: Описывает поведение экземпляра descheduler.
              properties:
                nodeSelector:
                  description: |-
                    Ограничение подов, которые обрабатываются для вытеснения, с учетом меток в формате, основанном на равенстве (equality-based representation).
                    Используется для обеспечения совместимости с предыдущими версиями.
                    Если значение установлено, не используйте `nodeLabelSelector`.
                nodeLabelSelector:
                  description: |-
                    Ограничение обрабатываемых подов для соответствия вытесненным подам по меткам в представлении множества (set representation). 
                    Если значение установлено, не используйте `nodeSelector`.
                  properties:
                      matchExpressions:
                        description: Список выражений меток, которые должен иметь узел, чтобы удовлетворить условию фильтра.
                        items:
                          properties:
                            key:
                              description: Имя метки.
                            operator:
                              description: Оператор сравнения.
                            values:
                              description: Значение метки.
                              items:
                        matchLabels:
                        additionalProperties:
                podLabelSelector:
                  description: Ограничение обработки подов по меткам.
                  properties:
                    matchExpressions:
                      description: Список выражений меток, которые должен иметь узел, чтобы удовлетворить условию фильтра.
                      items:
                        properties:
                          key:
                            description: Имя метки.
                          operator:
                            description: Оператор сравнения.
                          values:
                            description: Значение метки.
                            items:
                    matchLabels:
                      additionalProperties:
                namespaceLabelSelector:
                  description: Ограничение обработки подов с помощью меток пространства имен.
                  properties:
                    matchExpressions:
                      description: Список выражений меток, которые должен иметь узел, чтобы удовлетворить условию фильтра.
                      items:
                        properties:
                          key:
                            description: Имя метки.
                          operator:
                            description: Оператор сравнения.
                          values:
                            description: Значение метки.
                            items:
                      matchLabels:
                      additionalProperties:
                priorityClassThreshold:
                  description: |-
                    Ограничение обработки подов по классу приоритета. Только поды, чей приоритет ниже установленного значения, могут быть вытеснены. Вы можете указать значение, установив параметр `priorityClassThreshold.name` (установив значение на данный класс приоритета) или параметр `priorityThreshold.value` (непосредственно установив значение). По умолчанию это значение установлено на класс приоритета `system-cluster-critical`.
                strategies:
                  description: 
                    Список стратегий с соответствующими параметрами для данного экземпляра Descheduler.
                  properties:  
                    lowNodeUtilization:
                      description: |-
                        Эта стратегия определяет узлы с низкой загруженностью и, если возможно, вытесняет поды с других узлов, чтобы обеспечить их повторное размещение на этих недозагруженных узлах. Узел считается недозагруженным, если его использование ресурсов ниже настраиваемого порогового значения `thresholds`. Это значение может быть задано для CPU, памяти, количества подов и расширенных ресурсов в процентах. Проценты вычисляются как соотношение текущих запрошенных ресурсов узла к его общим доступным ресурсам. Для подов это означает отношение числа подов на узле к максимальному числу подов, которое узел может вместить. Если узел имеет использование ниже порогового значения для всех указанных ресурсов (CPU, память, поды, расширенные ресурсы), он считается недозагруженным.
                      properties:
                        enabled:
                        thresholds:
                          properties:
                            cpu:
                              description: Доля процессора в процентах.
                            memory:
                              description: Доля памяти в процентах.
                            pods:
                              description: Доля подов в процентах.
                        targetThresholds:      
                          properties:
                            cpu:
                              description: Доля процессора в процентах.
                            memory:
                              description: Доля памяти в процентах.
                            pods:
                              description: Доля подов в процентах.
                    highNodeUtilization:
                      description: |-
                        Эта стратегия находит узлы с низкой загрузкой и вытесняет поды с этих узлов, предполагая, что эти поды будут размещены более компактно на меньшем количестве узлов. В сочетании с автоматическим масштабированием узлов, стратегия помогает инициировать уменьшение числа узлов с низкой загрузкой. Стратегия должна использоваться с назначением `MostAllocated` для планировщика.

                        В GKE нельзя настроить конфигурацию планировщика по умолчанию. Вместо этого можно использовать стратегию автоматического масштабирования `optimize-utilization`, которая работает так же, как подключение плагина `MostAllocated` в планировщике. Либо можно развернуть второй пользовательский планировщик и отредактировать его конфигурацию.

                        Низкая загрузка узлов определяется с помощью настраиваемого значения `thresholds`, которое может быть установлено для CPU, памяти, количества подов и расширенных ресурсов в процентах. Проценты вычисляются как отношение текущего объема запрошенных ресурсов на узле к общему доступному объему. В случае подов это соотношение представляет количество подов на узле относительно его максимальной ёмкости. Узел считается недогруженным, если его использование находится ниже порогового значения по всем параметрам (CPU, памяти, количеству подов и расширенным ресурсам).

                        Требования к ресурсам, запрашиваемым подами, учитываются при расчете загрузки узла. Узлы с загрузкой выше порогового значения считаются нормально загруженными и не рассматриваются для вытеснения подов. Параметр `thresholds` можно настроить в зависимости от требований кластера.

                        **Внимание.** Эта стратегия вытесняет поды с недогруженных узлов так, чтобы их можно было пересоздать на узлах с подходящей загрузкой. Стратегия завершит работу, если недогруженные узлы или узлы с подходящей загрузкой отсутствуют.

                        Потребление ресурсов узлов определяется запросами и лимитами подов, а не фактическим использованием. Такой подход выбран для согласованности с планировщиком `kube-scheduler`, который работает по тому же принципу. Это означает, что использование ресурсов, о котором сообщает Kubelet (или команды вроде `kubectl top`), может отличаться от рассчитанного потребления, так как эти компоненты сообщают данные о реальном использовании.
                      properties:
                        enabled:
                        thresholds:
                          properties:
                            cpu:
                              description: Доля процессора в процентах.
                            memory:
                              description: Доля памяти в процентах.
                            pods:
                              description: Доля подов в процентах.
                        targetThresholds:      
                          properties:
                            cpu:
                              description: Доля процессора в процентах.
                            memory:
                              description: Доля памяти в процентах.
                            pods:
                              description: Доля подов в процентах.  
                    removeDuplicates:
                      description: |-
                        Этот плагин стратегии гарантирует, что на каждом узле будет размещено не более одного пода, связанного с ReplicaSet (RS), ReplicationController (RC), StatefulSet или Job. Если таких подов оказывается больше, избыточные поды вытесняются для более равномерного распределения по кластеру. Такая ситуация может возникнуть, например, если некоторые узлы вышли из строя, и их поды были перенесены на другие узлы, что привело к сосредоточению нескольких подов RS или RC на одном узле. Когда недоступные узлы снова становятся рабочими, данную стратегию можно активировать для вытеснения лишних подов и восстановления равномерного распределения.
                      properties:  
                    removePodsViolatingNodeAffinity:
                      description: |-
                        Эта стратегия гарантирует, что все поды, нарушающие правила привязки узлов (node affinity), будут в конечном итоге удалены с узлов. Правила привязки узлов позволяют поду указывать параметры `requiredDuringSchedulingIgnoredDuringExecution` и/или `preferredDuringSchedulingIgnoredDuringExecution`.

                        Тип `requiredDuringSchedulingIgnoredDuringExecution` указывает планировщику учитывать правила привязки к узлам при размещении пода, однако kubelet игнорирует эти правила, если со временем узел перестаёт им соответствовать. При включении данной стратегии она действует как временная реализация поведения `requiredDuringSchedulingRequiredDuringExecution`, вытесняя поды с узлов, которые больше не соответствуют заданным правилам привязки.

                        Например, есть под `podA`, который был запланирован на узел `nodeA`, и этот узел соответствовал правилу привязки на момент планирования. Со временем узел `nodeA` перестает удовлетворять этому правилу. Когда стратегия выполняется и есть другой узел, который соответствует правилу привязки, под `podA` выселяется с узла `nodeA`.

                        Тип `preferredDuringSchedulingIgnoredDuringExecution` указывает планировщику учитывать привязку к узлам при планировании пода, если это возможно, но допускает размещение пода даже в случае несоответствия предпочтениям. Со временем состояние кластера может измениться, и под может быть перемещён на узел, который лучше соответствует. При включении этой стратегии выполняется временная функция `preferredDuringSchedulingPreferredDuringExecution`, вытесняя под с текущего узла, если его можно разместить на более подходящем узле.
                      properties:  
                    removePodsViolatingInterPodAntiAffinity:
                      description: |-
                        Эта стратегия гарантирует, что поды, нарушающие правила антипривязки между подами (interpod anti-affinity), будут удалены с узлов. Например, если на узле есть под `podA`, и у подов `podB` и `podC` есть правила антипривязки, которые запрещают их размещение на одном узле, то под `podA` будет вытеснен с узла, чтобы поды `podB` и `podC` могли запуститься.

                        Такая ситуация может возникнуть, если правила антипривязки для подов `podB` и `podC` создаются после того, как они уже запущены на узле.
                      properties:  