type: object
properties:
  removePodsViolatingNodeAffinity:
    type: boolean
    description: |
      This strategy ensures that all Pods violating anti-affinity rules are removed from the nodes.
  removePodsViolatingInterPodAntiAffinity:
    type: boolean
    description: |
      This strategy ensures that all Pods violating node affinity rules are removed from the nodes.
  removeDuplicates:
    type: boolean
    description: |
      This strategy ensures that only one Pod associated with ReplicaSet (RS), ReplicationController (RC), StatefulSet, or Job runs on a node.
  lowNodeUtilization:
    type: boolean
    description: |
      The descheduler finds underutilized nodes and evicts Pods from overutilized nodes hoping that these Pods will be rescheduled on underutilized ones.
  highNodeUtilization:
    type: boolean
    description: |
      This strategy nodes that are under utilized and evicts Pods in the hope that these Pods will be scheduled compactly into fewer nodes.
  removePodsViolatingNodeTaints:
    type: boolean
    description: |
      This strategy ensures that Pods violating NoSchedule taints on nodes are evicted.
  removePodsViolatingTopologySpreadConstraint:
    type: boolean
    description: |
      This strategy ensures that Pods violating the [Pod Topology Spread Constraints](https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/) are evicted from nodes.
  removePodsHavingTooManyRestarts:
    type: boolean
    description: |
      This strategy ensures that Pods having over a hundred container restarts (including init-containers) are removed from nodes.
  podLifeTime:
    type: boolean
    description: |
      This strategy ensures that Pods that are Pending for more than 24 hours are deleted from nodes.
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as the `spec.nodeSelector` Pod parameter in Kubernetes.

      If the parameter is omitted or `false`, it will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
  tolerations:
    type: array
    description: |
      The same as `spec.tolerations` for the Kubernetes Pod.

      If the parameter is omitted or `false`, it will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
