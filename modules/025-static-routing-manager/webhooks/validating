#!/usr/bin/env bash

# Copyright 2024 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /shell_lib.sh

function __config__(){
  cat <<EOF
configVersion: v1
kubernetesValidating:
- name: routingtables-policy.deckhouse.io
  group: main
  rules:
  - apiGroups:   ["network.deckhouse.io"]
    apiVersions: ["v1alpha1"]
    operations:  ["UPDATE"]
    resources:   ["routingtables"]
    scope:       "Cluster"
EOF
}

function forbid() {
  jq -nc --arg message "$1" '
    {
      "allowed": false,
      "message": $message
    }
    ' > $VALIDATING_RESPONSE_PATH
}

function __main__() {
  # ipRouteTableID on-flight change prohibited
  if context::jq -e -r '.review.request.operation == "UPDATE"' >/dev/null 2>&1; then
    newIPRouteTableID=$(context::jq -r '.review.request.object.spec.ipRouteTableID')
    oldIPRouteTableID=$(context::jq -r '.review.request.oldObject.spec.ipRouteTableID')
    if [[ "${oldIPRouteTableID}" != "${newIPRouteTableID}" ]]; then
      forbid ".spec.ipRouteTableID field is immutable"
      exit 0
    fi
  fi

  # Allowed response.
  jq -nc '{"allowed": true}' > $VALIDATING_RESPONSE_PATH
}

hook::run $@
