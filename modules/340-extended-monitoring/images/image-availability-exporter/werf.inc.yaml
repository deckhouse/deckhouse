---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
    add: /k8s-image-availability-exporter
    to: /k8s-image-availability-exporter
    before: setup
docker:
  ENTRYPOINT: ["/k8s-image-availability-exporter"]

---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
shell:
  setup:
  - git clone --depth 1 --branch v0.10.0 {{ $.SOURCE_REPO }}/deckhouse/k8s-image-availability-exporter.git /src
  - cd /src
  - git apply /patches/*.patch --verbose
  - rm -rf /src/.git
git:
  - add: /modules/340-extended-monitoring/images/{{ $.ImageName }}
    to: /
    stageDependencies:
      setup:
        - "**/*"
    includePaths:
      - patches
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
final: false
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  - apk add --no-cache openssh-client
  - mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
  install:
    - export GO_VERSION=${GOLANG_VERSION}
    - export GOPROXY={{ $.GOPROXY }}
    - cd /src
    - CGO_ENABLED=0 go build -a -ldflags '-s -w -extldflags "-static"' -o /k8s-image-availability-exporter main.go
    - chown 64535:64535 /k8s-image-availability-exporter
    - chmod 700 /k8s-image-availability-exporter
