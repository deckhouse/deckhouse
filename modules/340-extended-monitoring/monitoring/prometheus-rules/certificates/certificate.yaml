- name: kubernetes.certmanager.certificate
  rules:
  - alert: CertificateSecretExpiredSoon
    expr: |
      max by (name, namespace) (
        x509_cert_not_after{job="x509-certificate-exporter", secret_key!="ca.crt"} - time() < 1209600
      ) * on (namespace) group_left() max by (namespace) (extended_monitoring_enabled)
    for: 1h
    labels:
      severity_level: "8"
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_create_group_if_not_exists__certificate_secret_expiration: "CertificateSecretExpiration,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
      plk_grouped_by__certificate_secret_expiration: "CertificateSecretExpiration,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
      summary: Certificate is expiring soon.
      description: |
        A certificate in Secret `{{$labels.namespace}}/{{$labels.name}}` will expire in less than two weeks.

        Ways to resolve:

        - If the certificate is managed manually, upload a new certificate.
        - If the certificate is managed by the `cert-manager` module, inspect the certificate resource:
          1. Retrieve the certificate name from the Secret:

             ```bash
             cert=$(kubectl get secret -n {{$labels.namespace}} {{$labels.name}} -o 'jsonpath={.metadata.annotations.cert-manager\.io/certificate-name}')
             ```

          2. Check the certificate status and investigate why it hasn't been updated:

             ```bash
             kubectl describe cert -n {{$labels.namespace}} "$cert"
             ```

  - alert: CertificateSecretExpired
    expr: |
      max by (name, namespace) (
        x509_cert_not_after{job="x509-certificate-exporter", secret_key!="ca.crt"} - time() < 0
      ) * on (namespace) group_left() max by (namespace) (extended_monitoring_enabled)
    for: 1h
    labels:
      severity_level: "8"
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_create_group_if_not_exists__certificate_secret_expiration: "CertificateSecretExpiration,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
      plk_grouped_by__certificate_secret_expiration: "CertificateSecretExpiration,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
      summary: Certificate has expired.
      description: |
        A certificate in Secret `{{$labels.namespace}}/{{$labels.name}}` has expired.

        Ways to resolve:

        - If the certificate is managed manually, upload a new certificate.
        - If the certificate is managed by the `cert-manager` module, inspect the certificate resource:
          1. Retrieve the certificate name from the Secret:

             ```bash
             cert=$(kubectl get secret -n {{$labels.namespace}} {{$labels.name}} -o 'jsonpath={.metadata.annotations.cert-manager\.io/certificate-name}')
             ```

          2. Check the certificate status and investigate why it hasn't been updated:

             ```bash
             kubectl describe cert -m {{$labels.namespace}} "$cert"
             ```
