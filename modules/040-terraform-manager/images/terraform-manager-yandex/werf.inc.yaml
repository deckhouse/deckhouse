image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: '{{- include "infrastructure_manager_base_image" (dict "TF" .TF "providerName" "yandex") }}'
git:
- add: /{{ .ModulePath }}candi/cloud-providers/yandex
  to: /deckhouse/candi/cloud-providers/yandex
import:
- image: terraform-provider-yandex
  add: /terraform-provider-yandex
  to: /plugins/{{ include "infrastructure_manager_plugin_dir" (dict "TF" .TF "providerName" "yandex") }}/{{ .TF.yandex.namespace }}/{{ .TF.yandex.type }}/{{ .TF.yandex.version }}/linux_amd64/terraform-provider-yandex
  before: setup
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}
shell:
  install:
  - git clone --depth 1 --branch v{{ .TF.yandex.version }} $(cat /run/secrets/SOURCE_REPO)/yandex-cloud/terraform-provider-yandex.git /src
  - cd /src
  - git apply /patches/*.patch --verbose
  - rm -rf .git
---
image: terraform-provider-yandex
final: false
fromImage: builder/golang-alpine
mount:
{{ include "mount points for golang builds" . }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache make bash
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY)
  - cd /src
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 make build LDFLAGS="-s -w -extldflags \"-static\" -X github.com/yandex-cloud/terraform-provider-yandex/version.ProviderVersion={{ .TF.yandex.version }}"
  - mv /go/bin/terraform-provider-yandex /terraform-provider-yandex
  - chmod -R 755 /terraform-provider-yandex
  - chown 64535:64535 /terraform-provider-yandex
