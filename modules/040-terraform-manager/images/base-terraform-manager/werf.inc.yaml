---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
imageSpec:
  config:
    env: { "PATH": "/root:/" }
    entrypoint: ["/dhctl"]
import:
- image: dhctl # from main werf.yaml
  add: /dhctl/bin/dhctl
  to: /dhctl
  before: setup
- image: terraform
  add: /terraform/terraform
  to: /root/terraform
  before: setup
git:
- add: /{{ .ModulePath }}
  to: /deckhouse
  includePaths:
    - "candi/openapi"
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
      - '**/*'
shell:
  install:
  - git clone --depth 1 --branch v{{ .TF.version }} {{ $.SOURCE_REPO }}/hashicorp/terraform.git /src
  - cd /src
  - git apply /patches/*.patch --verbose
  - rm -rf .git
---
# use artifact for one place import for base and install images
image: terraform
final: false
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apk add --no-cache openssh-client
  - mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
  install:
  - cd /src
  - export GOPROXY={{ $.GOPROXY }}
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags \"-static\"" -o /terraform/terraform .
  - chmod 755 /terraform/terraform
