{{- define "ingress-validator" }}
{{- $ctx := index . 0 }}
{{- $crd := index . 1 }}
{{- $name := index . 2 }}
{{- $geoIP2 := $crd.spec.geoIP2 | default dict }}
{{- $checksum := toJson $crd | sha256sum }}
{{- $version := $crd.spec.controllerVersion | default $ctx.Values.ingressNginx.defaultControllerVersion }}
{{- $resources := $crd.spec.resourcesRequests | default dict }}
{{- $logLevels := dict "Error" 0 "Warn" 1 "Info" 2 "Extended" 3 "Debug" 4 "Trace" 5 }}

{{- if (has "vertical-pod-autoscaler" $ctx.Values.global.enabledModules) }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: validator-{{ $name }}
  namespace: d8-ingress-nginx
  {{ include "helm_lib_module_labels" (list $ctx (dict "app" "validator" "name" $name)) | nindent 2 }}
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: validator-{{ $name }}
  {{- if eq ($resources.mode | default "") "VPA" }}
  updatePolicy:
    updateMode: {{ $resources.vpa.mode | default "Initial" | quote }}
  resourcePolicy:
    containerPolicies:
      - containerName: validator
        minAllowed:
          cpu: {{ $resources.vpa.cpu.min | default "10m" | quote }}
          memory: {{ $resources.vpa.memory.min | default "50Mi" | quote }}
        maxAllowed:
          cpu: {{ $resources.vpa.cpu.max | default "50m" | quote }}
          memory: {{ $resources.vpa.memory.max | default "200Mi" | quote }}
  {{- else }}
  updatePolicy:
    updateMode: "Off"
  {{- end }}
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: validator-{{ $name }}
  namespace: d8-ingress-nginx
  {{ include "helm_lib_module_labels" (list $ctx (dict "app" "validator" "name" $name)) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list $ctx 1 0) }}
  selector:
    matchLabels:
      app: validator
      name: {{ $name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: validator-{{ $name }}
  namespace: d8-ingress-nginx
  {{ include "helm_lib_module_labels" (list $ctx (dict "app" "validator" "name" $name)) | nindent 2 }}
  annotations:
    ingress-nginx-controller.deckhouse.io/validator-version: {{ $version | quote }}
    ingress-nginx-controller.deckhouse.io/checksum: {{ $checksum }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" $ctx | nindent 2 }}
  selector:
    matchLabels:
      app: validator
      name: {{ $name }}
  template:
    metadata:
      labels:
        app: validator
        name: {{ $name }}
    spec:
      {{- include "helm_lib_node_selector" (tuple $ctx "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple $ctx "any-node") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple $ctx "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list $ctx (dict "app" "validator" "name" $name )) | nindent 6 }}
      serviceAccountName: validator
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 420
      imagePullSecrets:
        - name: deckhouse-registry
      initContainers:
        - name: touch-files
          image: {{ include "helm_lib_module_common_image" (list $ctx "init") }}
          securityContext:
            readOnlyRootFilesystem: true
          imagePullPolicy: IfNotPresent
          command:
          command:
            - sh
            - -c
            - --
            - "/bin/touch /tmp/resolv.conf /tmp/opentelemetry.toml /tmp/error.log /tmp/nginx.conf && chmod 0666 /tmp/*"
          volumeMounts:
            - name: write-files
              mountPath: /tmp/
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" $ctx | nindent 14 }}
        - name: mkdir-nginx
          image: {{ include "helm_lib_module_common_image" (list $ctx "init") }}
          securityContext:
            readOnlyRootFilesystem: true
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - --
            - "/bin/mkdir /tmp/nginx && chmod 0777 /tmp/*"
          volumeMounts:
            - mountPath: tmp
              name: tmp-nginx
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" $ctx | nindent 14 }}
      containers:
        - name: validator
          image: {{ include "helm_lib_module_image" (list $ctx (printf "controller%s" ($version | replace "." ""))) }}
          securityContext:
            readOnlyRootFilesystem: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              value: "127.0.0.1"
            {{- if $geoIP2.maxmindLicenseKey }}
            - name: LUA_USE_GEOIP2
              value: "true"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
            initialDelaySeconds: 10
            periodSeconds: 2
            timeoutSeconds: 5
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/{{ $name }}-config
            - --v={{ get $logLevels (default "Info" $crd.spec.controllerLogLevel) }}
            - --healthz-port=10254
            - --healthz-host=0.0.0.0
            {{- if $geoIP2.maxmindLicenseKey }}
            - --maxmind-license-key={{ $geoIP2.maxmindLicenseKey }}
            {{- if $geoIP2.maxmindEditionIDs }}
            - --maxmind-edition-ids={{ $geoIP2.maxmindEditionIDs | join "," }}
            {{- end }}
            {{- end }}
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/etc/nginx/webhook-ssl/tls.crt
            - --validating-webhook-key=/etc/nginx/webhook-ssl/tls.key
            - --watch-namespace=d8-ingress-nginx
          lifecycle:
            preStop:
              exec:
                command: ["/wait-shutdown"]
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 100 | nindent 14 }}
              {{- if eq ($resources.mode | default "") "Static" }}
              {{- $resourcesRequestsStatic := $resources.static | default dict }}
              cpu: {{ $resourcesRequestsStatic.cpu | default "350m" | quote }}
              memory: {{ $resourcesRequestsStatic.memory | default "500Mi" | quote }}
              {{- else if not $resources }}
              cpu: "350m"
              memory: "500Mi"
              {{- end }}
          ports:
            - name: webhook
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: secret-nginx-auth-tls
              mountPath: /chroot/etc/nginx/ssl/
            - name: webhook-cert
              mountPath: /chroot/etc/nginx/webhook-ssl/
              readOnly: true
            - mountPath: /chroot/etc/resolv.conf
              name: write-files
              subPath: resolv.conf
            - mountPath: /chroot/etc/nginx/nginx.conf
              name: write-files
              subPath: nginx.conf
            - mountPath: /chroot/etc/ingress-controller/telemetry/opentelemetry.toml
              name: write-files
              subPath: opentelemetry.toml
            - mountPath: /chroot/etc/ingress-controller/ssl
              name: tmp-ssl
            - mountPath: /tmp
              name: tmp-nginx
            - mountPath: /chroot/tmp
              name: tmp-nginx
            - mountPath: /chroot/var/log/nginx/error.log
              name: write-files
              subPath: error.log
      volumes:
        - name: secret-nginx-auth-tls
          secret:
            secretName: ingress-nginx-{{ $crd.name }}-auth-tls
        - name: webhook-cert
          secret:
            secretName: ingress-admission-certificate
        - name: write-files
          emptyDir: {}
        - name: tmp-ssl
          emptyDir: {}
        - name: tmp-nginx
          emptyDir: {}
{{- end }}

{{- $ctx := . }}
{{- range $crd := $ctx.Values.ingressNginx.internal.ingressControllers }}
  {{- if $crd.spec.validationEnabled }}
  {{ include "ingress-validator" (list $ctx $crd $crd.name) }}
  {{- end }}
{{- end }}
