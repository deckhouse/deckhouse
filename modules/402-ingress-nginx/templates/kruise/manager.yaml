{{- define "manager_resources" }}
cpu: 100m
memory: 128Mi
{{- end }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: kruise-controller-manager
  namespace: d8-ingress-nginx
  {{- include "helm_lib_module_labels" (list . (dict "app" "kruise" "control-plane" "controller-manager" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: kruise-controller-manager
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: kruise
        minAllowed:
          {{- include "manager_resources" . | nindent 10 }}
        maxAllowed:
          cpu: 300m
          memory: 512Mi
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kruise-controller-manager
  namespace: d8-ingress-nginx
  {{- include "helm_lib_module_labels" (list . (dict "app" "kruise")) | nindent 2 }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app: kruise
---
# Source: kruise/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kruise-controller-manager
  namespace: d8-ingress-nginx
  {{- include "helm_lib_module_labels" (list . (dict "app" "kruise" "control-plane" "controller-manager")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | nindent 2 }}
  selector:
    matchLabels:
      control-plane: controller-manager
      app: kruise
  minReadySeconds: 3
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app: kruise
    spec:
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
        - args:
            - --enable-leader-election
            - --metrics-addr=:8080
            - --health-probe-addr=:8000
            - --logtostderr=true
            - --leader-election-namespace=d8-ingress-nginx
            - --namespace=d8-ingress-nginx
            - --v=2
            - --feature-gates=ResourcesDeletionProtection=true,PodWebhook=false
            - --sync-period=0
            - --advancedcronjob-workers=0
            - --broadcastjob-workers=0
            - --cloneset-workers=0
            - --crr-workers=0
            - --imagepulljob-workers=0
            - --nodeimage-workers=0
            - --nodepodprobe-workers=0
            - --persistentpodstate-workers=0
            - --podprobemarker-workers=0
            - --podunavailablebudget-workers=0
            - --resourcedistribution-workers=0
            - --sidecarset-workers=0
            - --statefulset-workers=0
            - --uniteddeployment-workers=0
            - --workloadspread-workers=0
          command:
            - /manager
          image: {{ include "helm_lib_module_image" (list . "kruise") }}
          imagePullPolicy: IfNotPresent
          name: kruise
          {{- include "helm_lib_module_container_security_context_not_allow_privilege_escalation" . | nindent 10 }}
          env:
            - name: KUBE_CACHE_MUTATION_DETECTOR
              value: "true"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_PORT
              value: "9876"
            - name: WEBHOOK_CONFIGURATION_FAILURE_POLICY_PODS
              value: Ignore
          ports:
            - containerPort: 9876
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8000
              name: health
              protocol: TCP
          readinessProbe:
            httpGet:
              path: readyz
              port: 8000
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 14 }}
          {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "manager_resources" . | nindent 14 }}
            limits:
              memory: 512Mi
          {{- end }}
      hostNetwork: false
      terminationGracePeriodSeconds: 10
      serviceAccountName: kruise
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: control-plane
                      operator: In
                      values:
                        - controller-manager
                topologyKey: kubernetes.io/hostname
              weight: 100
