{{- $context := . }}
{{- $controllers := .Values.ingressNginx.internal.ingressControllers | default (list) -}}
{{- $licenseMap := include "geoip_collect_license_editions" (dict "controllers" $controllers) | fromJson -}}

{{- if gt (len $licenseMap) 0 }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: geoproxy
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "geoproxy")) | nindent 2 }}
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: d8:ingress-nginx:geoproxy
  {{- include "helm_lib_module_labels" (list . (dict "app" "geoproxy")) | nindent 2 }}
rules:
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get", "list", "watch", "delete", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:ingress-nginx:geoproxy
  {{- include "helm_lib_module_labels" (list . (dict "app" "geoproxy")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:ingress-nginx:geoproxy
subjects:
  - kind: ServiceAccount
    name: geoproxy
    namespace: d8-{{ .Chart.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: d8:ingress-nginx:geoproxy:auth
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:ingress-nginx:geoproxy:auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:ingress-nginx:geoproxy:auth
subjects:
  - kind: ServiceAccount
    name: geoproxy
    namespace: d8-{{ .Chart.Name }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: d8:ingress-nginx:geoproxy
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "geoproxy")) | nindent 2 }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["geoip-license-editions"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: d8:ingress-nginx:geoproxy
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "geoproxy")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: d8:ingress-nginx:geoproxy
subjects:
  - kind: ServiceAccount
    name: geoproxy
    namespace: d8-{{ .Chart.Name }}
{{- end }}
