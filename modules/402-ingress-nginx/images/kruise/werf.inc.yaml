{{- $version := "898dc482a0cbf4fa0db214f952319aa5e1229152" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromImage: builder/src
fromCacheVersion: "2025-10-10"
final: false
git:
  - add: /{{ $.ModulePath }}modules/402-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
    to: /patches
    stageDependencies:
      install:
        - '**/*'
secrets:
  - id: SOURCE_REPO
    value: {{ .SOURCE_REPO }}
shell:
  install:
    - git clone $(cat /run/secrets/SOURCE_REPO)/openkruise/kruise.git /src
    - cd /src
    - git checkout {{ $version }}
    - rm -rf /src/tools
    - git apply /patches/*.patch --verbose
    - rm -rf /src/.git
---
image: {{ .ModuleName }}/{{ $.ImageName }}-artifact
fromImage: builder/golang-alpine
fromCacheVersion: "2025-10-10"
final: false
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
    add: /src
    to: /src
    before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
  - id: GOPROXY
    value: {{ .GOPROXY }}
shell:
  setup:
    - export CGO_ENABLED=0 GOOS=linux GOARCH=amd64
    - cd /src
    - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
    - go mod vendor
    - go build -a -mod=vendor -o /tmp/manager main.go
    - chown -R 64535:64535 /tmp/manager
    - chmod 0700 /tmp/manager
    # Prepare /tmp directory
    - mkdir -p /tmp/tmp
    - chmod 1777 /tmp/tmp
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: base/distroless
fromCacheVersion: "2025-10-10"
import:
  - image: {{ .ModuleName }}/{{ $.ImageName }}-artifact
    add: /tmp/manager
    to: /manager
    before: setup
git:
{{- include "image mount points" $ }}
imageSpec:
  config:
    entrypoint: ["/manager"]
