{{- $version := "1.7.2" }}

---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
  - add: /{{ $.ModulePath }}modules/402-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
    to: /patches
    stageDependencies:
      install:
        - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}
shell:
  install:
    - git clone --depth 1 --branch v{{ $version }} $(cat /run/secrets/SOURCE_REPO)/openkruise/kruise.git /src
    - rm -rf /src/tools
    - cd /src
    - git apply /patches/*.patch --verbose
    - rm -rf /src/.git
---
image: {{ .ModuleName }}/{{ $.ImageName }}-artifact
fromImage: builder/golang-alpine
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  setup:
    - export CGO_ENABLED=0 GOOS=linux GOARCH=amd64
    - cd /src
    - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
    - go mod vendor
    - go build -a -mod=vendor -o /tmp/manager main.go
    - chown -R 64535:64535 /tmp/manager
    - chmod 0700 /tmp/manager
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
 - image: {{ .ModuleName }}/{{ $.ImageName }}-artifact
   add: /tmp/manager
   to: /manager
   before: setup
imageSpec:
  config:
    entrypoint: ["/manager"]
