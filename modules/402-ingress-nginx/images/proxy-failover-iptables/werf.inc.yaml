artifact: {{ .ModuleName }}/distroless-proxy-failover-iptables-artifact
from: {{ .Images.BASE_ALPINE }}
git:
- add: /{{ .ModulePath }}modules/402-ingress-nginx/images/proxy-failover-iptables
  to: /workdir/
  includePaths:
  - '**/file-filter'
shell:
  install:
    - cd /workdir
    - apk update
    - apk add rsync
    - apk fetch -R -o . iptables
    - mkdir /apk && for apk in *.apk; do tar -xzvf "$apk" -C /apk; done
    - mkdir /filtered-apk && rsync -av --include-from=file-filter --include='*/' --exclude '*' /apk/ /filtered-apk/
    - |
      for cmd in iptables iptables-save iptables-restore; do
        ln -f -s /iptables-wrapper "/filtered-apk/sbin/${cmd}"
      done
      touch /iptables-wrapper
---
artifact: {{ .ModuleName }}/failover-artifact
from: {{ .Images.BASE_GOLANG_19_ALPINE }}
git:
- add: /{{ $.ModulePath }}modules/402-ingress-nginx/images/proxy-failover-iptables/failover/
  to: /workdir/
  stageDependencies:
    install:
    - '**/*.go'
    - '**/*.sum'
    - '**/*.mod'
shell:
  install:
    - cd /workdir
    - apk add --no-cache git
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o failover main.go
---
image: {{ $.ModuleName }}/proxy-failover-iptables
fromImage: common/distroless
import:
- artifact: {{ $.ModuleName }}/distroless-proxy-failover-iptables-artifact
  add: /filtered-apk
  to: /
  before: setup
- artifact: {{ .ModuleName }}/failover-artifact
  add: /workdir/failover
  to: /failover
  before: setup
- image: common/iptables-wrapper
  add: /iptables-wrapper
  to: /iptables-wrapper
  before: setup
docker:
  ENTRYPOINT: ["/failover"]
