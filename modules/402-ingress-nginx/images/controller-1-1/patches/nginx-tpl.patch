--- a/etc/nginx/template/nginx.tmpl
+++ b/etc/nginx/template/nginx.tmpl
@@ -12,6 +12,9 @@
 # setup custom paths that do not require root access
 pid {{ .PID }};
 
+# enables the use of “just-in-time compilation” for the regular expressions known by the time of configuration parsing
+pcre_jit on;
+
 {{ if $cfg.UseGeoIP2 }}
 load_module /etc/nginx/modules/ngx_http_geoip2_module.so;
 {{ end }}
@@ -95,11 +98,11 @@
         end
 
         {{ if $all.EnableMetrics }}
-        ok, res = pcall(require, "monitor")
+        ok, res = pcall(require, "pbmetrics")
         if not ok then
           error("require failed: " .. tostring(res))
         else
-          monitor = res
+          pbmetrics = res
         end
         {{ end }}
 
@@ -124,11 +127,10 @@
     init_worker_by_lua_block {
         lua_ingress.init_worker()
         balancer.init_worker()
-        {{ if $all.EnableMetrics }}
-        monitor.init_worker({{ $all.MonitorMaxBatchSize }})
-        {{ end }}
 
         plugins.run()
+
+        pbmetrics.init_worker()
     }
 
     {{/* Enable the real_ip module only if we use either X-Forwarded headers or Proxy Protocol. */}}
@@ -624,6 +626,24 @@
 
     {{ end }}
 
+    server {
+        listen 8080;
+
+        access_log off;
+
+        keepalive_timeout 0;
+        gzip off;
+
+        location ~ ^/healthz$ {
+            root /tmp;
+            try_files $uri =500;
+        }
+
+        location / {
+          return 404;
+        }
+    }
+
     # backend for when default-backend-service is not configured or it does not have endpoints
     server {
         listen {{ $all.ListenPorts.Default }} default_server {{ if $all.Cfg.ReusePort }}reuseport{{ end }} backlog={{ $all.BacklogSize }};
@@ -852,9 +872,7 @@
 
             proxy_pass            http://upstream_balancer;
             log_by_lua_block {
-                {{ if $enableMetrics }}
-                monitor.call()
-                {{ end }}
+                pbmetrics.call()
             }
         }
         {{ end }}
@@ -1094,6 +1112,10 @@
             set $location_path  {{ $ing.Path | escapeLiteralDollar | quote }};
             set $global_rate_limit_exceeding n;
 
+            set $content_kind "";
+            set $total_upstream_response_time "0";
+            set $upstream_retries "0";
+
             {{ buildOpentracingForLocation $all.Cfg.EnableOpentracing $location }}
 
             {{ if $location.Mirror.Source }}
@@ -1124,11 +1146,10 @@
 
             log_by_lua_block {
                 balancer.log()
-                {{ if $all.EnableMetrics }}
-                monitor.call()
-                {{ end }}
 
                 plugins.run()
+
+                pbmetrics.call()
             }
 
             {{ if not $location.Logs.Access }}
