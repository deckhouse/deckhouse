diff --git a/chroot/etc/nginx/template/nginx.tmpl b/chroot/etc/nginx/template/nginx.tmpl
index 4c0da2eb9..7dfa3f8f6 100644
--- a/chroot/etc/nginx/template/nginx.tmpl
+++ b/chroot/etc/nginx/template/nginx.tmpl
@@ -12,6 +12,9 @@
 # setup custom paths that do not require root access
 pid {{ .PID }};
 
+# enables the use of “just-in-time compilation” for the regular expressions known by the time of configuration parsing
+pcre_jit on;
+
 {{ if $cfg.UseGeoIP2 }}
 load_module /etc/nginx/modules/ngx_http_geoip2_module.so;
 {{ end }}
@@ -98,11 +101,11 @@ http {
         end
 
         {{ if $all.EnableMetrics }}
-        ok, res = pcall(require, "monitor")
+        ok, res = pcall(require, "pbmetrics")
         if not ok then
           error("require failed: " .. tostring(res))
         else
-          monitor = res
+          pbmetrics = res
         end
         {{ end }}
 
@@ -127,11 +130,9 @@ http {
     init_worker_by_lua_block {
         lua_ingress.init_worker()
         balancer.init_worker()
-        {{ if $all.EnableMetrics }}
-        monitor.init_worker({{ $all.MonitorMaxBatchSize }})
-        {{ end }}
 
         plugins.run()
+        pbmetrics.init_worker()
     }
 
     {{/* Enable the real_ip module only if we use either X-Forwarded headers or Proxy Protocol. */}}
@@ -415,6 +416,15 @@ http {
         {{ $reqUri }} 0;{{ end }}
         default 1;
     }
+    map $server_name $total_upstream_response_time {
+        default 0;
+    }
+    map $server_name $upstream_retries {
+        default 0;
+    }
+    map $server_name $formatted_status {
+        default $status;
+    }
 
     {{ if or $cfg.DisableAccessLog $cfg.DisableHTTPAccessLog }}
     access_log off;
@@ -616,6 +626,9 @@ http {
 
         {{ buildHTTPListener  $all $redirect.From }}
         {{ buildHTTPSListener $all $redirect.From }}
+        {{ if $cfg.UseHTTP3 }}
+        {{ buildHTTP3Listener $all $redirect.From }}
+        {{ end }}
 
         ssl_certificate_by_lua_block {
             certificate.call()
@@ -955,14 +968,15 @@ stream {
             proxy_set_header       Host               $best_http_host;
 
             set $proxy_upstream_name {{ $upstreamName | quote }};
+            set $formatted_status $status;
+            set $upstream_retries "0";
+            set $total_upstream_response_time "0";
 
             rewrite                (.*) / break;
 
             proxy_pass            http://upstream_balancer;
             log_by_lua_block {
-                {{ if $enableMetrics }}
-                monitor.call()
-                {{ end }}
+                pbmetrics.call()
             }
         }
         {{ end }}
@@ -1008,8 +1022,14 @@ stream {
 
         {{ buildHTTPListener  $all $server.Hostname }}
         {{ buildHTTPSListener $all $server.Hostname }}
+        {{ if $all.Cfg.UseHTTP3 }}
+        {{ buildHTTP3Listener $all $server.Hostname }}
+        {{ end }}
 
         set $proxy_upstream_name "-";
+        set $formatted_status $status;
+        set $upstream_retries "0";
+        set $total_upstream_response_time "0";
 
         {{ if not ( empty $server.CertificateAuth.MatchCN ) }}
         {{ if gt (len $server.CertificateAuth.MatchCN) 0 }}
@@ -1172,6 +1192,10 @@ stream {
             proxy_set_header            X-Auth-Request-Redirect $request_uri;
             {{ end }}
 
+            {{ if not (contains $externalAuth.AuthSnippet "proxy_connect_timeout") }}
+            proxy_connect_timeout                   15s;
+            {{ end }}
+
             {{ if $externalAuth.AuthCacheKey }}
             proxy_buffering                         "on";
             {{ else }}
@@ -1247,6 +1271,9 @@ stream {
         {{ end }}
 
         location {{ $path }} {
+            {{ if $all.Cfg.UseHTTP3 }}
+            add_header Alt-Svc 'h3=":{{ $all.ListenPorts.HTTPS }}"; ma=86400';
+            {{ end }}
             {{ $ing := (getIngressInformation $location.Ingress $server.Hostname $location.IngressPath) }}
             set $namespace      {{ $ing.Namespace | quote}};
             set $ingress_name   {{ $ing.Rule | quote }};
@@ -1255,6 +1282,8 @@ stream {
             set $location_path  {{ $ing.Path | escapeLiteralDollar | quote }};
             set $global_rate_limit_exceeding n;
 
+            set $content_kind "";
+
             {{ buildOpentelemetryForLocation $all.Cfg.EnableOpentelemetry $all.Cfg.OpentelemetryTrustIncomingSpan $location }}
 
             {{ if $location.Mirror.Source }}
@@ -1285,11 +1314,9 @@ stream {
 
             log_by_lua_block {
                 balancer.log()
-                {{ if $all.EnableMetrics }}
-                monitor.call()
-                {{ end }}
 
                 plugins.run()
+                pbmetrics.call()
             }
 
             {{ if not $location.Logs.Access }}
@@ -1570,14 +1597,15 @@ stream {
 
         {{ if eq $server.Hostname "_" }}
         # health checks in cloud providers require the use of port {{ $all.ListenPorts.HTTP }}
-        location {{ $all.HealthzURI }} {
+        location = {{ $all.HealthzURI }} {
 
             {{ if $all.Cfg.EnableOpentelemetry }}
             opentelemetry off;
             {{ end }}
 
             access_log off;
-            return 200;
+            proxy_set_header D8s-External-Check "True";
+            proxy_pass http://127.0.0.1:10254;
         }
 
         # this is required to avoid error if nginx is being monitored
