---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  labels:
    app: controller
    heritage: deckhouse
    module: ingress-nginx
    name: test-next
  name: controller-test-next
  namespace: d8-ingress-nginx
spec:
  targetRef:
    apiVersion: apps.kruise.io/v1alpha1
    kind: DaemonSet
    name: controller-test-next
  updatePolicy:
    updateMode: "Off"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: controller
    heritage: deckhouse
    module: ingress-nginx
    name: test-next
  name: controller-test-next
  namespace: d8-ingress-nginx
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: controller
      name: test-next
---
apiVersion: apps.kruise.io/v1alpha1
kind: DaemonSet
metadata:
  annotations:
    ingress-nginx-controller.deckhouse.io/checksum: e250fb7fff9aa7c3d0c9b111dcd94a428ddb4c253509f2e3a809129b47628fe0
    ingress-nginx-controller.deckhouse.io/controller-version: "1.6"
    ingress-nginx-controller.deckhouse.io/inlet: HostPortWithProxyProtocol
  labels:
    app: controller
    heritage: deckhouse
    module: ingress-nginx
    name: test-next
  name: controller-test-next
  namespace: d8-ingress-nginx
spec:
  minReadySeconds: 60
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: controller
      name: test-next
  template:
    metadata:
      labels:
        app: controller
        name: test-next
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/test-next-config
        - --v=2
        - --ingress-class=test
        - --healthz-port=10254
        - --http-port=80
        - --https-port=443
        - --update-status=true
        - --shutdown-grace-period=60
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/etc/nginx/webhook-ssl/tls.crt
        - --validating-webhook-key=/etc/nginx/webhook-ssl/tls.key
        - --controller-class=ingress-nginx.deckhouse.io/test
        - --maxmind-license-key=abc12345
        - --maxmind-edition-ids=GeoIPTest,GeoIPTest2
        - --healthz-host=127.0.0.1
        - --election-id=ingress-controller-leader-test
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          value: 127.0.0.1
        - name: LUA_USE_GEOIP2
          value: "true"
        image: registry.example.com@imageHash-ingressNginx-controller16
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /controller/healthz
            port: 4207
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        name: controller
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          protocol: UDP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /controller/healthz
            port: 4207
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 2
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 350m
            ephemeral-storage: 150Mi
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/lib/nginx/body
          name: client-body-temp-path
        - mountPath: /var/lib/nginx/fastcgi
          name: fastcgi-temp-path
        - mountPath: /var/lib/nginx/proxy
          name: proxy-temp-path
        - mountPath: /var/lib/nginx/scgi
          name: scgi-temp-path
        - mountPath: /var/lib/nginx/uwsgi
          name: uwsgi-temp-path
        - mountPath: /etc/nginx/ssl/
          name: secret-nginx-auth-tls
        - mountPath: /tmp/nginx/
          name: tmp-nginx
        - mountPath: /etc/nginx/webhook-ssl/
          name: webhook-cert
          readOnly: true
      - image: registry.example.com@imageHash-ingressNginx-protobufExporter
        name: protobuf-exporter
        resources:
          requests:
            cpu: 10m
            ephemeral-storage: 50Mi
            memory: 20Mi
        volumeMounts:
        - mountPath: /var/files
          name: telemetry-config-file
      - args:
        - --secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):4207
        - --v=2
        - --logtostderr=true
        - --stale-cache-interval=1h30m
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            excludePaths:
            - /controller/healthz
            upstreams:
            - upstream: http://127.0.0.1:10254/
              path: /controller/
              authorization:
                resourceAttributes:
                  namespace: d8-ingress-nginx
                  apiGroup: apps
                  apiVersion: v1
                  resource: daemonsets
                  subresource: prometheus-controller-metrics
                  name: ingress-nginx
            - upstream: http://127.0.0.1:9091/metrics
              path: /protobuf/metrics
              authorization:
                resourceAttributes:
                  namespace: d8-ingress-nginx
                  apiGroup: apps
                  apiVersion: v1
                  resource: daemonsets
                  subresource: prometheus-protobuf-metrics
                  name: ingress-nginx
        image: registry.example.com@imageHash-ingressNginx-kubeRbacProxy
        lifecycle:
          preStop:
            exec:
              command:
              - /controller-probe
              - -server
              - 127.0.0.1:10254
        name: kube-rbac-proxy
        ports:
        - containerPort: 4207
          name: https-metrics
        resources:
          requests:
            cpu: 10m
            ephemeral-storage: 50Mi
            memory: 20Mi
      dnsPolicy: ClusterFirst
      hostNetwork: false
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 420
      tolerations:
      - key: dedicated.deckhouse.io
        operator: Equal
        value: ingress-nginx
      - key: dedicated.deckhouse.io
        operator: Equal
        value: frontend
      - key: drbd.linbit.com/lost-quorum
      - key: drbd.linbit.com/force-io-error
      - key: drbd.linbit.com/ignore-fail-over
      volumes:
      - emptyDir: {}
        name: tmp-nginx
      - emptyDir: {}
        name: client-body-temp-path
      - emptyDir: {}
        name: fastcgi-temp-path
      - emptyDir: {}
        name: proxy-temp-path
      - emptyDir: {}
        name: scgi-temp-path
      - emptyDir: {}
        name: uwsgi-temp-path
      - name: secret-nginx-auth-tls
        secret:
          secretName: ingress-nginx-test-next-auth-tls
      - name: webhook-cert
        secret:
          secretName: ingress-admission-certificate
      - configMap:
          name: d8-ingress-telemetry-config
        name: telemetry-config-file
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
