---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  labels:
    app: proxy-failover
    heritage: deckhouse
    module: ingress-nginx
    name: solid
  name: proxy-solid-failover
  namespace: d8-ingress-nginx
spec:
  targetRef:
    apiVersion: apps.kruise.io/v1alpha1
    kind: DaemonSet
    name: proxy-solid-failover
  updatePolicy:
    updateMode: "Off"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: proxy-failover
    heritage: deckhouse
    module: ingress-nginx
    name: solid
  name: proxy-solid-failover
  namespace: d8-ingress-nginx
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: proxy-failover
      name: solid
---
apiVersion: apps.kruise.io/v1alpha1
kind: DaemonSet
metadata:
  annotations:
    ingress-nginx-controller.deckhouse.io/checksum: 2ce05910aa99582281943ce7993acc0c81436c5995310c05337f237dd9811791
  labels:
    app: proxy-failover
    heritage: deckhouse
    module: ingress-nginx
    name: solid
  name: proxy-solid-failover
  namespace: d8-ingress-nginx
spec:
  selector:
    matchLabels:
      app: proxy-failover
      name: solid
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      labels:
        app: proxy-failover
        name: solid
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: CONTROLLER_NAME
          value: solid
        image: registry.example.com@imageHash-ingressNginx-proxyFailover
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /status
            port: 10255
          initialDelaySeconds: 3
        name: controller
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            path: /status
            port: 10255
          initialDelaySeconds: 3
        resources:
          requests:
            cpu: 350m
            ephemeral-storage: 50Mi
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /opt/nginx-static/additional-conf
          name: additional-config
          readOnly: true
        - mountPath: /opt/nginx-static/writable
          name: writable
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: registry.example.com@imageHash-ingressNginx-proxyFailoverIptables
        name: iptables-loop
        resources:
          requests:
            cpu: 10m
            ephemeral-storage: 50Mi
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: xtables-lock
          readOnly: false
        - mountPath: /sbin
          name: sbin
          readOnly: true
      - args:
        - -web.listen-address=127.0.0.1:10354
        - -nginx.scrape-uri=http://127.0.0.1:10253/nginx_status
        - -nginx.ssl-verify=false
        - -nginx.retries=10
        - -nginx.retry-interval=6s
        image: registry.example.com@imageHash-ingressNginx-nginxExporter
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /metrics
            port: 10354
        name: nginx-exporter
        resources:
          requests:
            cpu: 10m
            ephemeral-storage: 50Mi
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      - args:
        - --secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):4208
        - --v=2
        - --logtostderr=true
        - --stale-cache-interval=1h30m
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            upstreams:
            - upstream: http://127.0.0.1:10354/metrics
              path: /metrics
              authorization:
                resourceAttributes:
                  namespace: d8-ingress-nginx
                  apiGroup: apps
                  apiVersion: v1
                  resource: daemonsets
                  subresource: prometheus-metrics
                  name: proxy-failover
        image: registry.example.com@imageHash-common-kubeRbacProxy
        name: kube-rbac-proxy
        ports:
        - containerPort: 4208
          hostPort: 4208
          name: https-metrics
        resources:
          requests:
            cpu: 10m
            ephemeral-storage: 50Mi
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      imagePullSecrets:
      - name: deckhouse-registry
      initContainers:
      - command:
        - /bin/bash
        - -ec
        - |
          /usr/bin/cp /iptables-wrapper /sbin/ -rv
          /usr/bin/cp /_sbin/* /sbin/ -rv
          /usr/bin/cp /relocate/sbin/* /sbin/ -rv
          /sbin/iptables --version
          /usr/bin/rm /sbin/iptables-wrapper -v
        image: registry.example.com@imageHash-ingressNginx-iptablesWrapperInit
        name: iptables-wrapper-init
        resources:
          requests:
            ephemeral-storage: 60Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /sbin
          name: sbin
        - mountPath: /run/xtables.lock
          name: xtables-lock
      priorityClassName: system-cluster-critical
      securityContext:
        runAsGroup: 64535
        runAsNonRoot: true
        runAsUser: 64535
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      tolerations:
      - key: dedicated.deckhouse.io
        operator: Equal
        value: ingress-nginx
      - key: dedicated.deckhouse.io
        operator: Equal
        value: frontend
      - key: drbd.linbit.com/lost-quorum
      - key: drbd.linbit.com/force-io-error
      - key: drbd.linbit.com/ignore-fail-over
      volumes:
      - configMap:
          name: proxy-solid-failover-config
        name: additional-config
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - emptyDir:
          medium: Memory
          sizeLimit: 4Mi
        name: sbin
      - emptyDir:
          medium: Memory
        name: writable
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
