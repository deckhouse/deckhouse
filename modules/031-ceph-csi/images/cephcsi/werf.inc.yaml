{{- $binaries := "/cephcsi /sbin/mount.ceph /usr/bin/ceph-fuse /bin/mount /bin/umount /sbin/fsck /sbin/modprobe /bin/kmod /usr/bin/rbd /usr/bin/rbd-nbd /sbin/blkid /sbin/mkfs /sbin/mkfs.ext4 /sbin/mkfs.xfs /sbin/blockdev /sbin/dumpe2fs /usr/sbin/xfs_io /usr/sbin/xfs_growfs /sbin/resize2fs" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
final: false
fromImage: common/relocate-artifact
git:
- add: /{{ $.ModulePath }}modules/{{ .ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
mount:
- fromPath: ~/go-pkg-cache
  to: /root/go/pkg
- from: tmp_dir
  to: /root/.cache/go-build
shell:
  beforeInstall:
  - apt-get install -y git golang make gcc build-essential librbd-devel librados-devel ceph-common ceph-fuse rbd-nbd e2fsprogs xfsprogs
  - find /var/lib/apt/ /var/cache/apt/ -type f -delete
  - mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
  install:
    - mkdir -p /src
    - cd /src
    - git clone --branch v3.7.2 --depth 1 {{ $.SOURCE_REPO }}/ceph/ceph-csi.git .
    - git apply /patches/*.patch --verbose
    - export GOPROXY={{ $.GOPROXY }}
    - export CGO_ENABLED=1
    - go mod vendor
    - make cephcsi
    - mv _output/cephcsi /cephcsi
    - /binary_replace.sh -i "{{ $binaries }}" -o /relocate
    - rm -rf .git vendor
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: setup
imageSpec:
  config:
    entrypoint: ["/cephcsi"]
