# Source https://github.com/piraeusdatastore/piraeus-operator/blob/master/charts/piraeus/templates/operator-csi-driver.yaml
{{- define "csi_attacher_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "csi_provisioner_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "csi_resizer_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "linstor_csi_plugin_resources" }}
cpu: 35m
memory: 50Mi
{{- end }}

{{- define "csi_snapshotter_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "csi_livenessprobe_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "csi_node_driver_registrar_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- $kubeVersion := semver .Values.global.discovery.kubernetesVersion -}}
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: linstor-csi-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-csi-controller" "workload-resource-policy.deckhouse.io" "system")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: linstor-csi-controller
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: csi-attacher
      minAllowed:
        {{- include "csi_attacher_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    - containerName: csi-provisioner
      minAllowed:
        {{- include "csi_provisioner_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    - containerName: csi-resizer
      minAllowed:
        {{- include "csi_resizer_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    - containerName: linstor-csi-plugin
      minAllowed:
        {{- include "linstor_csi_plugin_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 70m
        memory: 100Mi
    - containerName: csi-snapshotter
      minAllowed:
        {{- include "csi_snapshotter_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    - containerName: csi-livenessprobe
      minAllowed:
        {{- include "csi_livenessprobe_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: linstor-csi-node
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-csi-node" "workload-resource-policy.deckhouse.io" "every-node")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: linstor-csi-node
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: linstor-csi-plugin
      minAllowed:
        {{- include "linstor_csi_plugin_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 70m
        memory: 100Mi
    - containerName:  csi-livenessprobe
      minAllowed:
        {{- include "csi_livenessprobe_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    - containerName: csi-node-driver-registrar
      minAllowed:
        {{- include "csi_node_driver_registrar_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: linstor-csi-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-csi-controller")) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app.kubernetes.io/component: csi-controller
      app.kubernetes.io/instance: linstor
      app.kubernetes.io/managed-by: piraeus-operator
      app.kubernetes.io/name: piraeus-csi
---
apiVersion: piraeus.linbit.com/v1
kind: LinstorCSIDriver
metadata:
  name: linstor
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-csi-controller")) | nindent 2 }}
spec:
  imagePullSecret: deckhouse-registry
  linstorPluginImage: {{ include "helm_lib_module_image" (list . "linstorCsi") }}
  imagePullPolicy: IfNotPresent
  csiControllerServiceAccountName: csi
  csiNodeServiceAccountName: default
  {{- with .Values.global.modulesImages }}
  csiAttacherImage: {{ include "helm_lib_module_common_image" (list $ (list "csiExternalAttacher" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
  csiLivenessProbeImage: {{ include "helm_lib_module_common_image" (list $ (list "csiLivenessprobe" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
  csiNodeDriverRegistrarImage: {{ include "helm_lib_module_common_image" (list $ (list "csiNodeDriverRegistrar" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
  csiProvisionerImage: {{ include "helm_lib_module_common_image" (list $ (list "csiExternalProvisioner" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
  csiResizerImage: {{ include "helm_lib_module_common_image" (list $ (list "csiExternalResizer" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
  csiSnapshotterImage: {{ include "helm_lib_module_common_image" (list $ (list "csiExternalSnapshotter" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
  {{- end }}
  csiAttacherWorkerThreads: 1
  csiProvisionerWorkerThreads: 1
  csiResizerWorkerThreads: 1
  csiSnapshotterWorkerThreads: 1
  linstorHttpsClientSecret: linstor-client-https-cert
  priorityClassName: ""
  controllerReplicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  controllerStrategy:
    type: RollingUpdate
    {{- if (include "helm_lib_ha_enabled" .) }}
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    {{- end }}
  controllerEndpoint: https://linstor.d8-{{ .Chart.Name }}.svc:3371
  {{- if dig "dataNodes" "nodeSelector" false .Values.linstor }}
  nodeAffinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            {{- range $k, $v := .Values.linstor.dataNodes.nodeSelector }}
            - key: {{ $k }}
              operator: In
              values:
              - {{ $v | quote }}
            {{- end }}
  {{- else }}
  nodeAffinity: {}
  {{- end }}
  nodeTolerations:
    {{- index (include "helm_lib_tolerations" (tuple . "any-node" "storage-problems") | fromYaml) "tolerations" | toYaml | nindent 4 }}
  controllerAffinity:
    {{- with (include "helm_lib_node_selector" (tuple . "system")) }}
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          {{- range $k, $v := index (fromYaml .) "nodeSelector" }}
          - key: {{ $k }}
            operator: In
            values:
            - {{ $v | quote }}
          {{- end }}
    {{- else }}
    nodeAffinity: {}
    {{- end }}
    {{- with (index (fromYaml (include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app.kubernetes.io/component" "csi-controller" "app.kubernetes.io/instance" "linstor" "app.kubernetes.io/managed-by" "piraeus-operator" "app.kubernetes.io/name" "piraeus-csi")))) "affinity") }}
    {{ toYaml . | nindent 4 }}
    {{- else }}
    podAntiAffinity: {}
    {{- end }}
  controllerTolerations:
    {{- index (include "helm_lib_tolerations" (tuple . "system") | fromYaml) "tolerations" | toYaml | nindent 4 }}
  enableTopology: true
  resources:
    requests:
      {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 6 }}
      {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
      {{- include "csi_attacher_resources" . | nindent 6 }}
      {{- end }}
  kubeletPath: /var/lib/kubelet
  logLevel: info
