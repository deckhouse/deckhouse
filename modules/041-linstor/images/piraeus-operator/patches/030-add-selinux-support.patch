diff --git a/pkg/controller/linstorsatelliteset/linstorsatelliteset_controller.go b/pkg/controller/linstorsatelliteset/linstorsatelliteset_controller.go
index f9f163a..44b013b 100644
--- a/pkg/controller/linstorsatelliteset/linstorsatelliteset_controller.go
+++ b/pkg/controller/linstorsatelliteset/linstorsatelliteset_controller.go
@@ -960,7 +960,8 @@ func newSatelliteDaemonSet(satelliteSet *piraeusv1.LinstorSatelliteSet, satellit
 							}, // Run linstor-satellite.
 							Env:             satelliteSet.Spec.AdditionalEnv,
 							ImagePullPolicy: satelliteSet.Spec.ImagePullPolicy,
-							SecurityContext: &corev1.SecurityContext{Privileged: &kubeSpec.Privileged},
+							SecurityContext: &corev1.SecurityContext{Privileged: &kubeSpec.Privileged,
+								SELinuxOptions: &corev1.SELinuxOptions{Level: kubeSpec.Level, Type: kubeSpec.Type}},
 							Ports: []corev1.ContainerPort{
 								{
 									HostPort:      satelliteSet.Spec.SslConfig.Port(),
@@ -1272,10 +1273,11 @@ func daemonSetWithDRBDKernelModuleInjection(ds *apps.DaemonSet, satelliteSet *pi
 			Image:           satelliteSet.Spec.KernelModuleInjectionImage,
 			ImagePullPolicy: satelliteSet.Spec.ImagePullPolicy,
 			Command:         []string{"/bin/bash", "-c", "find /host/usr/lib -maxdepth 1 -mindepth 1 -exec ln -vs {} /usr/lib \\; 2>/dev/null; exec /entry.sh"},
-			SecurityContext: &corev1.SecurityContext{Privileged: &kubeSpec.Privileged},
-			Env:             env,
-			VolumeMounts:    volumeMounts,
-			Resources:       satelliteSet.Spec.KernelModuleInjectionResources,
+			SecurityContext: &corev1.SecurityContext{Privileged: &kubeSpec.Privileged,
+				SELinuxOptions: &corev1.SELinuxOptions{Level: kubeSpec.Level, Type: kubeSpec.Type}},
+			Env:          env,
+			VolumeMounts: volumeMounts,
+			Resources:    satelliteSet.Spec.KernelModuleInjectionResources,
 		},
 	}
 
diff --git a/pkg/k8s/spec/const.go b/pkg/k8s/spec/const.go
index df4ad27..9ad09fb 100644
--- a/pkg/k8s/spec/const.go
+++ b/pkg/k8s/spec/const.go
@@ -110,4 +110,6 @@ var (
 // are addressible.
 var (
 	Privileged = true
+	Level      = "s0"
+	Type       = "spc_t"
 )
