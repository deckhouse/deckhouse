---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /discoverer
  to: /discoverer
  before: setup
imageSpec:
  config:
    entrypoint: ["/discoverer"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/src
  to:  /src
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
  stageDependencies:
    install:
      - go.mod
      - go.sum
      - "**/*.go"
- add: /go_lib/cloud-data
  to: /src/go_lib/cloud-data
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
  stageDependencies:
    install:
      - go.mod
      - go.sum
      - "**/*.go"
- add: /pkg/log
  to: /src/pkg/log
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
  stageDependencies:
    install:
      - go.mod
      - go.sum
      - "**/*.go"
shell:
  install:
  - cd /src
  - sed -i -e 's# /deckhouse/go_lib/cloud-data# /src/go_lib/cloud-data#g' go.mod
  - sed -i -e 's# /deckhouse/pkg/log# /src/pkg/log#g' go.mod
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/golang-alpine-svace" }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
mount:
{{ include "mount points for golang builds" . }}
shell:
  install:
  - cd /src
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
  setup:
  - cd /src
  - export GOOS=linux GOARCH=amd64 CGO_ENABLED=0 
  - |
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o /discoverer`) | indent 6 }}
  - chown 64535:64535 /discoverer
  - chmod 0755 /discoverer
