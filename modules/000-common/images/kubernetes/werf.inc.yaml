{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $patch := toString $value.patch }}
  {{- $v := semver $version }}
  {{- $full_version := printf "%s.%s" $version $patch }}
  {{- $patches := (printf "/%smodules/%s-%s/images/%s" $.ModulePath $.ModulePriority $.ModuleName $.ImageName) }}
  {{- $patch := false }}
  {{- range $path, $_ := $.Files.Glob (printf "%s/*" $patches) }}
    {{- if contains $version $path }}
      {{- $patch = true }}
    {{- end }}
  {{- end }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $full_version | replace "." "-" }}
fromImage: common/src-artifact
final: false
  {{- if $patch }}
git:
- add: {{ $patches }}/patches/{{ $version }}
  to: /patches
  stageDependencies:
    install:
    - '**/*'
  {{- end }}
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
shell:
  install:
  - git clone --depth 1 --branch v{{ $full_version }} $(cat /run/secrets/SOURCE_REPO)/kubernetes/kubernetes.git /src
  - cd /src
  - |
    cat <<EOF > .kube-version
    KUBE_GIT_VERSION='v{{ $full_version }}'
    KUBE_GIT_MAJOR='{{ $v.Major }}'
    KUBE_GIT_MINOR='{{ $v.Minor }}'
    KUBE_GIT_COMMIT='0000000000000000000000000000000000000000'
    KUBE_GIT_TREE_STATE='archive'
    EOF
  {{- if $patch }}
  - git apply /patches/*.patch --verbose
  {{- end }}
  - rm -r .git vendor
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $full_version | replace "." "-" }}
{{- include "image-build.fromImage" $ }}
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $full_version | replace "." "-" }}
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
- from: tmp_dir
  to: /src/_output/local/go
secrets:
- id: GOPROXY
  value: {{ $.GOPROXY }}
shell:
  beforeInstall:
  {{- include "alt packages proxy" $ | nindent 2 }}
  - apt-get install -y curl
  install:
  - export GO_VERSION=${GOLANG_VERSION} GOWORK=off
  - cd /src
  - export KUBE_GIT_VERSION_FILE=.kube-version
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod vendor
  - |
  {{- include "image-build.build" (set $ "BuildCommand" `make all WHAT=cmd/kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubectl kubeadm GOLDFLAGS="-s -w -extldflags \"-static\"" KUBE_STATIC_OVERRIDES="kubelet"`) | indent 4 }}
  - rm -rf vendor
{{- end }}
