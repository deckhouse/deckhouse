{{- $shellOperatorVersion := "v1.4.10"}}
---
image: {{ .ModuleName }}/{{ $.ImageName }}
from: {{ $.Images.BASE_ALT_P11 }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /shell-operator/shell-operator
  to: /shell-operator
  before: setup
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /shell-operator/shell_lib.sh
  to: /shell_lib.sh
  before: setup
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /shell-operator/frameworks
  to: /frameworks
  before: setup
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /src/jq/jq
  to: /usr/local/bin/jq
  before: setup
{{- $k8sVersion := "1.27" }}
{{- $image_version := printf "%s.%d" $k8sVersion (index $.CandiVersionMap "k8s" $k8sVersion "patch") | replace "." "-" }}
- artifact: common/kubernetes-artifact-{{ $image_version }}
  add: /src/_output/bin/kubectl
  to: /usr/local/bin/kubectl
  before: setup
- artifact: tini-artifact
  add: /tini/tini-static
  to: /sbin/tini
  before: setup
docker:
  ENTRYPOINT: ["tini", "--", "/shell-operator"]
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromArtifact: src-artifact
shell:
  install:
  - git clone --branch {{ $shellOperatorVersion }} --depth 1 {{ .SOURCE_REPO }}/flant/shell-operator.git /src/shell-operator
  - git clone --depth 1 {{ .SOURCE_REPO }}/jqlang/jq --branch "jq-1.7.1" /src/jq
  - cd /src/jq
  - |
    cat > .gitmodules <<"EOF"
    [submodule "modules/oniguruma"]
      path = modules/oniguruma
      url = {{ .SOURCE_REPO }}/flant/oniguruma.git
    EOF
  - git submodule update --init
---
artifact: {{ .ModuleName }}/{{ $.ImageName }}-artifact
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  - apk add --no-cache automake autoconf libtool build-base git
  install:
  - cd /src/shell-operator
  - go mod tidy
  setup:
  - export GOPROXY={{ .GOPROXY }} CGO_ENABLED=1 GOOS=linux
  - cd /src/jq
  - autoreconf -fi
  - ./configure CFLAGS=-fPIC --disable-maintainer-mode --enable-all-static --disable-shared --disable-docs --disable-tls --disable-valgrind --with-oniguruma=builtin --prefix=/libjq
  - make -j4
  - make install-libLTLIBRARIES install-includeHEADERS
  - cp -f modules/oniguruma/src/.libs/libonig.* /libjq/lib
  - mkdir -p /jq
  - cp jq /jq
  - chown -R 64535:64535 /jq
  - chmod 700 /jq/jq
  - cd /src/shell-operator
  - CGO_CFLAGS="-I/libjq/include" CGO_LDFLAGS="-L/libjq/lib" go build -ldflags="-linkmode external -extldflags '-static' -s -w -X 'github.com/flant/shell-operator/pkg/app.Version={{ $shellOperatorVersion }}'" -tags use_libjq -o shell-operator ./cmd/shell-operator
  - mkdir -p /shell-operator
  - cp -r shell_lib.sh frameworks shell-operator /shell-operator
  - chown -R 64535:64535 /shell-operator
  - chmod 700 /shell-operator/shell-operator
