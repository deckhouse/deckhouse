---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
    - git clone --depth 1 -b v1.12.0 {{ .SOURCE_REPO }}/{{ .ImageName }}/{{ .ImageName }}.git /src
    - cd /src
    - git apply /patches/*.patch --verbose
    - rm -rf /src/.git
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
  - image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  install:
    - export GO_VERSION=${GOLANG_VERSION} GOPROXY={{ .GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
    - cd /src
    - go build -ldflags='-extldflags "-static" -s -w -X github.com/{{ .ImageName }}/{{ .ImageName }}/coremain.GitCommit=v1.12.0' -o /coredns
    - chown 64535:64535 /coredns
    - chmod 0700 /coredns
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - image: {{ .ModuleName }}/{{ .ImageName }}-artifact
    add: /coredns
    to: /coredns
    before: setup
docker:
  USER: 64535
  ENTRYPOINT: ["/coredns"]
