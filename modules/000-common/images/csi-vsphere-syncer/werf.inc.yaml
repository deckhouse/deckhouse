{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- if $value.csi.vsphere }}
    {{- $src_version := toString $value.csi.vsphere }}
    {{- $patches := (printf "/%smodules/%s-%s/images/%s" $.ModulePath $.ModulePriority $.ModuleName $.ImageName) }}
    {{- $patch := false }}
    {{- range $path, $_ := $.Files.Glob (printf "%s/*" $patches) }}
      {{- if contains $src_version $path }}
        {{- $patch = true }}
      {{- end }}
    {{- end }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $version | replace "." "-" }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $version | replace "." "-" }}
  add: /src/vsphere-syncer
  to: /bin/vsphere-syncer
  before: setup
imageSpec:
  config:
    entrypoint: ["/bin/vsphere-syncer"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $version | replace "." "-" }}
fromImage: common/src-artifact
final: false
    {{- if $patch }}
git:
- add: {{ $patches }}/patches/{{ $src_version }}
  to: /patches
  stageDependencies:
    install:
    - '**/*'
    {{- end }}
shell:
  install:
  - cd /src
  - git clone --depth 1 --branch {{ $src_version }} {{ $.SOURCE_REPO }}/kubernetes-sigs/vsphere-csi-driver.git  .
  {{- if $patch }}
  - git apply /patches/*.patch --verbose
  {{- end }}
  - rm -rf vendor
  - rm -rf .git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $version | replace "." "-" }}
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $version | replace "." "-" }}
  add: /src
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - export GO_VERSION=${GOLANG_VERSION} GOPROXY={{ $.GOPROXY }}
  - cd /src
  - go mod download
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -a -ldflags="-w -s -extldflags=static -X sigs.k8s.io/vsphere-csi-driver/v3/pkg/syncer.Version={{ $version }}" -o vsphere-syncer ./cmd/syncer
  {{- end }}
{{- end }}
