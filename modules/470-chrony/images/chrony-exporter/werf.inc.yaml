{{- $chronyExproterVersion := "0.11.0"}}
{{- $promuVersion := "0.17.0"}}
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/patches
  to: /patches
  includePaths:
  - '**/*.patch'
  stageDependencies:
    install:
    - '**/*.patch'
secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}
shell:
  install:
  - cd /src
  - git clone --depth 1 --branch v{{$promuVersion}} $(cat /run/secrets/SOURCE_REPO)/prometheus/promu.git promu
  - git clone --depth 1 --branch v{{$chronyExproterVersion}} $(cat /run/secrets/SOURCE_REPO)/SuperQ/chrony_exporter.git chrony_exporter
  - cd chrony_exporter
  - git apply /patches/*.patch --verbose
  - rm -rf /src/promu/.git /src/chrony_exporter/.git
---
image: {{ .ModuleName }}/{{ .ImageName }}-promu-artifact
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/golang-alpine-svace" }}
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/promu
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY) CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - cd /src
  - |
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o promu ./main.go`) | indent 6 }}
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/golang-alpine-svace" }}
final: false
mount:
{{ include "mount points for golang builds" . }}
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/chrony_exporter
  to: /chrony_exporter
  before: install
- image: {{ .ModuleName }}/{{ .ImageName }}-promu-artifact
  add: /src/promu
  to: /bin/promu
  before: install
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY) CGO_ENABLED=1 GOOS=linux GOARCH=amd64
  - cd /chrony_exporter
  - |
    {{- include "image-build.build" (set $ "BuildCommand" `promu build`) | indent 6 }}
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /chrony_exporter/chrony_exporter
  to: /bin/chrony_exporter
  before: install
git:
{{- include "image mount points" . }}
imageSpec:
  config:
    entrypoint: ["/bin/chrony_exporter"]
    expose: ["9123"]
