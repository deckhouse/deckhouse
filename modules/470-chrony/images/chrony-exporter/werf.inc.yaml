{{- $chronyExproterVersion := "0.11.0"}}
{{- $promuVersion := "0.14.0"}}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-promu
fromArtifact: common/src-artifact
shell:
  install:
  - git clone --depth 1 --branch v{{ $.promuVersion }} {{ $.SOURCE_REPO }}/prometheus/promu.git /promu
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-promu
from: {{ $.Images.BASE_GOLANG_23_ALPINE_DEV }}
import:
- artifact: {{ .ModuleName }}/{{ $.ImageName }}-src-artifact-promu
  add: /promu
  to: /promu
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - export GOPROXY={{ $.GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - cd /promu
  - go build -ldflags="-s -w" -o promu ./main.go
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromArtifact: common/src-artifact
shell:
  install:
  - git clone -b v{{ $.chronyExproterVersion }} --single-branch {{ $.SOURCE_REPO }}/chrony/chrony_exporter.git /src
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
from: {{ $.Images.BASE_GOLANG_23_ALPINE_DEV }}
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-promu
  add: /promu/promu
  to: /bin/promu
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
shell:
  install:
  - export GOPROXY={{ $.GOPROXY }} CGO_ENABLED=1 GOOS=linux GOARCH=amd64
  - cd /src
  - /bin/promu build
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /src/chrony_exporter
  to: /usr/bin/chrony_exporter
  before: install
docker:
  EXPOSE:
    - "9123"
  ENTRYPOINT:
    - "/usr/bin/chrony_exporter"
