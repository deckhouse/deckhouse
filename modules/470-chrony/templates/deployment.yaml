{{- define "chrony_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{ $ntpServers := list }}
{{- range $value := .Values.chrony.ntpServers }}
  {{- if regexMatch "(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$" $value }}
    {{ $ntpServers = append $ntpServers $value }}
  {{ else }}
    {{ $ntpServers = append $ntpServers (printf "%s." ($value | trimSuffix ".")) }}
  {{- end }}
{{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chrony-master
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "chrony-master")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: chrony-master
  template:
    metadata:
      labels:
        app: chrony-master
    spec:
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "chrony-master")) | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "with-uninitialized") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
        - image: {{ include "helm_lib_module_image" (list . "chrony") }}
          name: chrony-server
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all_and_add" (list . (list "SYS_TIME" "CHOWN" "DAC_OVERRIDE" "FOWNER" "FSETID" "KILL" "SETGID" "SETUID" "SETPCAP" "NET_BIND_SERVICE" "NET_RAW" "SYS_CHROOT" "MKNOD" "AUDIT_WRITE" "SETFCAP")) | nindent 10 }}
          ports:
            - name: ntp
              containerPort: 123
              protocol: UDP
          livenessProbe:
            exec:
              command:
                - chronyc
                - tracking
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 15
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
              readOnly: true
            - name: tzdata-config
              mountPath: /etc/timezone
              readOnly: true
            - name: chrony-server
              mountPath: /run/chrony
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
    {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "chrony_resources" . | nindent 14 }}
    {{- end }}
          env:
            - name: NTP_ROLE
              value: source
            - name: NTP_SERVERS
              value: {{ join " " $ntpServers | quote }}
      volumes:
        - name: tz-config
          hostPath:
            path: /etc/localtime
        - name: tzdata-config
          hostPath:
            path: /etc/timezone
        - name: chrony-server
          emptyDir: {}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: chrony-master
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "chrony-master")) | nindent 2 }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: chrony-master
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: chrony-master
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "chrony-master" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: chrony-master
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: "chrony-server"
        minAllowed:
        {{- include "chrony_resources" . | nindent 10 }}
        maxAllowed:
          cpu: 20m
          memory: 70Mi
{{- end }}
