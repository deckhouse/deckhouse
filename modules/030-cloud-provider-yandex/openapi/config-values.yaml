type: object
properties:
  cloudMetricsExporterEnabled:
    type: boolean
    default: false
    x-examples: [ true, false ]
    description: |
      Deploys Yandex Cloud metrics exporter in the cluster.
      If `cloudMetricsExporterAPIKey` parameter is not set, Deckhouse creates an API-key with ServiceAccount permissions to collect metrics.
      When using the `WithNatInstance` layout, Deckhouse starts collecting metrics for the NAT-instance.
      NAT-instance metrics will have `nat_instance=true` label. Also, it will deploy Grafana dashboard for NAT-instance metrics.
      Before usage, please see [pricing policy for Yandex Cloud Monitoring](https://cloud.yandex.ru/docs/monitoring/pricing).
  cloudMetricsExporterAPIKey:
    type: string
    x-examples: [ "key" ]
    description: |
      API-key for cloud metrics exporter.
      If parameter exists, Deckhouse will be using this API-key for cloud metrics exporter instead Deckhouse automatically created API-key.
      See [this instruction](https://cloud.yandex.ru/docs/iam/operations/api-key/create) for creating API-key.
      Service account should have `monitoring.viewer` role.
  additionalExternalNetworkIDs:
    type: array
    items:
      type: string
    default: []
    description: A list of Network IDs that will be considered `ExternalIP` when listing Node addresses.
  storageClass:
    type: object
    properties:
      exclude:
        type: array
        items:
          type: string
        description: |
          A list of StorageClass names (or regex expressions for names) to exclude from the creation in the cluster;
        x-examples:
        - ["network-ssd-.*", "network-hdd"]
      default:
        type: string
        description: |
          The name of StorageClass that will be used by default in the cluster.

          If the parameter is omitted, the default StorageClass will be one of the following:
            * An arbitrary StorageClass present in the cluster that has the default annotation.
            * The first (in lexicographic order) StorageClass of those [created by the module](#storage).

        x-examples:
        - "network-hdd"
