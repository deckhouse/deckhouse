{{- define "yandex_cloud_controller_manager_resources" }}
cpu: 25m
memory: 60Mi
{{- end }}

{{- $kubernetesSemVer := semver .Values.global.discovery.kubernetesVersion }}
{{- $ccmImageName := join "" (list "cloudControllerManager" $kubernetesSemVer.Major $kubernetesSemVer.Minor ) }}
{{- $ccmImage := include "helm_lib_module_image_no_fail" (list . $ccmImageName) }}
{{- if $ccmImage }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-yandex
  {{- include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: cloud-controller-manager
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "yandex-cloud-controller-manager"
      minAllowed:
        {{- include "yandex_cloud_controller_manager_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 50m
        memory: 60Mi
  {{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-yandex
  {{- include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager")) | nindent 2 }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: cloud-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-yandex
  {{- include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: cloud-controller-manager
  template:
    metadata:
      labels:
        app: cloud-controller-manager
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cloud-controller-manager/secret.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "cloud-controller-manager")) | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "wildcard") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" . | nindent 6 }}
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: cloud-controller-manager
      containers:
        - name: yandex-cloud-controller-manager
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 10 }}
          image: {{ $ccmImage }}
          args:
          - --leader-elect=true
          - --cluster-cidr={{ .Values.global.discovery.podSubnet }}
          - --allocate-node-cidrs=true
          - --configure-cloud-routes=true
          - --cloud-provider=yandex
          - --cluster-name={{ .Values.global.discovery.clusterUUID | sha256sum | trunc 24 }}
          - --bind-address=$(HOST_IP)
          - --secure-port=10471
          - --v=2
          ports:
          - name: https
            containerPort: 10471
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: YANDEX_CLUSTER_NAME
              value: a{{ .Values.global.discovery.clusterUUID | sha256sum | trunc 24 }}
            - name: YANDEX_CLOUD_SERVICE_ACCOUNT_JSON
              valueFrom:
                secretKeyRef:
                  name: cloud-controller-manager
                  key: service-acount-json
            - name: YANDEX_CLOUD_FOLDER_ID
              value: {{ .Values.cloudProviderYandex.internal.providerClusterConfiguration.provider.folderID | quote }}
            - name: YANDEX_CLOUD_DEFAULT_LB_LISTENER_SUBNET_ID
              value: {{ .Values.cloudProviderYandex.internal.defaultLbListenerSubnetId | quote }}
            - name: YANDEX_CLOUD_DEFAULT_LB_TARGET_GROUP_NETWORK_ID
              value: {{ .Values.cloudProviderYandex.internal.providerDiscoveryData.defaultLbTargetGroupNetworkId | quote }}
            - name: YANDEX_CLOUD_INTERNAL_NETWORK_IDS
              value: {{ join "," .Values.cloudProviderYandex.internal.providerDiscoveryData.internalNetworkIDs | quote }}
            - name: YANDEX_CLOUD_EXTERNAL_NETWORK_IDS
              value: {{ join "," .Values.cloudProviderYandex.additionalExternalNetworkIDs | quote }}
            - name: YANDEX_CLOUD_ROUTE_TABLE_ID
              value: {{ .Values.cloudProviderYandex.internal.providerDiscoveryData.routeTableID | required ".Values.cloudProviderYandex.internal.providerDiscoveryData.routeTableID is required" | quote }}
            {{- include "helm_lib_envs_for_proxy" . | nindent 12 }}
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 14 }}
  {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "yandex_cloud_controller_manager_resources" . | nindent 14 }}
  {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
{{- end }}
