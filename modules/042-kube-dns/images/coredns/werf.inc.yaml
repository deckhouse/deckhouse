---
artifact: {{ .ModuleName }}/{{ $.ImageName }}-src-artifact
fromArtifact: src-artifact
git:
  - add: /{{ $.ModulePath }}/modules/042-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
    to: /patches
    stageDependencies:
      install:
        - '**/*'
shell:
  install:
    - mkdir -p /src
    - cd /src
    - git clone --depth 1 -b v1.11.3 {{ $.SOURCE_REPO }}/{{ $.ImageName }}/{{ $.ImageName }}.git .
    - git apply /patches/*.patch --verbose 
---
artifact: {{ .ModuleName }}/{{ $.ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
import:
  - artifact: {{ .ModuleName }}/{{ $.ImageName }}-src-artifact
    add: /src
    to: /src
    before: install
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  install:
    - export GO_VERSION=${GOLANG_VERSION} GOPROXY={{ $.GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
    - cd /src
    - go build -ldflags='-extldflags "-static" -s -w -X github.com/{{ $.ImageName }}/{{ $.ImageName }}/coremain.GitCommit=v1.11.3' -o /{{ $.ImageName }}
    - chown 64535:64535 /{{ $.ImageName }}
    - chmod 0700 /{{ $.ImageName }}
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - artifact: {{ .ModuleName }}/{{ $.ImageName }}-artifact
    add: /coredns
    to: /coredns
    before: setup
docker:
  ENTRYPOINT: ["/coredns"]
