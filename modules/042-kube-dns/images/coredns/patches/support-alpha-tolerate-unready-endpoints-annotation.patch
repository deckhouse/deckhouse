Index: plugin/kubernetes/kubernetes.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/plugin/kubernetes/kubernetes.go b/plugin/kubernetes/kubernetes.go
--- a/plugin/kubernetes/kubernetes.go	(revision 45b0a11294c59bfd806a57807aaa2a185f761cd5)
+++ b/plugin/kubernetes/kubernetes.go	(date 1657053155625)
@@ -540,6 +540,10 @@
 					continue
 				}

+				if !ep.Ready && !svc.HasAlphaPublishUnreadyAddressesAnnotation {
+					continue
+				}
+
 				for _, eps := range ep.Subsets {
 					for _, addr := range eps.Addresses {

Index: plugin/kubernetes/kubernetes_test.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/plugin/kubernetes/kubernetes_test.go b/plugin/kubernetes/kubernetes_test.go
--- a/plugin/kubernetes/kubernetes_test.go	(revision 45b0a11294c59bfd806a57807aaa2a185f761cd5)
+++ b/plugin/kubernetes/kubernetes_test.go	(date 1657053548158)
@@ -135,6 +135,7 @@
 			Name:      "svc1-slice1",
 			Namespace: "testns",
 			Index:     object.EndpointsKey("svc1", "testns"),
+			Ready:     true,
 		},
 		{
 			Subsets: []object.EndpointSubset{
@@ -150,6 +151,7 @@
 			Name:      "hdls1-slice1",
 			Namespace: "testns",
 			Index:     object.EndpointsKey("hdls1", "testns"),
+			Ready:     true,
 		},
 		{
 			Subsets: []object.EndpointSubset{
@@ -159,6 +161,7 @@
 					},
 				},
 			},
+			Ready: true,
 		},
 	}
 	return eps
@@ -180,6 +183,7 @@
 			Name:      "svc1-slice1",
 			Namespace: "testns",
 			Index:     object.EndpointsKey("svc1", "testns"),
+			Ready:     true,
 		},
 		{
 			Subsets: []object.EndpointSubset{
@@ -195,6 +199,7 @@
 			Name:      "hdls1-slice1",
 			Namespace: "testns",
 			Index:     object.EndpointsKey("hdls1", "testns"),
+			Ready:     true,
 		},
 		{
 			Subsets: []object.EndpointSubset{
@@ -210,6 +215,7 @@
 			Name:      "hdls1-slice2",
 			Namespace: "testns",
 			Index:     object.EndpointsKey("hdls1", "testns"),
+			Ready:     true,
 		},
 		{
 			Subsets: []object.EndpointSubset{
@@ -219,6 +225,7 @@
 					},
 				},
 			},
+			Ready: true,
 		},
 	}
 	return eps
Index: plugin/kubernetes/object/service.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/plugin/kubernetes/object/service.go b/plugin/kubernetes/object/service.go
--- a/plugin/kubernetes/object/service.go	(revision 45b0a11294c59bfd806a57807aaa2a185f761cd5)
+++ b/plugin/kubernetes/object/service.go	(date 1657053244201)
@@ -2,6 +2,7 @@

 import (
 	"fmt"
+	"strconv"

 	api "k8s.io/api/core/v1"
 	meta "k8s.io/apimachinery/pkg/apis/meta/v1"
@@ -20,6 +21,8 @@
 	ExternalName string
 	Ports        []api.ServicePort

+	HasAlphaPublishUnreadyAddressesAnnotation bool
+
 	// ExternalIPs we may want to export.
 	ExternalIPs []string

@@ -46,6 +49,10 @@
 		ExternalIPs: make([]string, len(svc.Status.LoadBalancer.Ingress)+len(svc.Spec.ExternalIPs)),
 	}

+	if v, ok := obj.GetAnnotations()["service.alpha.kubernetes.io/tolerate-unready-endpoints"]; ok {
+		s.HasAlphaPublishUnreadyAddressesAnnotation, _ = strconv.ParseBool(v)
+	}
+
 	if len(svc.Spec.ClusterIPs) > 0 {
 		s.ClusterIPs = make([]string, len(svc.Spec.ClusterIPs))
 		copy(s.ClusterIPs, svc.Spec.ClusterIPs)
@@ -94,7 +101,8 @@
 		ExternalName: s.ExternalName,
 		ClusterIPs:   make([]string, len(s.ClusterIPs)),
 		Ports:        make([]api.ServicePort, len(s.Ports)),
-		ExternalIPs:  make([]string, len(s.ExternalIPs)),
+		HasAlphaPublishUnreadyAddressesAnnotation: s.HasAlphaPublishUnreadyAddressesAnnotation,
+		ExternalIPs: make([]string, len(s.ExternalIPs)),
 	}
 	copy(s1.ClusterIPs, s.ClusterIPs)
 	copy(s1.Ports, s.Ports)
Index: plugin/kubernetes/object/endpoint.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/plugin/kubernetes/object/endpoint.go b/plugin/kubernetes/object/endpoint.go
--- a/plugin/kubernetes/object/endpoint.go	(revision 45b0a11294c59bfd806a57807aaa2a185f761cd5)
+++ b/plugin/kubernetes/object/endpoint.go	(date 1657053075388)
@@ -19,6 +19,7 @@
 	Index     string
 	IndexIP   []string
 	Subsets   []EndpointSubset
+	Ready     bool

 	*Empty
 }
@@ -128,9 +129,7 @@
 	}

 	for _, end := range ends.Endpoints {
-		if !endpointsliceReady(end.Conditions.Ready) {
-			continue
-		}
+		e.Ready = endpointsliceReady(end.Conditions.Ready)
 		for _, a := range end.Addresses {
 			ea := EndpointAddress{IP: a}
 			if end.Hostname != nil {
@@ -179,9 +178,7 @@
 	}

 	for _, end := range ends.Endpoints {
-		if !endpointsliceReady(end.Conditions.Ready) {
-			continue
-		}
+		e.Ready = endpointsliceReady(end.Conditions.Ready)
 		for _, a := range end.Addresses {
 			ea := EndpointAddress{IP: a}
 			if end.Hostname != nil {
Index: plugin/kubernetes/handler_test.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/plugin/kubernetes/handler_test.go b/plugin/kubernetes/handler_test.go
--- a/plugin/kubernetes/handler_test.go	(revision 45b0a11294c59bfd806a57807aaa2a185f761cd5)
+++ b/plugin/kubernetes/handler_test.go	(date 1657053548142)
@@ -684,6 +684,7 @@
 		Name:      "kubedns",
 		Namespace: "kube-system",
 		Index:     object.EndpointsKey("kubedns", "kube-system"),
+		Ready:     true,
 	}},
 	"svc1.testns": {{
 		Subsets: []object.EndpointSubset{
@@ -699,6 +700,7 @@
 		Name:      "svc1-slice1",
 		Namespace: "testns",
 		Index:     object.EndpointsKey("svc1", "testns"),
+		Ready:     true,
 	}},
 	"svcempty.testns": {{
 		Subsets: []object.EndpointSubset{
@@ -712,6 +714,7 @@
 		Name:      "svcempty-slice1",
 		Namespace: "testns",
 		Index:     object.EndpointsKey("svcempty", "testns"),
+		Ready:     true,
 	}},
 	"hdls1.testns": {{
 		Subsets: []object.EndpointSubset{
@@ -732,6 +735,7 @@
 		Name:      "hdls1-slice1",
 		Namespace: "testns",
 		Index:     object.EndpointsKey("hdls1", "testns"),
+		Ready:     true,
 	}},
 	"hdlsprtls.testns": {{
 		Subsets: []object.EndpointSubset{
@@ -745,6 +749,7 @@
 		Name:      "hdlsprtls-slice1",
 		Namespace: "testns",
 		Index:     object.EndpointsKey("hdlsprtls", "testns"),
+		Ready:     true,
 	}},
 }

