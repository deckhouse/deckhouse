---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /src
  to: /bin
  before: setup
  includePaths:
  - 'promtool'
  - 'prometheus'
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /src/consoles
  to: /usr/share/prometheus/consoles
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /src/console_libraries
  to: /usr/share/prometheus/console_libraries
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /src/documentation/examples/prometheus.yml
  to: /etc/prometheus/prometheus.yml
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /empty
  to: /prometheus
  before: setup
- artifact: {{ .ModuleName }}/{{ .ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
docker:
  EXPOSE:
  - "9090"
  VOLUME:
  - "/prometheus"
  WORKDIR: "/prometheus"
  ENTRYPOINT:
  - "/bin/prometheus"
  CMD:
  - "--config.file=/etc/prometheus/prometheus.yml"
  - "--storage.tsdb.path=/prometheus"
  - "--web.console.libraries=/usr/share/prometheus/console_libraries"
  - "--web.console.templates=/usr/share/prometheus/consoles"
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromArtifact: src-artifact
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
  - git clone --depth 1 --branch v0.17.0 {{ .SOURCE_REPO }}/prometheus/promu.git /src/promu
  - git clone --depth 1 --branch v2.45.6 {{ .SOURCE_REPO }}/prometheus/prometheus.git /src/prometheus
  - cd /src/prometheus
  - git apply /patches/*.patch --verbose
  - rm -r documentation/examples/remote_storage
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-promu-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/promu
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - export GOPROXY={{ .GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - cd /src
  - go build -ldflags="-s -w" -o promu ./main.go
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-node-artifact
from: {{ .Images.BASE_NODE_20_ALPINE }}
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/prometheus
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache bash
  install:
  {{- include "node packages proxy" . | nindent 2 }}
  - cd /src/web/ui
  - npm install
  - npm run build
  - cd /src
  - scripts/compress_assets.sh
  - rm -r /src/web/ui/node_modules /root/.npm
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-promu-artifact
  add: /src/promu
  to: /bin/promu
  before: install
- artifact: {{ .ModuleName }}/{{ .ImageName }}-node-artifact
  add: /src
  to: /src
  before: install
shell:
  install:
  - export GOPROXY={{ .GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - cd /src
  - go generate -tags plugins ./plugins
  - /bin/promu build --prefix /src
  - mkdir -p /empty
  - chown 64535:64535 /src/prometheus /src/promtool
  - chmod 0700 /src/prometheus /src/promtool
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-binaries-artifact
fromArtifact: relocate-artifact
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - apt-get install -y curl
  install:
  - |
    /binary_replace.sh -i "\
      /usr/bin/curl \
      /bin/sh \
      /bin/df \
      " -o /relocate
