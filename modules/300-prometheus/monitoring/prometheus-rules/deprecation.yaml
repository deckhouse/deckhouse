- name: d8.prometheus.deprecation
  rules:
    - alert: PrometheusServiceMonitorDeprecated
      expr: |
        d8_prometheus_deprecated_servicemonitor == 1
      labels:
        tier: cluster
        severity_level: "8"
      annotations:
        plk_markup_format: markdown
        plk_protocol_version: "1"
        plk_create_group_if_not_exists__d8_prometheus_deprecations: "PrometheusDeprecations,tier=cluster,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_prometheus_deprecations: "PrometheusDeprecations,tier=cluster,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: Deprecated Prometheus ServiceMonitor detected.
        description: |
          The Kubernetes cluster uses the modern `EndpointSlice` network mechanism, but the ServiceMonitor `{{ $labels.namespace }}/{{ $labels.name }}` still uses relabeling rules based on the old `Endpoints` mechanism (starting with `__meta_kubernetes_endpoints_`).

          Support for the old relabeling rules will be removed in a future Deckhouse release (1.60).
          To avoid issues, update your ServiceMonitor to use `EndpointSlice`-based relabeling.

          Update relabeling rules as follows:

          ```shell
          __meta_kubernetes_endpoints_name -> __meta_kubernetes_endpointslice_name
          __meta_kubernetes_endpoints_label_XXX -> __meta_kubernetes_endpointslice_label_XXX
          __meta_kubernetes_endpoints_labelpresent_XXX -> __meta_kubernetes_endpointslice_labelpresent_XXX
          __meta_kubernetes_endpoints_annotation_XXX -> __meta_kubernetes_endpointslice_annotation_XXX
          __meta_kubernetes_endpoints_annotationpresent_XXX -> __meta_kubernetes_endpointslice_annotationpresent_XXX
          __meta_kubernetes_endpoint_node_name -> __meta_kubernetes_endpointslice_endpoint_topology_kubernetes_io_hostname
          __meta_kubernetes_endpoint_ready -> __meta_kubernetes_endpointslice_endpoint_conditions_ready
          __meta_kubernetes_endpoint_port_name -> __meta_kubernetes_endpointslice_port_name
          __meta_kubernetes_endpoint_port_protocol -> __meta_kubernetes_endpointslice_port_protocol
          __meta_kubernetes_endpoint_address_target_kind -> __meta_kubernetes_endpointslice_address_target_kind
          __meta_kubernetes_endpoint_address_target_name -> __meta_kubernetes_endpointslice_address_target_name
          ```
    - alert: PrometheusScapeConfigDeclarationDeprecated
      expr: count(d8_deprecated_scrape_config) > 0
      labels:
        severity_level: "8"
      annotations:
        plk_markup_format: "markdown"
        plk_protocol_version: "1"
        plk_ignore_labels: "name"
        summary: |-
          AdditionalScrapeConfigs from Secrets will be deprecated soon.
        description: |-
          Defining additional scrape configurations using Secrets will be deprecated in `prometheus-operator` versions later than v0.65.1.
  
          Migrate to using the [ScrapeConfig custom resource](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/proposals/202212-scrape-config.md) instead.

- name: d8.grafana.interval_deprecation
  rules:
    - alert: GrafanaDashboardPanelIntervalDeprecated
      expr: |
        count(d8_grafana_dashboards_deprecated_interval > 0)
      labels:
        tier: cluster
        severity_level: "8"
      annotations:
        plk_markup_format: markdown
        plk_protocol_version: "1"
        plk_create_group_if_not_exists__d8_grafana_deprecations: "GrafanaDeprecations,tier=cluster,kubernetes=~kubernetes"
        plk_grouped_by__d8_grafana_deprecations: "GrafanaDeprecations,tier=cluster,kubernetes=~kubernetes"
        summary: Deprecated Grafana panel intervals detected.
        description: |
          Before upgrading to Grafana 10, update outdated panel expressions that use `$interval_rv`, `interval_sx3`, or `interval_sx4` to the new variable `$__rate_interval`.

          To list all deprecated panel intervals, use the following expression:

          ```promql
          sum by (dashboard, panel, interval) (d8_grafana_dashboards_deprecated_interval) > 0
          ```

          Note that this check runs once per hour, so the alert may take up to an hour to clear after deprecated intervals are removed.

- name: d8.grafana.alert_rule_deprecation
  rules:
    - alert: GrafanaDashboardAlertRulesDeprecated
      expr: |
        count(d8_grafana_dashboards_deprecated_alert_rule > 0)
      labels:
        tier: cluster
        severity_level: "8"
      annotations:
        plk_markup_format: markdown
        plk_protocol_version: "1"
        plk_create_group_if_not_exists__d8_grafana_deprecations: "GrafanaDeprecations,tier=cluster,kubernetes=~kubernetes"
        plk_grouped_by__d8_grafana_deprecations: "GrafanaDeprecations,tier=cluster,kubernetes=~kubernetes"
        summary: Deprecated Grafana alerts detected.
        description: |
          Before upgrading to Grafana 10, migrate outdated alerts from Grafana to an external alertmanager (or `exporter-alertmanager` stack).

          To list all deprecated alert rules, use the following expression:

          ```promql
          sum by (dashboard, panel, alert_rule) (d8_grafana_dashboards_deprecated_alert_rule) > 0
          ```

          Note that this check runs once per hour, so the alert may take up to an hour to clear after deprecated resources are migrated.

- name: d8.grafana.plugin_deprecation
  rules:
    - alert: GrafanaDashboardPluginsDeprecated
      expr: |
        count(d8_grafana_dashboards_deprecated_plugin > 0)
      labels:
        tier: cluster
        severity_level: "8"
      annotations:
        plk_markup_format: markdown
        plk_protocol_version: "1"
        plk_create_group_if_not_exists__d8_grafana_deprecations: "GrafanaDeprecations,tier=cluster,kubernetes=~kubernetes"
        plk_grouped_by__d8_grafana_deprecations: "GrafanaDeprecations,tier=cluster,kubernetes=~kubernetes"
        summary: Deprecated Grafana plugins detected.
        description: |
          Before upgrading to Grafana 10, make sure that the currently installed plugins will work correctly with Grafana 10.

          To list all potentially outdated plugins, use the following expression:

          ```promql
          sum by (dashboard, panel, plugin) (d8_grafana_dashboards_deprecated_plugin) > 0
          ```

          The `flant-statusmap-panel` plugin is deprecated and no longer supported.
          It's recommended that you migrate to the [state timeline plugin](https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/state-timeline/) instead.

          Note that this check runs once per hour, so the alert may take up to an hour to clear after deprecated resources are migrated.
