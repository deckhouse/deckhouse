artifact: distroless-kube-proxy
from: {{ .Images.BASE_ALPINE }}
import:
- add: file-whitelist
  to: /workdir/
  before: install
- add: iptables-wrapper-installer.sh
  to: /workdir/
  before: install
shell:
  install:
    - apk update
    - apk add rsync
    - apk fetch -R -o . iptables ip6tables conntrack-tools
    - mkdir /apk && for apk in *.apk; do tar -xzvf "$apk" -C /apk; done
    - mkdir /filtered-apk && rsync --verbose -av --include-from=file-whitelist --include='*/' --exclude '*' /apk/ /filtered-apk/
    - iptables-wrapper-installer.sh /sbin /iptables-wrapper

{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $patch := $value.patch | toString }}
  {{- $v := semver $version }}
  {{- $image_version := printf "%s.%s" $version $patch | replace "." "-" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $version | replace "." "-" }}
from: distroless-kube-proxy
git:
- add: /modules/021-{{ $.ModuleName }}/images/{{ $.ImageName }}/iptables-wrapper-installer.sh
  to: /iptables-wrapper-installer.sh
import:
- artifact: common/kubernetes-artifact-{{ $image_version }}
  add: /src/_output/bin/kube-proxy
  to: /usr/local/bin/kube-proxy
  before: setup
- image: common/iptables-wrapper
  add: /iptables-wrapper
  to: /iptables-wrapper
  before: setup
docker:
  ENTRYPOINT: ["/usr/bin/kube-proxy"]
{{- end }}
