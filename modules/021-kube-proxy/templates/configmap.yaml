{{- define "ConfigMapData" }}
config.conf: |
  apiVersion: kubeproxy.config.k8s.io/v1alpha1
  kind: KubeProxyConfiguration
  clusterCIDR: {{ .Values.global.discovery.podSubnet | quote }}
  mode: "iptables"
  {{- if semverCompare ">= 1.21" .Values.global.discovery.kubernetesVersion }}
  featureGates:
    EndpointSliceTerminatingCondition: true
    ProxyTerminatingEndpoints: true
    DaemonSetUpdateSurge: true
    TopologyAwareHints: true
  {{- end }}
  nodePortAddresses: ["__node_address__"]
  clientConnection:
    acceptContentTypes: ""
    burst: 10
    contentType: application/vnd.kubernetes.protobuf
    kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
    qps: 5
  conntrack:
    maxPerCore: 0

kubeconfig.conf: |
  apiVersion: v1
  kind: Config
  clusters:
  - cluster:
      certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      server: https://{{ .Values.kubeProxy.internal.clusterMasterAddresses | required "clusterMasterAddresses not discovered" | first }}
    name: default
  contexts:
  - context:
      cluster: default
      namespace: default
      user: default
    name: default
  current-context: default
  users:
  - name: default
    user:
      tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
{{- end }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: d8-kube-proxy
  namespace: kube-system
  {{- include "helm_lib_module_labels" (list . (dict "k8s-app" "kube-proxy")) | nindent 2 }}
data:
  {{- include "ConfigMapData" . | nindent 2}}
