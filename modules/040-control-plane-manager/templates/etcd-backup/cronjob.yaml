{{- define "etcd_backup_resources" }}
cpu: 25m
memory: 40Mi
{{- end }}
{{- if .Values.global.clusterIsBootstrapped }}
  {{- if hasKey .Values.controlPlaneManager.internal "mastersNode" }}
    {{- range $node := .Values.controlPlaneManager.internal.mastersNode }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: d8-etcd-backup-{{ $node | sha256sum | trunc 33 }}
  namespace: kube-system
  {{- include "helm_lib_module_labels" (list $ (dict "app" "d8-etcd-backup")) | nindent 2 }}
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          {{- include "helm_lib_module_pod_security_context_run_as_user_root" $ | nindent 10 }}
          {{- include "helm_lib_priority_class" (tuple $ "cluster-low") | nindent 10 }}
          {{- include "helm_lib_tolerations" (tuple $ "any-node") | nindent 10 }}
          nodeSelector:
            kubernetes.io/hostname: {{ $node }}
          imagePullSecrets:
          - name: deckhouse-registry
          restartPolicy: Never
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - name: backup
            {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" $ | nindent 12 }}
            image: {{ include "helm_lib_module_image" (list $ "etcdBackup") }}
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - --
            - set -x; etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key snapshot save /tmp/etcd-backup.snapshot && [ $(df /var/lib/etcd/ | tail -1 | awk '{print $4}') -ge $(du -k /tmp/etcd-backup.snapshot | awk '{print $1}') ] && cp /tmp/etcd-backup.snapshot /var/lib/etcd/etcd-backup.snapshot || exit 1
            resources:
              requests:
              {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 50 | nindent 16 }}
              {{- if not ( $.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
                {{- include "control_plane_manager_resources" $ | nindent 16 }}
              {{- end }}
            volumeMounts:
            - mountPath: /etc/kubernetes/pki/etcd
              name: etcd-certs
              readOnly: true
            - mountPath: /var/lib/etcd
              name: etcd-data
            - mountPath: /tmp
              name: tmp
          volumes:
          - hostPath:
              path: /etc/kubernetes/pki/etcd
              type: DirectoryOrCreate
            name: etcd-certs
          - hostPath:
              path: /var/lib/etcd
              type: DirectoryOrCreate
            name: etcd-data
          - name: tmp
            emptyDir: {}
    {{- end }}
  {{- end }}
{{- end }}
