{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $patch := $value.patch | toString }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $version | replace "." "-" }}
from: {{ $.Images.BASE_ALPINE }}
import:
- image: common/pause
  add: /pause
  to: /pause
  before: setup
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $version | replace "." "-" }}
  add: /usr/local/bin
  to: /usr/local/bin
  includePaths:
  - kubeadm-*
  before: setup
- artifact: {{ $.ModuleName }}/etcd-artifact
  add: /usr/local/bin/etcdctl
  before: setup
- artifact: {{ $.ModuleName }}/controller-artifact
  add: /controller
  before: setup
docker:
  ENTRYPOINT: ["/controller"]
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $version | replace "." "-" }}
    {{- if semverCompare ">=1.25" $version }}
from: {{ $.Images.BASE_GOLANG_19_BUSTER }}
    {{- else if semverCompare ">=1.24" $version }}
from: {{ $.Images.BASE_GOLANG_18_BUSTER }}
    {{- else if semverCompare ">=1.23" $version }}
from: {{ $.Images.BASE_GOLANG_17_BUSTER }}
    {{- else }}
from: {{ $.Images.BASE_GOLANG_16_BUSTER }}
    {{- end }}
git:
- add: /modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
      - '**/*'
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apt update
  - apt install rsync patch -y
  install:
  - wget https://github.com/kubernetes/kubernetes/archive/v{{ printf "%s.%s" $version $patch }}.tar.gz -O - | tar -xz -C /
  - cd /kubernetes-{{ printf "%s.%s" $version $patch }}
  - for patchfile in /patches/{{ $version }}/*.patch ; do patch -p1 < ${patchfile}; done
  - make all WHAT=cmd/kubeadm
  - mv _output/bin/kubeadm /usr/local/bin/kubeadm-{{ $version }}
{{- end }}
---
artifact: {{ $.ModuleName }}/controller-artifact
from: {{ $.Images.BASE_GOLANG_19_ALPINE }}
git:
  - add: /modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/controller
    to: /
    stageDependencies:
      install:
        - '**/*'
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  install:
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o controller controller.go node.go util.go pki.go
    - chmod +x /controller
