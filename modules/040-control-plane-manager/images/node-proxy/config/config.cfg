global
    maxconn                 4000
    log                     127.0.0.1 local0
    stats socket /socket/haproxy.socket mode 660 level admin expose-fd listeners
    stats timeout 30s
    ca-base /etc/kubernetes/node-proxy

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  redispatch
    retries                 5
    timeout http-request    5m
    timeout queue           5m
    timeout connect         30s
    timeout client          5m
    timeout server          15m
    timeout http-keep-alive 30s
    timeout check           30s
    maxconn                 4000


crt-store k8s
  crt-base /etc/kubernetes/node-proxy/
  key-base /etc/kubernetes/node-proxy/
  load crt "ca.crt" 
  load crt "haproxy.pem"

# TODO DEL!
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 1s
    stats show-node

frontend healthz
    bind 127.0.0.1:3992
    mode http
    monitor-uri /healthz

frontend l7_frontend
    bind 127.0.0.1:3993
    mode http

frontend kube_api_frontend
    bind 127.0.0.1:3994
    mode tcp
    option tcplog
    acl no_kube_api nbsrv(kube_api_backend) eq 0
    use_backend kube_api_backend_backup if no_kube_api
    default_backend kube_api_backend

frontend rpp_frontend
    bind 127.0.0.1:3995
    mode tcp
    option tcplog
    acl no_rpp_backend nbsrv(rpp_backend) eq 0
    use_backend rpp_backend_backup if no_rpp_backend
    default_backend rpp_backend

# dynamic config with active helath-check
backend kube_api_backend
    mode tcp
    balance leastconn
    option httpchk
    option log-health-checks
    http-check send meth GET uri /healthz ver HTTP/1.1 hdr Host kube-apiserver
    http-check expect status 200
    default-server ca-file ca.crt

# dynamic config with active helath-check
backend rpp_backend
    mode tcp
    balance leastconn
    option httpchk
    option log-health-checks
    http-check send meth GET uri /healthz ver HTTP/1.1 hdr Host rpp
    http-check expect status 200
    default-server ca-file ca.crt

# backup static config
backend kube_api_backend_backup
    mode tcp
    balance leastconn
    include /etc/kubernetes/node-proxy/kube_api_backend.cfg

# backup static config
backend rpp_backend_backup
    mode tcp
    balance leastconn
    include /etc/kubernetes/node-proxy/rpp_backend_backend.cfg
