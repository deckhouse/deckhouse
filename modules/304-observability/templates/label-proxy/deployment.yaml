{{- define "label_proxy_resources" }}
cpu: 25m
memory: 128Mi
{{- end }}

{{- if ($.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: label-proxy
  namespace: {{ .Values.observability.internal.namespace }}
  {{- include "helm_lib_module_labels" (list $ (dict "app" "label-proxy")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: label-proxy
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: label-proxy
      minAllowed:
        {{- include "label_proxy_resources" $ | nindent 8 }}
      maxAllowed:
        cpu: 100m
        memory: 512Mi
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: label-proxy
  namespace: {{ .Values.observability.internal.namespace }}
  {{- include "helm_lib_module_labels" (list $ (dict "app" "label-proxy")) | nindent 2 }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: label-proxy
  template:
    metadata:
      annotations:
        checksum/tls-secret: {{ include (print $.Template.BasePath "/label-proxy/secret.yaml") $ | sha256sum }}
      labels:
        app: label-proxy
    spec:
      {{- include "helm_lib_node_selector" (tuple $ "monitoring") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple $ "monitoring") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple $ "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" $ | nindent 6 }}
      serviceAccountName: label-proxy
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: label-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" $ | nindent 8 }}
        image: {{ include "helm_lib_module_image" (list $ "labelProxy") }}
        env:
        - name: PORT
          value: "8443"
        - name: BACKEND_ADDRESS
          value: https://aggregating-proxy.d8-monitoring.svc
        - name: BACKEND_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: prometheus-token
              key: token
              optional: false
        - name: TLS_CERT_FILE
          value: /cert/tls.crt
        - name: TLS_KEY_FILE
          value: /cert/tls.key
        - name: TLS_ENABLED
          value: "true"
        ports:
        - name: https
          containerPort: 8443
        {{- if not ( $.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
        resources:
          requests:
            {{- include "label_proxy_resources" . | nindent 12 }}
        {{- end }}
        volumeMounts:
        - name: label-proxy-tls
          mountPath: /cert
          readOnly: true
      volumes:
      - name: label-proxy-tls
        secret:
          secretName: label-proxy-tls
