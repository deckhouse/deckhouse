
{{- $iptables_version := "1.8.9" }}
{{- $iptables_image_version := $iptables_version | replace "." "-" }}
---
# #####################################################################
# Final image of cilium-agent (used in helm-templates)
# Based on https://github.com/cilium/cilium/blob/v1.17.4/images/runtime/Dockerfile
# and https://github.com/cilium/cilium/blob/v1.17.4/images/runtime/install-runtime-deps.sh
# and https://github.com/cilium/cilium/blob/v1.17.4/images/cilium/Dockerfile (release stage)
---
#####################################################################
{{ $selfBuiltBinaries := "" }}
# from llvm-artifact
# {{ $selfBuiltBinaries := cat $selfBuiltBinaries "/usr/local/bin/clang /usr/local/bin/llc" }}
# from cilium-envoy-artifact
# {{ $selfBuiltBinaries := cat $selfBuiltBinaries "/usr/bin/cilium-envoy /usr/lib/libcilium.so" }}
# from hubble-artifact
# {{ $selfBuiltBinaries := cat $selfBuiltBinaries "/usr/bin/hubble /etc/bash_completion.d/hubble" }}
# from cilium-artifact
# {{ $selfBuiltBinaries := cat $selfBuiltBinaries "/cni-uninstall.sh /init-container.sh /install-plugin.sh" }}
# {{ $selfBuiltBinaries := cat $selfBuiltBinaries "/LICENSE.all /etc/bash_completion.d/cilium-dbg" }}
# {{ $selfBuiltBinaries := cat $selfBuiltBinaries "/opt/cni/bin/cilium-cni /usr/bin/cilium*" }}
# for check and cleaning unnecessary iptables
{{ $selfBuiltBinaries := cat $selfBuiltBinaries "/check-n-cleaning-iptables.sh" }}
# iptables and dependencies
{{ $selfBuiltBinaries := cat $selfBuiltBinaries "/sbin/xtables*" }}
{{ $selfBuiltBinaries := cat $selfBuiltBinaries "/usr/sbin/iptables-wrapper" }}
# #####################################################################
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}
  to: /src
  includePaths:
  - binary_replace.sh
  - check-n-cleaning-iptables.sh
  stageDependencies:
    install:
    - '**/*.sh'
shell:
  install:
  - cd /src
---
image: {{ .ModuleName }}/agent-binaries-artifact
fromImage: {{ .ModuleName }}/base-cilium-dev
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/check-n-cleaning-iptables.sh
  to: /check-n-cleaning-iptables.sh
  before: install
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/binary_replace.sh
  to: /binary_replace.sh
  before: install
- image: registrypackages/iptables-artifact-{{ $iptables_image_version }}
  add: /
  to: /sbin
  includePaths:
  - xtables-legacy-multi
  - xtables-nft-multi
  before: install
- image: common/iptables-wrapper
  add: /iptables-wrapper
  to: /usr/sbin/iptables-wrapper
  before: install
- image: common/distroless
  add: /etc/group
  to: /from_common_distroless/group
  before: setup
shell:
  install:
  - chown root:root /usr/sbin/iptables-wrapper
  - chmod 755 /usr/sbin/iptables-wrapper
  #
  - chmod +x /check-n-cleaning-iptables.sh
  beforeSetup:
  # common relocate
  - chmod +x /binary_replace.sh
  - mkdir -p /relocate
  - ln -snf /usr/share/zoneinfo/Etc/UTC /etc/localtime
  - /binary_replace.sh -i "/etc/localtime" -o /relocate
  # copy self built binaries and deps
  - /binary_replace.sh -i "{{ $selfBuiltBinaries }}" -o /relocate
  # additional relocate for iptables
  - |
    for cmd in iptables iptables-save iptables-restore ip6tables ip6tables-save ip6tables-restore; do
      rm -f "/relocate/sbin/${cmd}"
      ln -f -s /usr/sbin/iptables-wrapper "/relocate/sbin/${cmd}"
    done
    # broken symlinks are not imported from the artifact
    touch /usr/sbin/iptables-wrapper
  - |
    for mode in legacy nft; do
      for basecmd in iptables ip6tables; do
        for cmd in ${basecmd}-${mode} ${basecmd}-${mode}-save ${basecmd}-${mode}-restore; do
          ln -sf /sbin/xtables-${mode}-multi "/relocate/sbin/${cmd}"
        done
      done
    done
  - |
    for basecmd in ebtables arptables; do
      for cmd in ${basecmd}-nft ${basecmd}-nft-save ${basecmd}-nft-restore; do
        ln -sf /sbin/xtables-nft-multi "/relocate/sbin/${cmd}"
      done
    done
  # additional relocate from cilium
  - mkdir -p /relocate/var/lib/cilium
  - cp -a /var/lib/cilium/bpf /relocate/var/lib/cilium
  - echo ". /etc/bashrc.d/bash_completion.sh" >> /root/.bashrc
  - mkdir -p /relocate/root && cp -a /root/.bashrc /relocate/root
  # additional relocate for fix locale
  - mkdir -p /relocate/usr/lib/locale
  - cp -a /usr/lib/locale/C.utf8 /relocate/usr/lib/locale
  setup:
  # prepare final fs
  - mkdir -p /relocate/usr/sbin
  - if [ -d "/relocate/sbin" ]; then cp -a /relocate/sbin/* /relocate/usr/sbin/ && rm -rf /relocate/sbin; fi
  - ln -f -s usr/sbin "/relocate/sbin"
  - mkdir -p /relocate/usr/bin
  - if [ -d "/relocate/bin" ]; then cp -a /relocate/bin/* /relocate/usr/bin/ && rm -rf /relocate/bin; fi
  - ln -f -s usr/bin "/relocate/bin"
  - mkdir -p /relocate/usr/lib
  - if [ -d "/relocate/lib" ]; then cp -a /relocate/lib/* /relocate/usr/lib/ && rm -rf /relocate/lib; fi
  - ln -f -s usr/lib "/relocate/lib"
  - mkdir -p /relocate/usr/lib32
  - if [ -d "/relocate/lib32" ]; then cp -a /relocate/lib32/* /relocate/usr/lib32/ && rm -rf /relocate/lib32; fi
  - ln -f -s usr/lib32 "/relocate/lib32"
  - mkdir -p /relocate/usr/lib64
  - if [ -d "/relocate/lib64" ]; then cp -a /relocate/lib64/* /relocate/usr/lib64/ && rm -rf /relocate/lib64; fi
  - ln -f -s usr/lib64 "/relocate/lib64"
  - mkdir -p /relocate/usr/libx32
  - if [ -d "/relocate/libx32" ]; then cp -a /relocate/libx32/* /relocate/usr/libx32/ && rm -rf /relocate/libx32; fi
  - ln -f -s usr/libx32 "/relocate/libx32"
  - mkdir -p /relocate/var /relocate/run /relocate/run/lock
  - ln -f -s /run "/relocate/var/run"
  - ln -f -s /run/lock "/relocate/var/lock"
  #
  - mkdir -p /relocate/home/cilium
  - mkdir -p /relocate/etc
  - cp -a /from_common_distroless/group /relocate/etc/group
  - echo "cilium:x:1000:" >> /relocate/etc/group
---
# #####################################################################
# New Main Agent Image (Distroless)
---
image: {{ .ModuleName }}/agent-distroless
fromImage: common/distroless
import:
- image: {{ .ModuleName }}/agent-binaries-artifact
  add: /relocate
  to: /
  before: install
- image: tools/coreutils-v9.7
  before: setup
  add: /usr/bin/
  to: /usr/bin/
  includePaths:
  - env
  - ls
  - sleep
  - basename
  - cat
  - cp
  - coreutils
  - cut
  - echo
  - groups
  - head
  - ln
  - mkdir
  - mv
  - od
  - printf
  - rm
  - stat
  - tail
  - timeout
  - wc
- image: tools/coreutils-v9.7
  before: setup
  add: /usr/bin/true
  to: /usr/bin/true
- image: registrypackages/d8-curl-artifact-8-9-1
  before: setup
  add: /d8-curl
  to: /usr/bin/curl
- image: tools/bash-v5.2.37
  before: setup
  add: /usr/bin/
  to: /usr/bin/
  includePaths:
  - bash
  - sh
- image: tools/findutils-v4.10.0
  before: setup
  add: /usr/bin/find
- image: tools/gawk-v5.3.2
  before: setup
  add: /usr/bin/
  to: /usr/bin/
  includePaths:
  - awk
  - gawk
- image: tools/grep-grep-3.11
  before: setup
  add: /usr/bin/grep
- image: tools/sed-v4.9
  before: setup
  add: /usr/bin/sed
- image: tools/tar-v1.35
  before: setup
  add: /usr/bin/tar
- image: tools/util-linux-v2.41
  before: setup
  add: /usr/bin/nsenter
- image: tools/util-linux-v2.41
  before: setup
  add: /bin/mount
  to: /usr/bin/mount
- image: tools/ipset-v7.22
  before: setup
  add: /usr/sbin/ipset
  to: /usr/sbin/ipset
- image: tools/kmod-v33
  before: setup
  add: /bin/
  to: /usr/sbin/
  includePaths:
  - kmod
  - lsmod
  - depmod
  - insmod
  - lsmod
  - modinfo
  - modprobe
  - rmmod
- image: tools/iproute2-v6.12.0
  before: setup
  add: /sbin/
  to: /usr/sbin/
  includePaths:
  - dcb
  - devlink
  - ip
  - rdma
  - rtmon
  - tc
  - vdpa
  - bridge
  - genl
  - lnstat
  - nstat
  - rtacct
  - ss
  - tipc
  - ctstat
  - rtstat
- image: tools/bash-completion-2.16.0
  before: setup
  add: /usr/share/bash-completion
  to: /usr/share/bash-completion
- image: tools/bash-completion-2.16.0
  before: setup
  add: /etc/profile.d/bash_completion.sh
  to: /etc/bashrc.d/bash_completion.sh
- image: libs/glibc-v2.41
  add: /lib64/libm.so.6
  to: /lib64/libm.so.6
  before: setup
- image: libs/glibc-v2.41
  add: /lib64/libc.so.6
  to: /lib64/libc.so.6
  before: setup
- image: libs/glibc-v2.41
  add: /lib64/ld-linux-x86-64.so.2
  to: /lib64/ld-linux-x86-64.so.2
  before: setup
- image: tools/elfutils-elfutils-0.193
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libelf.a
  - libelf.so
  - libelf.so.1
  - libelf-0.193.so
- image: common/pause
  add: /pause
  to: /pause
  before: setup
- image: tools/jq
  add: /usr/bin/jq
  to: /usr/bin/jq
  before: setup
- image: {{ .ModuleName }}/bpftool-artifact
  add: /usr/local/bin/bpftool
  to: /usr/local/bin/bpftool
  before: setup
- image: {{ .ModuleName }}/gops-artifact
  add: /out/linux/amd64/bin/gops
  to: /bin/gops
  before: setup
- image: {{ .ModuleName }}/cni-plugins-artifact
  add: /out/linux/amd64/bin/loopback
  to: /cni/loopback
  before: setup
- image: {{ .ModuleName }}/llvm-artifact
  add: /usr/local/bin/
  to: /usr/local/bin
  before: setup
  includePaths:
  - clang
  - llc
- image: {{ .ModuleName }}/cilium-envoy-artifact
  add: /tmp/install/usr
  to: /usr
  before: setup
  includePaths:
  - bin/cilium-envoy
  - bin/cilium-envoy-starter
  - lib/libcilium.so
- image: {{ .ModuleName }}/cilium-artifact
  add: /tmp/install
  to: /
  before: install
  includePaths:
  - cni-uninstall.sh
  - init-container.sh
  - install-plugin.sh
  - LICENSE.all
  - etc/bash_completion.d/cilium-dbg
  - opt/cni/bin/cilium-cni
  - usr/bin/cilium*
  - var/lib/cilium/bpf
  - usr/bin/hubble
  - etc/bash_completion.d/hubble
- image: libs/zlib-v1.3.1
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libz.a
  - libz.so
  - libz.so.1
  - libz.so.1.3.1
- image: libs/libcap-v1.2.69
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libcap.a
  - libcap.so
  - libcap.so.2
  - libcap.so.2.69
- image: libs/zstd-v1.5.7
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libzstd.a
  - libzstd.so
  - libzstd.so.1
  - libzstd.so.1.5.6
- image: libs/libxml2-v2.13.8
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libxml2.a
  - libxml2.la
  - libxml2.so
  - libxml2.so.2
  - libxml2.so.2.13.4
  - libxml2.so.2.13.8
- image: libs/libffi-v3.4.8
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libffi.a
  - libffi.la
  - libffi.so
  - libffi.so.8
  - libffi.so.8.1.4
- image: libs/xz-v5.8.1
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libc.so
  - liblzma.a
  - liblzma.la
  - liblzma.so
  - liblzma.so.5
  - liblzma.so.5.6.3
  - liblzma.so.5.8.1
- image: libs/libedit-v20250104.3.1
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libedit.a
  - libedit.la
  - libedit.so
  - libedit.so.0
  - libedit.so.0.0.75
  - libedit.so.3
- image: libs/ncurses-v6.5
  add: /usr/lib
  to: /lib64
  before: setup
  includePaths:
  - libcurses.a
  - libcurses.so
  - libform.a
  - libform.so
  - libformw.a
  - libformw_g.a
  - libformw.so
  - libformw.so.6
  - libformw.so.6.5
  - libmenu.a
  - libmenu.so
  - libmenuw.a
  - libmenuw_g.a
  - libmenuw.so
  - libmenuw.so.6
  - libmenuw.so.6.5
  - libncurses++.a
  - libncurses.a
  - libncurses++.so
  - libncurses.so
  - libncurses++w.a
  - libncursesw.a
  - libncurses++w_g.a
  - libncursesw_g.a
  - libncurses++w.so
  - libncursesw.so
  - libncurses++w.so.6
  - libncursesw.so.6
  - libncurses++w.so.6.5
  - libncursesw.so.6.5
  - libpanel.a
  - libpanel.so
  - libpanelw.a
  - libpanelw_g.a
  - libpanelw.so
  - libpanelw.so.6
  - libpanelw.so.6.5
  - libtic.a
  - libtic.so
  - libtinfo.a
  - libtinfo.so
  - libtinfo.so.6
- image: {{ .ModuleName }}/llvm-artifact
  add: /lib64/libLLVM.so.19.1
  to: /lib64/libLLVM.so.19.1
  before: setup
- image: {{ .ModuleName }}/llvm-artifact
  add: /usr/lib/llvm-19.1/lib64/libLLVM.so.19.1
  to: /usr/lib/llvm-19.1/lib64/libLLVM.so.19.1
  before: setup
- image: tools/gcc-12.1.0
  add: /usr/lib64
  to: /lib64
  before: setup
  includePaths:
  - libstdc++.so.6
  - libstdc++.so.6.0.30
  - libgcc_s.so.1
- image: libs/glibc-v2.41
  add: /lib64/libc.musl-x86_64.so.1
  to: /lib64/libc.musl-x86_64.so.1
  before: setup
- image: libs/xz-v5.8.1
  add: /usr/lib/libc.so
  to: /lib/x86_64-linux-gnu/libc.so
  before: setup
git:
{{- include "image mount points" . }}
imageSpec:
  config:
    env:
      INITSYSTEM: "SYSTEMD"
      LD_LIBRARY_PATH: "/lib:/usr/lib"
      HUBBLE_SERVER: "unix:///var/run/cilium/hubble.sock"
      HUBBLE_COMPAT: "legacy-json-output"
      LANG: "C.UTF-8"
      LANGUAGE: "C.UTF-8"
      LC_ALL: "C.UTF-8"
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    workingDir: "/home/cilium"
    cmd: ["/usr/bin/cilium-dbg"]
