From 16cd27cf699cba88dafdab7ab46ab16e93c289a0 Mon Sep 17 00:00:00 2001
From: Dmitriy Andreychenko <dmitriy.andreychenko@flant.com>
Date: Mon, 28 Jul 2025 18:59:41 +0300
Subject: [PATCH] added kernel verifier stats logging

Signed-off-by: Dmitriy Andreychenko <dmitriy.andreychenko@flant.com>
---
 vendor/github.com/cilium/ebpf/prog.go | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

diff --git a/vendor/github.com/cilium/ebpf/prog.go b/vendor/github.com/cilium/ebpf/prog.go
index 4f3ce43bfa..f4697fc7b6 100644
--- a/vendor/github.com/cilium/ebpf/prog.go
+++ b/vendor/github.com/cilium/ebpf/prog.go
@@ -12,6 +12,9 @@ import (
 	"time"
 	"unsafe"
 
+	"github.com/cilium/cilium/pkg/logging"
+	"github.com/cilium/cilium/pkg/logging/logfields"
+	"github.com/cilium/coverbee/pkg/verifierlog"
 	"github.com/cilium/ebpf/asm"
 	"github.com/cilium/ebpf/btf"
 	"github.com/cilium/ebpf/internal"
@@ -20,8 +23,11 @@ import (
 	"github.com/cilium/ebpf/internal/sys"
 	"github.com/cilium/ebpf/internal/sysenc"
 	"github.com/cilium/ebpf/internal/unix"
+	"github.com/sirupsen/logrus"
 )
 
+var log = logging.DefaultLogger.WithField(logfields.LogSubsys, "ebpf-kernel-verifier")
+
 // ErrNotSupported is returned whenever the kernel doesn't support a feature.
 var ErrNotSupported = internal.ErrNotSupported
 
@@ -413,20 +419,34 @@ func newProgramWithOptions(spec *ProgramSpec, opts ProgramOptions) (*Program, er
 	// so that there is a chance of loading the program in a single shot.
 	logSize := internal.Between(opts.LogSizeStart, minVerifierLogSize, maxVerifierLogSize)
 	var logBuf []byte
+	logBuf = make([]byte, logSize)
+	attr.LogSize = uint32(len(logBuf))
+	attr.LogBuf = sys.NewSlicePointer(logBuf)
+
+	attr.LogLevel = LogLevelStats
 	if !opts.LogDisabled && opts.LogLevel != 0 {
-		logBuf = make([]byte, logSize)
 		attr.LogLevel = opts.LogLevel
-		attr.LogSize = uint32(len(logBuf))
-		attr.LogBuf = sys.NewSlicePointer(logBuf)
 	}
 
 	for {
 		var fd *sys.FD
 		fd, err = sys.ProgLoad(attr)
 		if err == nil {
+			log.WithFields(logrus.Fields{
+				"progName": spec.Name,
+				"insnCnt":  attr.InsnCnt,
+			}).Debug("BPF program details")
+			for _, line := range verifierlog.ParseVerifierLog(unix.ByteSliceToString(logBuf)) {
+				log.Debug("Kernel verifier stat: ", line)
+			}
 			return &Program{unix.ByteSliceToString(logBuf), fd, spec.Name, "", spec.Type}, nil
 		}
 
+		// restore previous config
+		if opts.LogLevel == 0 {
+			attr.LogLevel = 0
+		}
+
 		if opts.LogDisabled {
 			break
 		}
-- 
2.34.1

