From df33fdf3f8066069601a3a3ed24d38cfe87670c1 Mon Sep 17 00:00:00 2001
From: Dmitriy Andreychenko <dmitriy.andreychenko@flant.com>
Date: Fri, 8 Aug 2025 17:14:53 +0300
Subject: [PATCH] kernel verifier stat

Signed-off-by: Dmitriy Andreychenko <dmitriy.andreychenko@flant.com>
---
 pkg/bpf/collection.go | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/pkg/bpf/collection.go b/pkg/bpf/collection.go
index 26ab24a523..a1612476b4 100644
--- a/pkg/bpf/collection.go
+++ b/pkg/bpf/collection.go
@@ -10,8 +10,11 @@ import (
 	"os"
 	"strings"
 
+	"github.com/cilium/coverbee/pkg/verifierlog"
+
 	"github.com/cilium/ebpf"
 	"github.com/cilium/ebpf/asm"
+	"github.com/sirupsen/logrus"
 
 	"github.com/cilium/cilium/pkg/maps/callsmap"
 )
@@ -309,9 +312,24 @@ func LoadCollection(spec *ebpf.CollectionSpec, opts *CollectionOptions) (*ebpf.C
 	// Collection. ebpf-go will reject maps with pins it doesn't recognize.
 	toReplace := consumePinReplace(spec)
 
+	if !opts.CollectionOptions.Programs.LogDisabled && opts.CollectionOptions.Programs.LogLevel == 0 {
+		opts.CollectionOptions.Programs.LogLevel = ebpf.LogLevelStats
+	}
+
 	// Attempt to load the Collection.
 	coll, err := ebpf.NewCollectionWithOptions(spec, opts.CollectionOptions)
 
+	if err == nil {
+		for _, prog := range coll.Programs {
+			log.WithFields(logrus.Fields{
+				"progInfo": prog.String(),
+			}).Info("BPF program details")
+			for _, line := range verifierlog.ParseVerifierLog(prog.VerifierLog) {
+				log.Info("Kernel verifier stat: ", line)
+			}
+		}
+	}
+
 	// Collect key names of maps that are not compatible with their pinned
 	// counterparts and remove their pinning flags.
 	if errors.Is(err, ebpf.ErrMapIncompatible) {
-- 
2.34.1

