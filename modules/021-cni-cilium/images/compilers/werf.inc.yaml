# #####################################################################
# Compilers artifact (based on Ubuntu)
# Original IMAGE_TAG from builds of BPFTOOL and LLVM is 5569a29cea6b3ad50aeb03102aaf3dc03841197c
# Corresponding commit 063fa0d879d9560b85b6134c48ece08e672fa057 (https://github.com/cilium/image-tools/tree/063fa0d879d9560b85b6134c48ece08e672fa057)
# Based on https://github.com/cilium/image-tools/blob/063fa0d879d9560b85b6134c48ece08e672fa057/images/compilers/Dockerfile
# and https://github.com/cilium/image-tools/blob/063fa0d879d9560b85b6134c48ece08e672fa057/images/compilers/install-deps.sh
# and https://github.com/cilium/image-tools/blob/063fa0d879d9560b85b6134c48ece08e672fa057/images/compilers/install-bazel.sh
# #####################################################################
---
image: {{ $.ModuleName }}/compilers-artifact
from: {{ $.Images.BASE_UBUNTU }}
shell:
  beforeInstall:
  - export DEBIAN_FRONTEND=noninteractive
  - |
    cat > /etc/apt/sources.list << EOF
    deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse
    deb [arch=amd64] http://security.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse
    deb [arch=amd64] http://security.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
    deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse
    EOF
  - apt-get update
  - ln -fs /usr/share/zoneinfo/UTC /etc/localtime
  - |
    apt-get install -y --no-install-recommends \
    automake \
    binutils \
    bison \
    build-essential \
    ca-certificates \
    cmake \
    curl \
    flex \
    g++ \
    gcc-9 \
    git \
    libelf-dev \
    libmnl-dev \
    libtool \
    make \
    ninja-build \
    pkg-config \
    python2 \
    python3 \
    python3-pip \
    unzip
  - update-alternatives --install /usr/bin/python python /usr/bin/python2 1
  - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 2
  install:
  - bazel_versions=("3.7.0" "3.7.1" "3.7.2")
  # install bazel wrapper script in the path, it automatically recognises `.bazelversion` and `USE_BAZEL_VERSIONS`, if neither are set it picks latest
  - curl --fail --show-error --silent --location https://raw.github.com/bazelbuild/bazel/3.7.0/scripts/packages/bazel.sh --output /usr/local/bin/bazel
  - chmod +x /usr/local/bin/bazel
  - |
    for bazel_version in "${bazel_versions[@]}" ; do
      # instead of using installer script, download binaries directly, as installer script doesn't append version suffix,
      # so for multiple versions to be usable files will need to moved around, which would be more tedious
      long_binary_name="bazel-${bazel_version}-linux-x86_64"
      curl --fail --show-error --silent --location "https://releases.bazel.build/${bazel_version}/release/${long_binary_name}" --output "/usr/local/bin/${long_binary_name}"
      chmod +x "/usr/local/bin/${long_binary_name}"
      USE_BAZEL_VERSION="${bazel_version}" bazel version # to extract all binaries properly
    done
