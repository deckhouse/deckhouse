{{- $ciliumVersion := "1.14.5" }}
{{- $hubbleVersion := "v0.12.3" }}
{{- $protocVersion := "22.3" }}
{{- $gopsVersion := "v0.3.28" }}
{{- $cniVersion := "1.4.0" }}
# Source repo  settings. Delete after clone repo to fox
{{- $_ := set . "SOURCE_REPO" "https://github.com" }}
---
# #####################################################################
# Artifact with repo cilium/cilium
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src
from: {{ $.Images.BASE_ALPINE }}
shell:
  beforeInstall:
  - apk add --no-cache git
  install:
  - mkdir -p /go/src/github.com/cilium/cilium
  - git clone --depth 1 --branch v{{ $ciliumVersion }} {{ $.SOURCE_REPO }}/cilium/cilium.git /go/src/github.com/cilium/cilium
---
# #####################################################################
# Base artifacts
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-golang-artifact
from: {{ $.Images.BASE_GOLANG_20_BULLSEYE }}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-cert-artifact
from: {{ $.Images.BASE_ALPINE }}
shell:
  beforeInstall:
    - apk add --no-cache ca-certificates
---
# https://github.com/cilium/cilium/blob/v1.14.5/images/runtime/Dockerfile#L8-L10
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-llvm-artifact
from: quay.io/cilium/cilium-llvm:a8c542efc076b62ba683e7699c0013adb6955f0f@sha256:38e8941107bd19eb30bdde6e478760a22325f38d1f2771dfd1b9af81d74235e7
---
# #####################################################################
# Build llvm binaries
# Based on
---
---
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-bpftool-artifact
from: quay.io/cilium/cilium-bpftool:d3093f6aeefef8270306011109be623a7e80ad1b@sha256:2c28c64195dee20ab596d70a59a4597a11058333c6b35a99da32c339dcd7df56
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-iptables-artifact
from: quay.io/cilium/iptables:67f517af50e18f64cd12625021f1c39246bb4f92@sha256:d075f03e89aacf51908346ec8ed5d251b8d3ad528ce30a710fcd074cdf91f11d
---
# https://github.com/cilium/cilium/blob/v1.14.5/images/cilium/Dockerfile#L9
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-envoy-artifact
from: quay.io/cilium/cilium-envoy:v1.25.9-e198a2824d309024cb91fb6a984445e73033291d@sha256:52541e1726041b050c5d475b3c527ca4b8da487a0bbb0309f72247e8127af0ec
---

# #####################################################################
# Build gops and cni loopback binaries
# Based on https://github.com/cilium/cilium/blob/v1.14.5/images/runtime/build-gops.sh
# and https://github.com/cilium/cilium/blob/v1.14.5/images/runtime/download-cni.sh
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-gops-artifact
from: {{ $.Images.BASE_GOLANG_20_ALPINE }}
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apk add --no-cache binutils curl git tar
  install:
  - export GO_VERSION=${GOLANG_VERSION}
  - export GOPROXY={{ $.GOPROXY }}
  - mkdir -p /go/src/github.com/google/gops
  - git clone --depth 1 --branch {{ $gopsVersion }} {{ $.SOURCE_REPO }}/google/gops.git /go/src/github.com/google/gops
  - cd /go/src/github.com/google/gops
  - mkdir -p "/out/linux/amd64/bin"
  - GOARCH="amd64" CGO_ENABLED=0 go build -ldflags "-s -w" -o "/out/linux/amd64/bin/gops" github.com/google/gops
  - strip /out/linux/amd64/bin/gops
  - curl --fail --show-error --silent --location "https://github.com/containernetworking/plugins/releases/download/v{{ $cniVersion }}/cni-plugins-linux-amd64-v{{ $cniVersion }}.tgz" --output "/tmp/cni-amd64.tgz"
  - mkdir -p "/out/linux/amd64/bin"
  - tar -C "/out/linux/amd64/bin" -xf "/tmp/cni-amd64.tgz" ./loopback
  - strip /out/linux/amd64/bin/loopback
---
# #####################################################################
# Build hubble binaries
# Based on https://github.com/cilium/cilium/blob/v1.14.5/images/cilium/download-hubble.sh
# and https://github.com/cilium/hubble/blob/v0.12.3/Dockerfile
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-hubble-artifact
from: {{ $.Images.BASE_GOLANG_20_ALPINE }}
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apk add --no-cache make git binutils
  install:
  - export GO_VERSION=${GOLANG_VERSION}
  - export GOPROXY={{ $.GOPROXY }}
  - mkdir -p /go/src/github.com/cilium/hubble
  - git clone --depth 1 --branch {{ $hubbleVersion }} {{ $.SOURCE_REPO }}/cilium/hubble.git /go/src/github.com/cilium/hubble
  - cd /go/src/github.com/cilium/hubble
  - make clean && make hubble
  - cp /go/src/github.com/cilium/hubble/hubble /hubble
  - strip /hubble
  - /hubble completion bash > /bash_completion
---
# #####################################################################
# Runtime artifact (for build)
# Based on https://github.com/cilium/cilium/blob/v1.14.5/images/runtime/Dockerfile
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-runtime-artifact
from: {{ $.Images.BASE_UBUNTU }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-iptables-artifact
  add: /iptables
  to: /iptables
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-llvm-artifact
  add: /usr/local/bin/
  to: /bin
  before: install
  includePaths:
  - clang
  - llc
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-bpftool-artifact
  add: /usr/local/bin/bpftool
  to: /usr/local/bin/bpftool
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-gops-artifact
  add: /out/linux/amd64/bin/loopback
  to: /cni/loopback
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-gops-artifact
  add: /out/linux/amd64/bin/gops
  to: /bin/gops
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-src
  add: /go/src/github.com/cilium/cilium/images/runtime/
  to: /go/src/github.com/cilium/cilium/images/runtime
  before: install
  includePaths:
  - iptables-wrapper-installer.sh
shell:
  beforeInstall:
  - apt-get update
  - apt-get upgrade -y
  - apt-get install -y jq curl tzdata strace
  install:
  - chmod +x /go/src/github.com/cilium/cilium/images/runtime/*.sh
  - cd /go/src/github.com/cilium/cilium/images/runtime
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update
  - ln -fs /usr/share/zoneinfo/UTC /etc/localtime
  - apt-get install -y --no-install-recommends bash-completion iproute2 iptables ipset kmod ca-certificates
  - apt-get purge --auto-remove
  - apt-get clean
  - rm -rf /var/lib/apt/lists/*
  - dpkg -i /iptables/*.deb
  - rm -rf /iptables
  - ./iptables-wrapper-installer.sh --no-sanity-check
---
# #####################################################################
# Build artifact
# Based on https://github.com/cilium/cilium/blob/v1.14.5/images/builder/Dockerfile
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
fromImage: {{ $.ModuleName }}/{{ $.ImageName }}-runtime-artifact
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-llvm-artifact
  add: /usr/local/bin/llvm-objcopy
  to: /bin
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-golang-artifact
  add: /usr/local/go
  to: /usr/local/go
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apt-get update
  - apt-get upgrade -y --no-install-recommends
  - |
    apt-get install -y --no-install-recommends \
    gcc-x86-64-linux-gnu g++-x86-64-linux-gnu libc6-dev-amd64-cross binutils-x86-64-linux-gnu \
    unzip \
    binutils coreutils curl gcc libc6-dev git make patch
  - apt-get purge --auto-remove
  - apt-get clean
  - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
  install:
  - export GOROOT=/usr/local/go
  - export GOPATH=/go
  - export PATH=${GOROOT}/bin:${GOPATH}/bin:${PATH}
  - curl --fail --show-error --silent --location "https://github.com/protocolbuffers/protobuf/releases/download/v{{ $protocVersion }}/protoc-{{ $protocVersion }}-linux-x86_64.zip" --output /tmp/protoc.zip
  - unzip /tmp/protoc.zip -x readme.txt -d /usr/local
  - chmod o+rx /usr/local/bin/protoc
  - chmod o+rX -R /usr/local/include/google/
  - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@8ba23be9613c672d40ae261d2a1335d639bdd59b
  - go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.30.0
  - go install github.com/mitchellh/protoc-gen-go-json@v1.1.0
  - go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@v1.5.1
---
# #####################################################################
# #####################################################################
# Binaries artifact for distroless (based on Ubuntu)
---
# clang dependencies
{{ $binaries := "/usr/lib/x86_64-linux-gnu/libstdc++.so.6" }}
# from base install script
{{ $binaries := cat $binaries "/usr/bin/jq /usr/bin/curl" }}
# for debug
{{ $binaries := cat $binaries "/usr/bin/sleep /usr/bin/strace /bin/ls" }}
# shell-scripts dependencies
{{ $binaries := cat $binaries "/bin/bash /bin/sh /bin/echo /bin/printf /bin/sed /bin/awk /bin/nsenter /bin/mount /bin/mkdir /bin/basename" }}
{{ $binaries := cat $binaries "/bin/cat /bin/head /bin/cut /bin/od /bin/grep /bin/cp /bin/mv /bin/rm /bin/ln /bin/wc /bin/find" }}
# kmod
{{ $binaries := cat $binaries "/bin/kmod /bin/lsmod /sbin/depmod /sbin/insmod /sbin/lsmod /sbin/modinfo /sbin/modprobe /sbin/rmmod" }}
# iproute2
{{ $binaries := cat $binaries "/bin/ip /bin/ss /sbin/ip /sbin/bridge /sbin/dcb /sbin/devlink /sbin/rtacct /sbin/rtmon /sbin/tc /sbin/tipc /sbin/vdpa /usr/bin/lnstat " }}
{{ $binaries := cat $binaries "/usr/bin/nstat /usr/bin/rdma /usr/bin/routef /usr/bin/routel /usr/bin/ctstat /usr/bin/rtstat /usr sbin/arpd /usr/sbin/genl" }}
# iptables
{{ $binaries := cat $binaries "/usr/sbin/xtables* /usr/sbin/arptables* /usr/sbin/ebtables* /usr/sbin/ip6tables* /usr/sbin/iptables* /usr/sbin/ipset* /usr/bin/iptables-xml" }}
{{ $binaries := cat $binaries "/usr/sbin/nfnl_osf" }}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
fromImage: {{ $.ModuleName }}/{{ $.ImageName }}-runtime-artifact
import:
- image: common/alt
  add: /binary_replace.sh
  to: /binary_replace.sh
  before: install
shell:
  install:
    - chmod +x /binary_replace.sh
    - mkdir -p /relocate
    - ln -f -s /usr/bin /relocate/test_bin_ln
    - ln -f -s /usr/sbin /relocate/test_sbin_ln
    - /binary_replace.sh -i "{{ $binaries }}" -o /relocate
    - |
      for cmd in iptables iptables-save iptables-restore ip6tables ip6tables-save ip6tables-restore; do
        rm -f "/relocate/usr/sbin/${cmd}"
        ln -f -s /usr/sbin/iptables-wrapper "/relocate/usr/sbin/${cmd}"
      done
      # broken symlinks are not imported from the artifact
      touch /usr/sbin/iptables-wrapper
---
# #####################################################################
# Distroless Runtime Image
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-distroless-runtime-artifact
fromImage: common/distroless
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-llvm-artifact
  add: /usr/local/bin/
  to: /usr/local/bin
  before: install
  includePaths:
  - clang
  - llc
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-bpftool-artifact
  add: /usr/local/bin/bpftool
  to: /usr/local/bin/bpftool
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-gops-artifact
  add: /out/linux/amd64/bin/loopback
  to: /cni/loopback
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-gops-artifact
  add: /out/linux/amd64/bin/gops
  to: /bin/gops
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-cert-artifact
  add: /etc/ssl/certs/ca-certificates.crt
  to: /etc/ssl/certs/ca-certificates.crt
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /usr/share/zoneinfo/Etc/UTC
  to: /etc/localtime
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /usr/lib/x86_64-linux-gnu/xtables/
  to: /usr/lib/x86_64-linux-gnu/xtables
  before: install
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /usr/sbin/iptables-wrapper
  to: /usr/sbin/iptables-wrapper
  before: install
---
