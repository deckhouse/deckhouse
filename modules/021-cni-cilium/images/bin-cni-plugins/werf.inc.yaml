{{- $cniVersion := "1.5.0" }}
---
# #####################################################################
# Build cni binaries
# Based on https://github.com/cilium/cilium/blob/v1.14.14/images/runtime/Dockerfile (gops-cni-builder stage)
# and https://github.com/cilium/cilium/blob/v1.14.14/images/runtime/download-cni.sh
# #####################################################################
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
  - git clone --depth 1 --branch v{{ $cniVersion }} {{ $.SOURCE_REPO }}/containernetworking/plugins.git /src/plugins
  - cd /src/plugins
  - git apply --verbose /patches/*.patch
  - rm -rf /src/plugins/.git
---
image: {{ .ModuleName }}/cni-plugins-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache bash git binutils tar
  install:
  - export GO_VERSION=${GOLANG_VERSION} GOPROXY={{ $.GOPROXY }}
  - export GOOS=linux GOARCH=amd64 CGO_ENABLED=0
  - cd /src/plugins
  - go mod vendor && go mod verify
  - ./build_linux.sh -ldflags '-extldflags -static -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion={{ $cniVersion }}'
  - mkdir -p /out/linux/amd64/bin
  - cp -f /src/plugins/bin/* /out/linux/amd64/bin
  - strip /out/linux/amd64/bin/*
  - rm -rf /src/plugins/vendor
---
