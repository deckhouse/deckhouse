{{- $llvmRev := "llvmorg-18.1.8" }}
{{- $llvmCacheRev := "llvmorg-18.1.8-alt-p11-gcc13-v1-180225" }}
---
# #####################################################################
# Build LLVM binaries (based on base-cilium-dev)
# Original IMAGE_TAG of LLVM is 1732033893-de666b6
# Corresponding commit de666b61919632fb1e91fcf6259531f6bee467ee (https://github.com/cilium/image-tools/tree/de666b61919632fb1e91fcf6259531f6bee467ee)
# Based on https://github.com/cilium/cilium/blob/v1.14.14/images/runtime/Dockerfile#L8
# and https://github.com/cilium/image-tools/blob/de666b61919632fb1e91fcf6259531f6bee467ee/images/llvm/Dockerfile
# and https://github.com/cilium/image-tools/blob/de666b61919632fb1e91fcf6259531f6bee467ee/images/llvm/checkout-llvm.sh
# and https://github.com/cilium/image-tools/blob/de666b61919632fb1e91fcf6259531f6bee467ee/images/llvm/build-llvm-native.sh
# and https://github.com/cilium/image-tools/blob/063fa0d879d9560b85b6134c48ece08e672fa057/images/compilers/install-deps.sh
# #####################################################################
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
shell:
  install:
  - git clone --branch "{{ $llvmRev }}" {{ $.SOURCE_REPO }}/llvm/llvm-project.git /src/llvm
  - cd /src/llvm
  # CSE
  - rm -rf clang-tools-extra/clangd/clients/clangd-vscode
  - rm -rf /src/llvm/.git
---
image: {{ .ModuleName }}/{{ .ImageName }}-ccache-artifact
fromImage: common/src-artifact
final: false
shell:
  install:
  - mkdir -p /tmp/ccache-dir
  - git clone --depth 1 --branch {{ $llvmCacheRev }} {{ $.SOURCE_REPO }}/llvm/llvm-build-cache.git /tmp/ccache-dir
  - rm -rf /tmp/ccache-dir/.git
---
image: {{ .ModuleName }}/llvm-artifact
fromImage: {{ .ModuleName }}/base-cilium-dev
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
- image: {{ .ModuleName }}/{{ .ImageName }}-ccache-artifact
  add: /tmp/ccache-dir
  to: /tmp/ccache-dir
  before: install
shell:
  install:
  - update-alternatives --install /usr/bin/python python /usr/bin/python2 1
  - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 2
  setup:
  - sed -i '/\#include <string>/a \#include <cstdint>' /src/llvm/llvm/include/llvm/Support/Signals.h
  - export CCACHE_DIR="/tmp/ccache-dir"
  - mkdir -p /src/llvm/llvm/build-native
  - cd /src/llvm/llvm/build-native
  - ccache --zero-stats || true
  - ccache --show-stats -v || true
  - |
    cmake .. -G "Ninja" \
      -DCMAKE_VERBOSE_MAKEFILE="ON" \
      -DLLVM_TARGETS_TO_BUILD="BPF" \
      -DLLVM_ENABLE_PROJECTS="clang" \
      -DBUILD_SHARED_LIBS="OFF" \
      -DCMAKE_BUILD_TYPE="Release" \
      -DLLVM_BUILD_RUNTIME="OFF" \
      -DCMAKE_INSTALL_PREFIX="/usr/local" \
      -DLLVM_CCACHE_BUILD="ON" \
      -DLLVM_CCACHE_DIR="/tmp/ccache-dir" \
      -DLLVM_CCACHE_MAXSIZE="0"
  - ccache --show-stats -v || true
  - ninja clang llc llvm-objcopy
  - ccache --show-stats -v || true
  - strip bin/clang
  - strip bin/llc
  - strip bin/llvm-objcopy
  # - mkdir -p /out/linux/amd64/bin
  # - cp bin/clang bin/llc bin/llvm-objcopy /out/linux/amd64/bin
  - cp bin/clang bin/llc bin/llvm-objcopy /usr/local/bin
