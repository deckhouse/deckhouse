image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/nginx-static
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/src/nginx.conf
  to: /opt/nginx-static/conf/nginx.conf
  before: install
- artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /app
  to: /app
  before: install
docker:
  ENTRYPOINT: [ "/opt/nginx-static/sbin/nginx", "-g", "daemon off;" ]
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromArtifact: src-artifact
git:
- add: /{{ $.ModulePath }}modules/800-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src/src
  stageDependencies:
    setup:
    - '**/*'
shell:
  install:
  - git clone --depth 1 --branch {{ .CandiVersionMap.d8.d8CliVersion }} {{ $.SOURCE_REPO }}/deckhouse/deckhouse-cli.git /src/deckhouse-cli

---
artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_BULLSEYE }}
import:
- artifact: task-artifact
  add: /task
  to: /task
  before: install
- artifact: jq-artifact
  add: /jq
  to: /jq
  before: install
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/deckhouse-cli
  to: /src
  before: install
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/src/static
  to: /static
  before: install
- artifact: {{ .ModuleName }}/{{ .ImageName }}-frontend-artifact
  add: /app/dist
  to: /app
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  {{- include "debian packages proxy" . | nindent 2 }}
  - apt-get install -y libbtrfs-dev
  install:
  - export GOPROXY={{ $.GOPROXY }}
  - cd /src
  - /task build:dist:all
  - mkdir -p /app/files/d8-cli
  - mv dist/{{ .CandiVersionMap.d8.d8CliVersion }}/* /app/files/d8-cli
  - /jq '[.[] | .version="{{ .CandiVersionMap.d8.d8CliVersion }}"]' /static/tools.json > /app/tools.json
  - mv /static/robots.txt /app
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-frontend-artifact
from: {{ .Images.BASE_NODE_20_ALPINE }}
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src/src/frontend
  to: /app
  before: install
shell:
  beforeInstall:
  {{- include "node packages proxy" . | nindent 2 }}
  install:
  - cd /app
  - npm install
  - npm run build
