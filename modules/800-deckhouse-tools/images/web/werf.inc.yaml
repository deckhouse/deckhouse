image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/nginx-static
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
git:
- add: /{{ $.ModulePath }}modules/800-{{ $.ModuleName }}/images/{{ $.ImageName }}/nginx.conf
  to: /opt/nginx-static/conf/nginx.conf
  stageDependencies:
    setup:
    - '**/*'
import:
  - artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
    add: /app
    to: /app
    before: setup
docker:
  ENTRYPOINT: [ "/opt/nginx-static/sbin/nginx", "-g", "daemon off;" ]
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: {{ .Images.BASE_GOLANG_23_BULLSEYE }}
fromCacheVersion: {{ .CandiVersionMap.d8.d8CliVersion }}
git:
  - add: /{{ $.ModulePath }}modules/800-{{ $.ModuleName }}/images/{{ $.ImageName }}/static
    to: /static
    stageDependencies:
      setup:
        - '**/*'
import:
  - artifact: {{ .ModuleName }}/{{ .ImageName }}-frontend-artifact
    add: /app/dist
    to: /app
    before: setup
shell:
  setup:
    {{- include "debian packages proxy" . | nindent 4 }}
    - export GOPROXY={{ $.GOPROXY }}
    - apt-get install -y libbtrfs-dev jq
    - go install github.com/go-task/task/v3/cmd/task@latest
    - git clone --depth 1 --branch {{ .CandiVersionMap.d8.d8CliVersion }} {{ $.SOURCE_REPO }}/deckhouse/deckhouse-cli.git
    - cd /deckhouse-cli
    - task build:dist:all
    - mkdir -p /app/files/d8-cli
    - mv dist/{{ .CandiVersionMap.d8.d8CliVersion }}/* /app/files/d8-cli
    - jq '[.[] | .version="{{ .CandiVersionMap.d8.d8CliVersion }}"]' /static/tools.json > /app/tools.json
    - mv /static/robots.txt /app
---
artifact: {{ .ModuleName }}/{{ .ImageName }}-frontend-artifact
from: {{ .Images.BASE_NODE_20_ALPINE_DEV }}
git:
  - add: /{{ $.ModulePath }}modules/800-{{ $.ModuleName }}/images/{{ $.ImageName }}/frontend
    to: /app
    stageDependencies:
      setup:
        - '**/*'
shell:
  setup:
    - cd /app
    - npm install
    - npm run build
