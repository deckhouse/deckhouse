{{- $prefix := "static" }}
{{- $provider := "static" }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ $prefix }}
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "capi-controller-manager")) | nindent 2 }}
  annotations:
    cluster.x-k8s.io/paused: "true"
# A finalizer has been added to prevent cascading removing of all capi resources after deleting the cluster resource.
  finalizers:
    - deckhouse.io/capi-controller-manager
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - {{ .Values.global.clusterConfiguration.podSubnetCIDR }}
    services:
      cidrBlocks:
        - {{ .Values.global.clusterConfiguration.serviceSubnetCIDR }}
    serviceDomain: {{ .Values.global.clusterConfiguration.clusterDomain }}
#  infrastructureRef:
#    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
#    kind: StaticCluster
#    namespace: d8-cloud-instance-manager
#    name: {{ $prefix }}
---
# As described [here](https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/book/src/developer/architecture/controllers/cluster.md#secrets)
# if we do not use kubeadm bootstrap provider, we should generate own kubeconfig and store it in the secret.
# But we do not need to generate anything for the cluster, because capi cluster is fake and needed only for controller work.
# So we generate secret with empty kubeconfig.
apiVersion: v1
data:
  value: Cg==
kind: Secret
metadata:
  name: {{ $prefix }}-kubeconfig
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "capi-controller-manager")) | nindent 2 }}
type: cluster.x-k8s.io/secret
