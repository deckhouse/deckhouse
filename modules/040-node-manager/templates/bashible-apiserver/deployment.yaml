{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: bashible-apiserver
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "bashible-apiserver" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: bashible-apiserver
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: bashible-apiserver
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "bashible-apiserver")) | nindent 2 }}
spec:
  maxUnavailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app: "bashible-apiserver"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "bashible-apiserver"
  namespace: d8-cloud-instance-manager
  annotations:
    node.deckhouse.io/migrated: "1.34"
  {{- include "helm_lib_module_labels" (list . (dict "app" "bashible-apiserver" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: "bashible-apiserver"
  template:
    metadata:
      labels:
        app: "bashible-apiserver"
    spec:
      {{- include "helm_lib_node_selector"  (tuple . "master")  | nindent 6 }}
      {{- include "helm_lib_tolerations"    (tuple . "any-uninitialized-node")  | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" .   | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "bashible-apiserver"))  | nindent 6 }}
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: bashible-apiserver
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
      - name: bashible-apiserver
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: "{{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.nodeManager.bashibleApiserver }}"
        imagePullPolicy: IfNotPresent
        args:
          - "--bind-address=$(HOST_IP)"
          - "--cert-dir=/var/certs"
          - "--secure-port=10423"
          - "--v=2"
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
          - name: certs
            mountPath: /var/certs
            readOnly: false
          - name: dependency-files
            mountPath: /var/files
          - name: tmp
            mountPath: /tmp
        ports:
          - name: https
            containerPort: 10423
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
        resources:
          requests:
              {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 14 }}
      volumes:
        - name: certs
          secret:
            secretName: bashible-api-server-tls
        - name: dependency-files
          configMap:
            name: bashible-apiserver-files
        - name: tmp
          emptyDir: {}


{{- define "bashible_input_data" }}
    clusterDomain: {{ $.Values.global.discovery.clusterDomain | toYaml }}
    clusterDNSAddress: {{ $.Values.global.discovery.clusterDNSAddress | toYaml }}
    {{- if hasKey $.Values.nodeManager.internal "cloudProvider" }}
    cloudProvider:
      {{- $.Values.nodeManager.internal.cloudProvider | toYaml | nindent 6 }}
    {{- end }}
    {{- if hasKey $.Values.global.clusterConfiguration "packagesProxy" }}
    packagesProxy:
      {{- $.Values.global.clusterConfiguration.packagesProxy | toYaml | nindent 6 }}
    {{- end }}
    apiserverEndpoints:
      {{- $.Values.nodeManager.internal.clusterMasterAddresses | toYaml | nindent 6 }}
    {{- if $.Values.nodeManager.internal.kubernetesCA }}
    kubernetesCA: |
      {{- $.Values.nodeManager.internal.kubernetesCA | nindent 6 }}
    {{- end }}
    allowedBundles:
      {{- $.Values.nodeManager.allowedBundles | toYaml | nindent 6 }}
    allowedKubernetesVersions:
      {{- $.Values.nodeManager.allowedKubernetesVersions | toYaml | nindent 6 }}
    nodeGroups:
      {{- $.Values.nodeManager.internal.nodeGroups | toYaml | nindent 6 }}
    nodeStatusUpdateFrequency: {{ $.Values.nodeManager.internal.nodeStatusUpdateFrequency | toYaml | default 0 }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: bashible-apiserver-context
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "bashible-apiserver")) | nindent 2 }}
data:
  input.yaml: |-
    {{- include "bashible_input_data" . | b64enc | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bashible-apiserver-files
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "bashible-apiserver")) | nindent 2 }}
data:
  version_map.yml: |-
    {{- .Files.Get "candi/version_map.yml" | nindent 4 }}
  images_tags.json: |-
    {{- .Files.Get "images_tags.json" | nindent 4 }}

