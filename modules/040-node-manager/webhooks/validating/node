#!/usr/bin/env bash

# Copyright 2023 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /shell_lib.sh

DECKHOUSE_CONFIG_MAP=${DECKHOUSE_CONFIG_MAP:-deckhouse}

function __config__(){
  cat <<EOF
configVersion: v1
kubernetesValidating:
- name: capi-node-policy.deckhouse.io
  group: main
  rules:
  - apiGroups:   [""]
    apiVersions: ["v1"]
    operations:  ["UPDATE"]
    resources:   ["nodes"]
    scope:       "Cluster"
EOF
}

function __main__() {

  saUser="$(context::jq -r '.review.request.userInfo.username')"
  if [[ "$saUser" != "system:serviceaccount:d8-cloud-instance-manager:capi-controller-manager" ]]; then
    cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":true}
EOF
    return 0
  fi

  nodeProviderID="$(context::jq -r '.review.request.object.spec.providerID')"
  if ! grep -qE "^static:///[0-9a-z-]+$" <<< "$nodeProviderID"; then
    cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":false, "message":".spec.providerID field should be in the form \"static:///aaaasdsddsd\", but got \"$nodeProviderID\""}
EOF
    return 0
  fi

  if ! context::jq -r '.review.request.object.metadata.annotations."cluster.x-k8s.io/machine"'; then
    cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":false, "message":".metadata.annotations should have \"cluster.x-k8s.io/machine\" key"}
EOF
    return 0
  fi

  cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":true}
EOF
}

hook::run "$@"
