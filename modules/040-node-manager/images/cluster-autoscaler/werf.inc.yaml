{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $image_version := $version | replace "." "-" }}
  {{- if $value.clusterAutoscalerPatch }}
    {{- $patches := (printf "/%smodules/%s-%s/images/%s" $.ModulePath $.ModulePriority $.ModuleName $.ImageName) }}
    {{- $patch := false }}
    {{- range $path, $_ := $.Files.Glob (printf "%s/*" $patches) }}
      {{- if contains $version $path }}
        {{- $patch = true }}
      {{- end }}
    {{- end }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}-src-artifact
fromImage: common/src-artifact
final: false
    {{- if $patch }}
git:
- add: {{ $patches }}/patches/{{ $version }}
  to: /patches
  stageDependencies:
    install:
    - '**/*'
    {{- end }}
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
shell:
  install:
  - mkdir -p /tmp/autoscaler
  - cd /tmp/autoscaler
    {{- $clusterAutoscalerVersion := $version }}
  - git clone --depth 1 --branch v{{ $clusterAutoscalerVersion }}.{{ $value.clusterAutoscalerPatch }} $(cat /run/secrets/SOURCE_REPO)/gardener/autoscaler.git .
    {{- if $patch }}
  - git apply /patches/*.patch --verbose
    {{- end }}
  - mv ./cluster-autoscaler/* /src
  - rm -rf /tmp/autoscaler /src/vendor
  - rm -rf /src/cloudprovider/azure/test
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ $.GOPROXY }}
shell:
  install:
  - cd /src
  - export GOOS=linux GOARCH=amd64 CGO_ENABLED=0
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
  - go build -ldflags='-s -w -extldflags "-static"' -o cluster-autoscaler
  - echo "{{ $clusterAutoscalerVersion }}.{{ $value.clusterAutoscalerPatch }}-flant" > VERSION
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /src
  to: /
  includePaths:
  - cluster-autoscaler
  - VERSION
  before: setup
imageSpec:
  config:
    env: { "container": "docker" }
    entrypoint: ["/cluster-autoscaler"]
  {{- end }}
{{- end }}
