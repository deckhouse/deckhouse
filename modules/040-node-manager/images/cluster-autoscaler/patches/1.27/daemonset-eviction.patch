diff --git a/cluster-autoscaler/utils/daemonset/daemonset.go b/cluster-autoscaler/utils/daemonset/daemonset.go
index 193ea07f6..b658b599a 100644
--- a/cluster-autoscaler/utils/daemonset/daemonset.go
+++ b/cluster-autoscaler/utils/daemonset/daemonset.go
@@ -19,6 +19,7 @@ package daemonset
 import (
 	"fmt"
 	"math/rand"
+	"strings"
 
 	appsv1 "k8s.io/api/apps/v1"
 	apiv1 "k8s.io/api/core/v1"
@@ -46,14 +47,22 @@ func GetDaemonSetPodsForNode(nodeInfo *schedulerframework.NodeInfo, daemonsets [
 	return result, nil
 }
 
+func shouldEvictDsPod(pod *apiv1.Pod, evictByDefault bool) bool {
+	if strings.HasPrefix(pod.Namespace, "d8-") {
+		if val, ok := pod.Annotations["cluster-autoscaler.kubernetes.io/enable-ds-eviction"]; !ok || val != "true" {
+			return false
+		}
+	}
+	if a, ok := pod.Annotations[EnableDsEvictionKey]; ok {
+		return a == "true"
+	}
+	return evictByDefault
+}
+
 // PodsToEvict returns a list of DaemonSet pods that should be evicted during scale down.
 func PodsToEvict(pods []*apiv1.Pod, evictByDefault bool) (evictable []*apiv1.Pod) {
 	for _, pod := range pods {
-		if a, ok := pod.Annotations[EnableDsEvictionKey]; ok {
-			if a == "true" {
-				evictable = append(evictable, pod)
-			}
-		} else if evictByDefault {
+		if shouldEvictDsPod(pod, evictByDefault) {
 			evictable = append(evictable, pod)
 		}
 	}
