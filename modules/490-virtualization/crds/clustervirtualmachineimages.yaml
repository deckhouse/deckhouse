apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  name: clustervirtualmachineimages.deckhouse.io
spec:
  group: deckhouse.io
  names:
    kind: ClusterVirtualMachineImage
    listKind: ClusterVirtualMachineImageList
    plural: clustervirtualmachineimages
    shortNames:
      - cvmi
      - cvmimage
      - cvmimages
    singular: clustervirtualmachineimage
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Defines remotely available images on cluster level.
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              description: The desired state of `ClusterVirtualMachineImage`.
              properties:
                remote:
                  description: The source for `VirtualMachineImage`, this can be HTTP, S3, Registry or an existing PVC.
                  properties:
                    blank:
                      description: The parameters to create a new raw blank image for the PVC.
                      type: object
                    http:
                      description: Can be either an HTTP or HTTPS endpoint, with an optional basic auth username and password, and an optional ConfigMap containing additional CAs.
                      properties:
                        certConfigMap:
                          description: A ConfigMap reference, containing a Certificate Authority(CA) public key, and a Base64 encoded PEM certificate.
                          type: string
                        extraHeaders:
                          description: A list of strings containing extra headers to include with HTTP transfer requests.
                          items:
                            type: string
                          type: array
                        secretExtraHeaders:
                          description: A list of Secret references, each containing an extra HTTP header that may include sensitive information.
                          items:
                            type: string
                          type: array
                        secretRef:
                          description: |
                            A reference to the Secret.

                            The Secret should contains accessKeyId (username) Base64 encoded, and secretKey
                            (password) also Base64 encoded.
                          type: string
                        url:
                          description: The URL of the HTTP(S) endpoint.
                          type: string
                      required:
                        - url
                      type: object
                    pvc:
                      description: Parameters to create a Data Volume from an existing PVC.
                      properties:
                        name:
                          description: The name of the source PVC.
                          type: string
                        namespace:
                          description: The namespace of the source PVC.
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    registry:
                      description: The parameters to create a Data Volume from an S3 source.
                      properties:
                        certConfigMap:
                          description: A reference to the Registry certs.
                          type: string
                        secretRef:
                          description: A reference to the Secret needed to access the Registry source.
                          type: string
                        url:
                          description: 'URL is the url of the registry source (starting with the scheme: `docker`, `oci-archive`).'
                          type: string
                      type: object
                    s3:
                      description: Parameters to create a Data Volume from an S3 source.
                      properties:
                        certConfigMap:
                          description: A reference to the ConfigMap, containing a Certificate Authority(CA) public key, and a Base64 encoded PEM certificate.
                          type: string
                        secretRef:
                          description: A reference to the Secret needed to access the S3 source.
                          type: string
                        url:
                          description: URL of the S3 source.
                          type: string
                      required:
                        - url
                      type: object
                  type: object
                source:
                  description: Contains enough information to let locate the typed referenced object in the cluster.
                  properties:
                    apiGroup:
                      description: |
                        The Group for the resource being referenced.

                        If it is not specified, the specified kind must be in the core API group. For any other third-party types, apiGroup is required.
                      type: string
                    kind:
                      description: The type of resource being referenced.
                      type: string
                    name:
                      description: The name of resource being referenced.
                      type: string
                    namespace:
                      description: The Namespace of resource being referenced.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
              type: object
            status:
              description: The observed state of `ClusterVirtualMachineImage`.
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
