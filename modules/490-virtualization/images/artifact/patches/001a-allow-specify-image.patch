diff --git a/pkg/virt-operator/kubevirt.go b/pkg/virt-operator/kubevirt.go
index 4636fe047..f25cd0e5f 100644
--- a/pkg/virt-operator/kubevirt.go
+++ b/pkg/virt-operator/kubevirt.go
@@ -47,7 +47,6 @@ import (
 	"kubevirt.io/kubevirt/pkg/controller"
 	"kubevirt.io/kubevirt/pkg/util/status"
 	"kubevirt.io/kubevirt/pkg/virt-operator/resource/apply"
-	"kubevirt.io/kubevirt/pkg/virt-operator/resource/generate/components"
 	install "kubevirt.io/kubevirt/pkg/virt-operator/resource/generate/install"
 	"kubevirt.io/kubevirt/pkg/virt-operator/util"
 	operatorutil "kubevirt.io/kubevirt/pkg/virt-operator/util"
@@ -705,7 +704,6 @@ func (c *KubeVirtController) execute(key string) error {
 
 func (c *KubeVirtController) generateInstallStrategyJob(config *operatorutil.KubeVirtDeploymentConfig) (*batchv1.Job, error) {
 
-	operatorImage := fmt.Sprintf("%s/%s%s%s", config.GetImageRegistry(), config.GetImagePrefix(), VirtOperator, components.AddVersionSeparatorPrefix(config.GetOperatorVersion()))
 	deploymentConfigJson, err := config.GetJson()
 	if err != nil {
 		return nil, err
@@ -746,7 +744,7 @@ func (c *KubeVirtController) generateInstallStrategyJob(config *operatorutil.Kub
 					Containers: []k8sv1.Container{
 						{
 							Name:            "install-strategy-upload",
-							Image:           operatorImage,
+							Image:           config.VirtOperatorImage,
 							ImagePullPolicy: config.GetImagePullPolicy(),
 							Command: []string{
 								VirtOperator,
@@ -756,7 +754,7 @@ func (c *KubeVirtController) generateInstallStrategyJob(config *operatorutil.Kub
 								{
 									// Deprecated, keep it for backwards compatibility
 									Name:  util.OldOperatorImageEnvName,
-									Value: operatorImage,
+									Value: config.VirtOperatorImage,
 								},
 								{
 									// Deprecated, keep it for backwards compatibility
diff --git a/pkg/virt-operator/util/config.go b/pkg/virt-operator/util/config.go
index 9e192a506..70ff4a005 100644
--- a/pkg/virt-operator/util/config.go
+++ b/pkg/virt-operator/util/config.go
@@ -331,25 +331,6 @@ func VerifyEnvWithEnvVarManager(envVarManager EnvVarManager) error {
 	if imageString == "" {
 		return fmt.Errorf("empty env var %s for operator image", OldOperatorImageEnvName)
 	}
-	imageRegEx := regexp.MustCompile(operatorImageRegex)
-	matches := imageRegEx.FindAllStringSubmatch(imageString, 1)
-	if len(matches) != 1 || len(matches[0]) != 4 {
-		return fmt.Errorf("can not parse operator image env var %s", imageString)
-	}
-
-	// ensure that all or no shasums are given
-	missingShas := make([]string, 0)
-	count := 0
-	for _, name := range []string{VirtApiShasumEnvName, VirtControllerShasumEnvName, VirtHandlerShasumEnvName, VirtLauncherShasumEnvName, KubeVirtVersionEnvName} {
-		count++
-		sha := envVarManager.Getenv(name)
-		if sha == "" {
-			missingShas = append(missingShas, name)
-		}
-	}
-	if len(missingShas) > 0 && len(missingShas) < count {
-		return fmt.Errorf("incomplete configuration, missing env vars %v", missingShas)
-	}
 
 	return nil
 }
