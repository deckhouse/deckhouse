{{- $nodeSelectorSystem := index (include "helm_lib_node_selector" (tuple . "system") | fromYaml) "nodeSelector" | default (dict) | toJson }}
{{- $nodeSelectorMaster := index (include "helm_lib_node_selector" (tuple . "master") | fromYaml) "nodeSelector" | default (dict) | toJson }}
{{- $tolerationsSystem := index (include "helm_lib_tolerations" (tuple . "system") | fromYaml) "tolerations" | default (list) | toJson }}
{{- $tolerationsAnyNode := index (include "helm_lib_tolerations" (tuple . "any-node") | fromYaml) "tolerations" | default (list) | toJson }}
---
apiVersion: kubevirt.io/v1
kind: KubeVirt
metadata:
  name: kubevirt
  namespace: d8-virtualization
  {{- include "helm_lib_module_labels" (list .) | nindent 2 }}
spec:
  certificateRotateStrategy: {}
  configuration:
    evictionStrategy: LiveMigrate
    developerConfiguration:
      featureGates:
      - Macvtap
      - HotplugVolumes
      - GPU
      - ExpandDisks
  customizeComponents:
    patches:
    - resourceType: Deployment
      resourceName: virt-api
      patch: '{"spec":{"template":{"spec":{"imagePullSecrets":[{"name":"deckhouse-registry"}]}}}}'
      type: strategic
    - resourceType: Deployment
      resourceName: virt-controller
      patch: '{"spec":{"template":{"spec":{"imagePullSecrets":[{"name":"deckhouse-registry"}]}}}}'
      type: strategic
    - resourceType: DaemonSet
      resourceName: virt-handler
      patch: '{"spec":{"template":{"spec":{"imagePullSecrets":[{"name":"deckhouse-registry"}]}}}}'
      type: strategic
    - resourceType: Deployment
      resourceName: virt-api
      patch: '[{"op":"replace","path":"/spec/template/spec/nodeSelector","value":{{ $nodeSelectorMaster }}}]'
      type: json
    - resourceType: Deployment
      resourceName: virt-api
      patch: '[{"op":"replace","path":"/spec/template/spec/tolerations","value":{{ $tolerationsAnyNode }}}]'
      type: json
    - resourceType: Deployment
      resourceName: virt-controller
      patch: '[{"op":"replace","path":"/spec/template/spec/nodeSelector","value":{{ $nodeSelectorSystem }}}]'
      type: json
    - resourceType: Deployment
      resourceName: virt-controller
      patch: '[{"op":"replace","path":"/spec/template/spec/tolerations","value":{{ $tolerationsSystem }}}]'
      type: json
    - resourceType: DaemonSet
      resourceName: virt-handler
      patch: '[{"op":"replace","path":"/spec/template/spec/tolerations","value":{{ $tolerationsAnyNode }}}]'
      type: json
    {{- if ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
    - resourceType: Deployment
      resourceName: virt-api
      patch: '[{"op":"replace","path":"/spec/template/spec/containers/0/resources/requests","value":{}}]'
      type: json
    - resourceType: Deployment
      resourceName: virt-controller
      patch: '[{"op":"replace","path":"/spec/template/spec/containers/0/resources/requests","value":{}}]'
      type: json
    - resourceType: DaemonSet
      resourceName: virt-handler
      patch: '[{"op":"replace","path":"/spec/template/spec/containers/0/resources/requests","value":{}}]'
      type: json
    {{- end }}
  imagePullPolicy: IfNotPresent
  infra:
    replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  workloadUpdateStrategy: {}
