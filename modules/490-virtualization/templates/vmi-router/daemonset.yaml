{{- define "vmi_router_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}
{{- if (.Values.global.enabledModules | has "cni-cilium") }}
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: vmi-router
  namespace: d8-virtualization
  {{- include "helm_lib_module_labels" (list . (dict "app" "vmi-router" "workload-resource-policy.deckhouse.io" "every-node")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: vmi-router
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: vmi-router
      minAllowed:
        {{- include "vmi_router_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 25Mi
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vmi-router
  namespace: d8-virtualization
  {{- include "helm_lib_module_labels" (list .) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: vmi-router
  template:
    metadata:
      labels:
        app: vmi-router
    spec:
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      imagePullSecrets:
        - name: deckhouse-registry
      serviceAccountName: vmi-router
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: vmi-router
          args:
          - --db=/var/lib/kubevirt/vmi-router/routes.db
          {{- range .Values.virtualization.vmCIDRs }}
          - --cidr={{ . }}
          {{- end }}
          {{- with .Values.virtualization.internal.routeLocal }}
          - --route-local
          {{- end }}
          {{- include "helm_lib_module_container_security_context_privileged" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "vmiRouter") }}
          imagePullPolicy: "IfNotPresent"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: data
              mountPath: /var/lib/kubevirt/vmi-router
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
              {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "vmi_router_resources" . | nindent 14 }}
              {{- end }}
      volumes:
        - name: data
          hostPath:
            path: /var/lib/kubevirt/vmi-router
            type: ""
{{- end }}
