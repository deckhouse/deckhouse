{{- define " image-digest-check-resources" }}
cpu: 50m
memory: 100Mi
{{- end }}

{{- if and (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") (.Capabilities.APIVersions.Has "autoscaling.k8s.io/v1/VerticalPodAutoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name:  image-digest-check-webhook
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "image-digest-check-webhook" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: image-digest-check-webhook
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "image-digest-check"
      minAllowed:
        {{- include "image-digest-check-resources" . | nindent 8 }}
      maxAllowed:
        cpu: 200m
        memory: 150Mi
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-digest-check-webhook
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "image-digest-check-webhook")) | nindent 2 }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      heritage: deckhouse
      module: {{ .Chart.Name }}
      app: image-digest-check-webhook
  template:
    metadata:
      annotations:
        checksum/extension-apiserver-authentication: {{ .Values.global.discovery.extensionAPIServerAuthenticationRequestheaderClientCA | sha256sum }}
        checksum/certificate: {{ include (print .Template.BasePath "/image-digest-check-webhook/secret.yaml") . | sha256sum }}
      labels:
        heritage: deckhouse
        module: {{ .Chart.Name }}
        app: image-digest-check-webhook
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: deckhouse
              topologyKey: kubernetes.io/hostname
      {{- include "helm_lib_tolerations" (tuple . "any-node" "with-uninitialized") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      serviceAccountName: image-digest-check-webhook
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: image-digest-check
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_image" (list . "ImageDigestCheckWebhook") }}
        args:
          - -host=127.0.0.1
          - -port=9443
          - -cert-dir=/etc/webhook/certs/
        env:
        - name: DEBUR
          value: "yes"
        ports:
          - containerPort: 9443
          - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 12 }}
{{- if not (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "config-validator-resources" . | nindent 12 }}
{{- end }}
      volumes:
      - name: webhook-certs
        secret:
          secretName: image-digest-check-webhook-tls
