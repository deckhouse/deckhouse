artifact: distroless-cni-flannel-deps-artifact
from: {{ .Images.BASE_ALPINE }}
git:
- add: /modules/035-cni-flannel/images/flanneld
  to: /workdir/
  includePaths:
  - '**/file-whitelist'
shell:
  install:
    - cd /workdir
    - apk update
    - apk add rsync
    - apk fetch -R -o . iproute2-minimal iptables ip6tables conntrack-tools
    - mkdir /apk && for apk in *.apk; do tar -xzvf "$apk" -C /apk; done
    - mkdir /filtered-apk && rsync -av --include-from=file-whitelist --include='*/' --exclude '*' /apk/ /filtered-apk/
    - |
      for cmd in iptables iptables-save iptables-restore ip6tables ip6tables-save ip6tables-restore; do
        ln -f -s /iptables-wrapper "/filtered-apk/sbin/${cmd}"
      done
      touch /iptables-wrapper
---
artifact: entrypoint-artifact
from: {{ .Images.BASE_GOLANG_19_ALPINE }}
git:
- add: /modules/035-cni-flannel/images/flanneld/entrypoint/
  to: /workdir/
shell:
  install:
    - apk add --no-cache git
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o entrypoint main.go
---
image: {{ .ImageName }}
fromImage: common/distroless
import:
- from: quay.io/coreos/flannel:v0.15.1-amd64@sha256:a3ebdc7e5e44d1ba3ba8ccd8399e81444102bd35f5f480997a637a42d1e1da6b
  add: /opt/bin/flanneld
  to: /opt/bin
  before: setup
- artifact: distroless-cni-flannel-deps-artifact
  add: /filtered-apk
  to: /
  before: setup
- artifact: entrypoint-artifact
  add: /workdir/entrypoint
  to: /
  before: setup
- image: common/iptables-wrapper
  add: /iptables-wrapper
  to: /iptables-wrapper
  before: setup
docker:
  ENTRYPOINT: ["/entrypoint"]
