---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src
  excludePaths:
  - "**/*.md"
  - "**/*.yaml"
  stageDependencies:
    install:
    - go.mod
    - go.sum
    setup:
    - "**/*.go"
shell:
  install:
  - cd /src
---
image: {{ .ModuleName }}/{{ .ImageName }}-build-artifact
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/golang-alpine-svace" }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - cd /src
  - export GOPROXY=$(cat /run/secrets/GOPROXY) CGO_ENABLED=0 GOOS=linux GOARCH=amd64 
  - |
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags "-s -w" -o /smoke-mini .`) | indent 6 }}
  - chown 64535:64535 /smoke-mini
  - chmod 0700 /smoke-mini
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-build-artifact
  add: /smoke-mini
  to: /smoke-mini
  before: setup
git:
{{- include "image mount points" . }}  
imageSpec:
  config:
    entrypoint: ["/smoke-mini"]
