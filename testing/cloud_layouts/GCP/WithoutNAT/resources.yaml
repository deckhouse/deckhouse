---
apiVersion: deckhouse.io/v1
kind: GCPInstanceClass
metadata:
  name: autoscaler
spec:
  diskSizeGb: 40
  machineType: n2-standard-2
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: autoscaler
spec:
  cloudInstances:
    classReference:
      kind: GCPInstanceClass
      name: autoscaler
    maxPerZone: 1
    minPerZone: 0
    zones:
      - europe-west3-a
  disruptions:
    approvalMode: Manual
  nodeTemplate:
    labels:
      node-role/autoscaler: ""
    taints:
      - effect: NoExecute
        key: node
        value: autoscaler
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: system
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: GCPInstanceClass
      name: system
    maxPerZone: 1
    minPerZone: 1
    zones:
    - europe-west3-a
  disruptions:
    approvalMode: Manual
  nodeTemplate:
    labels:
      node-role.deckhouse.io/system: ""
    taints:
    - effect: NoExecute
      key: dedicated.deckhouse.io
      value: system
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: GCPInstanceClass
metadata:
  name: system
spec:
  diskSizeGb: 40
  machineType: n2-standard-4
# move ingres from resources yaml for testing dhctl configuration with 3-rd party resources
---
apiVersion: deckhouse.io/v1
kind: NodeUser
metadata:
  name: user-e2e
spec:
  uid: 10056
  sshPublicKeys:
  - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHv4oItTf1HuXU5T7Ly8/8Fpaxzf0cuAmLElP9R+R+A0 root@9c60180db21d"
  passwordHash: "$6$vUn3pWjfLzk8iARF$JTR4j5IV0u5aD7O/xK8ZBN4ie/1TE1YwLzfPutpJ4BCJozy1Rgw.Pl4x6gDiUwsPyQcylCuf/oxbL0iMqFdPL/"
  isSudoer: true
---
apiVersion: v1
kind: Secret
metadata:
  name: dotfile-secret
data:
  .secret-file: dmFsdWUtMg0KDQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dotfile-cm
  namespace: d8-system
data:
  .file: "content"
---
# testing creating multiple resources for one non exists resource
apiVersion: v1
kind: Namespace
metadata:
  name: test-ns-with-multiple-resources
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: application-controller-sa
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-application-controller-sa
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller-sa
  namespace: test-ns-with-multiple-resources
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-application-controller-sa
  namespace: test-ns-with-multiple-resources
  annotations:
    kubernetes.io/service-account.name: argocd-application-controller-sa
type: kubernetes.io/service-account-token
