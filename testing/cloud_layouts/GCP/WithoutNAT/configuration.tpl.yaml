---
apiVersion: deckhouse.io/v1
kind: ClusterConfiguration
clusterType: Cloud
cloud:
  provider: GCP
  prefix: 'a${PREFIX}'
podSubnetCIDR: 10.111.0.0/16
serviceSubnetCIDR: 10.222.0.0/16
kubernetesVersion: '${KUBERNETES_VERSION}'
defaultCRI: '${CRI}'
clusterDomain: "cluster.local"
---
apiVersion: deckhouse.io/v1
kind: InitConfiguration
deckhouse:
  devBranch: '${DEV_BRANCH}'
  imagesRepo: dev-registry.deckhouse.io/sys/deckhouse-oss
  registryDockerCfg: '${DECKHOUSE_DOCKERCFG}'
---
apiVersion: deckhouse.io/v1
kind: GCPClusterConfiguration
layout: WithoutNAT
sshKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDT7Y2xnnixeZHp3biNEUqFzvq/lu2y66SWuTQS6AQOGEIok0Ep56b0UtPoqA6EIXRS9JJOegDpK3UxiDGlxNPIaiq7QGM7qTH/rJ3NsgMT7MLOnK3VQ/PNM6iuPS2jwmd/VwcgjR44s+uLBS8vsJnP7NT5ymnR72b1vuIDAih5OQkkSg26z84fpLVbKsnImny1TdPlVfR5SyUXUZaDn/JlYC4eraG5pp0fqyUpo39KsBaQo2ngLLFOsyzKz1hjB+dGaBlRdJOXj4AP8d48h8Qg+6b1mCDqsctK3SGq05NREgSjZ0J3opoaB2DBd7ztHlhYatjoCHfsDxcByJnqT5w+EqyruiysxOY3j6EC0GqBQoGT744ugBK0Oy1KOBIMIMyJfrQ62QGsmmsYRg5PQK2bOjLGpSHc4Yys3TMVkMLBFS/9pNGI9EDDPZwkeOM0hN1g/vqzOz6Uiw+g347RkeCB/95G9+9oxh7MkPcies8I4uJVJGSgxKEes58U2+krb+2hKZiXblO81sAMwB3nIRs3NizuAGOtu0ppsvs2GbZhpIvT5om4onvniP866Pd7FLm37guMxh/cx9/n3qvaTkpgcDWZWtpk8Cfj2std6AEwE8GY+YQfCmcMOZXam6/qO5FUfQFT2WHTDPBTPGr7yjRdGsfwtZLwM0kRVN4ZBx/YEw== root@c4e850b2e8ac"
subnetworkCIDR: 10.36.0.0/24
masterNodeGroup:
  replicas: ${MASTERS_COUNT}
  zones:
  - europe-west3-b
  instanceClass:
    machineType: n1-standard-4
    image: projects/ubuntu-os-cloud/global/images/ubuntu-2404-noble-amd64-v20240523a
    diskSizeGb: 50
provider:
  region: europe-west3
  serviceAccountJSON: '${SERVICE_ACCOUNT_JSON}'
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: deckhouse
spec:
  version: 1
  enabled: true
  settings:
    highAvailability: false
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: global
spec:
  enabled: true
  settings:
    modules:
      publicDomainTemplate: "%s.k8s.smoke.flant.com"
  version: 1
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: flant-integration
spec:
  enabled: false
# move ingres from resources yaml for testing dhctl configuration with 3-rd party resources
---
apiVersion: deckhouse.io/v1
kind: IngressNginxController
metadata:
  name: nginx
spec:
  ingressClass: nginx
  inlet: LoadBalancer
  enableIstioSidecar: true
  nodeSelector:
    node-role.kubernetes.io/master: ''
  tolerations:
    - effect: NoSchedule
      operator: Exists
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: istio
spec:
  version: 2
  enabled: true
  settings:
