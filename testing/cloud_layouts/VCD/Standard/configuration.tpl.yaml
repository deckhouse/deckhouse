apiVersion: deckhouse.io/v1
kind: ClusterConfiguration
clusterType: Cloud
cloud:
  provider: VCD
  prefix: '${PREFIX}'
podSubnetCIDR: 10.111.0.0/16
serviceSubnetCIDR: 10.222.0.0/16
kubernetesVersion: '${KUBERNETES_VERSION}'
defaultCRI: '${CRI}'
clusterDomain: "cluster.local"
---
apiVersion: deckhouse.io/v1
kind: InitConfiguration
deckhouse:
  imagesRepo: ${REGISTRY_URL}/sys/deckhouse-oss
  registryDockerCfg: '${DECKHOUSE_DOCKERCFG}'
  devBranch: '${DEV_BRANCH}'
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: global
spec:
  enabled: true
  settings:
    modules:
      publicDomainTemplate: "%s.k8s.smoke.flant.com"
      placement:
        customTolerationKeys:
          - node
  version: 2

---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: cni-cilium
spec:
  enabled: true

---
apiVersion: deckhouse.io/v1
kind: VCDClusterConfiguration
layout: Standard
internalNetworkCIDR: 192.168.254.0/23 # 192.168.254.0/24 - dhctp, 192.168.255.0/24 - metalb
masterNodeGroup:
  instanceClass:
    storageProfile: Fast vHDD
    sizingPolicy: ${VCD_ORG}-MSK
    etcdDiskSizeGb: 10
    rootDiskSizeGb: 50
    template: private-templates/Ubuntu 24.04 Server (20240628)
  replicas: ${MASTERS_COUNT}
provider:
  password: ${VCD_PASSWORD}
  server: ${VCD_SERVER}
  username: ${VCD_USERNAME}
  insecure: true
organization: ${VCD_ORG}
virtualApplicationName: deckhouse-e2e
virtualDataCenter: ${VCD_ORG}-MSK1-S1-vDC2
mainNetwork:  deckhouse-e2e
sshPublicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCxvEtHR2d9rO6F3ooHAWFxIJdMKAgNVGx5cbP3F576ltMsUauBHAC02ti5vCggORHJlq3BmAyrDXLbfDFS+evxL8oOGEVFlp+lHiUSTQZCxAnhJFVkjgJ8poCYno35ZYhlOTZGI6fqIWV2HuHIJSk3fL0rqRwjCVV2pqQniR6SYUNYISN/RmPnchGVFw4mRLo5HxkXHVPBE3OSX7ihODhS09c+8nyErd8iDf8YljFqB8Oepe3f7nwxWQM/mUjsU70hAL4DEuORrtPwSqeLcUrX4uzc3vQFzPR81AdbtAZ8Vh4CbF7v5dLIqKR1AkCGc8nENEGLu/AWbCjyb9epqmbjKpMT+ogyzJZjNlRjJ2PaImIUhGCMQ8wN1W68pB6Kx9rXKYXpK57nwWwbG33JrmMFWZK7Lj4oRNJZjHRRhOGccCT1gXATmTXzCikehBV4KVHfmOjzK1K0lfUb5DihfhXoAQ+YCIwZaUwtL5BBeq6oRuD1UxsNcczfjgZ22bmdDDs= root@04c20a0dffea"
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: deckhouse
spec:
  version: 1
  enabled: true
  settings:
    highAvailability: false
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: flant-integration
spec:
  enabled: false
---
apiVersion: deckhouse.io/v1alpha1
kind: ModuleConfig
metadata:
  name: istio
spec:
  version: 3
  enabled: true
  settings:
---
apiVersion: v1
kind: Secret
metadata:
  name: prom-rules-mutating
  annotations:
    dhctl.deckhouse.io/bootstrap-resource-place: before-deckhouse
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lVRGhaZ1RFalk3NFRLeVNiaGk0RE5JYTVuU0N3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1BqRThNRG9HQTFVRUF3d3pVMmhsYkd3dGIzQmxjbUYwYjNJZ1pYaGhiWEJzWlNBeU1EWXRiWFYwWVhScApibWN0ZDJWaWFHOXZheUJTYjI5MElFTkJNQjRYRFRJMU1EWXdPREl3TVRRME5Gb1hEVE13TURZd056SXdNVFEwCk5Gb3dQakU4TURvR0ExVUVBd3d6VTJobGJHd3RiM0JsY21GMGIzSWdaWGhoYlhCc1pTQXlNRFl0YlhWMFlYUnAKYm1jdGQyVmlhRzl2YXlCU2IyOTBJRU5CTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBalVndUt6RGhQcngvTlBDd2ZjSVdIZmxzYW5oY29jcHdTYkJraFQwRW1DaXgxc2l5M0RqTWZZUXl0VmMvCmpxUTV1UmpIZHdyWGZLV0paSUZ3QnpFSkg0UGY2ZG11QjJaL1k2ZnF4OW1HdGdod0h3V3lNSDVON1hibWx0TzIKRGVIY0JYK2FtYnZ0WDJnNVlIZ0FvY2tpSm5obHpJejErOXBqU3RuTWZOMklEdU4wY2tuOXZhL29KZjNSU0FkSwpJVis3ejBVQk45QnpEdnFUZU92YWxnN0czOGlFM203bzY3d1RZS0pIRmlSQ3V1UTFFM05oTDk0ejR0MzdjNm0zCk9pbEF3bmE3dXdqaitxY0Z6aW50bmxod2tRc2NuL1RXN1IycU1zSXhwMWdmME1Qdk1zYW52VCtJNFhXRXNoRzIKVEx2aDVRSlhIekxoaVhCdzRaT3pKaVhaVlFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVWg2YTBFZVpXMjQxQwpmazZkUXduRFp0eXdVNW93SHdZRFZSMGpCQmd3Rm9BVWg2YTBFZVpXMjQxQ2ZrNmRRd25EWnR5d1U1b3dEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQU1lSWoxR3Rja0taNnVEVjNJOW8KLzF6NEZkNjF6WVp0LzJWNkhWZ3pMZURLTTdMZU1iU3h4Z2U0clNvUERPaGhBZ0ErSVBZMXpRWHNWaEhOQnFzeApwS3lyMy9EWGdVZEU0T1R6YU1KTHBwcjJvbXRIUVdvTmxPSlZ0TmlOemMxUnlqUGxzOXFBZ3MwbzZiekttV3cxCm96bDEzWXFwWFZzaFVoUWRKS3pRcU5GQ04yczlZTW5hTzJiLzY4SVlXZ05qRFRrelJyVThwNHpjLzBxUEpkUm8KL29PZTc5SkdIclFIeFpEQ3B0OS9NRTR1T3ZxUURHdDJXUi9Mbi9LSlVCMFVNNnNCcnJET2tyeHQ2VjFYVHp1cgpKWnRTeGpNS0xpSnNpbjVub2ViM2lORzNtOGdTVmdqa3grQ1JyVS82QWRqeEFSTTZ6UFM1aXU0SHozaExwalBLCnd3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwekNDQXJ1Z0F3SUJBZ0lVWDVHeDBaOWFSZkdNU2diZ3lhYmpUSHF5bU1Fd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1BqRThNRG9HQTFVRUF3d3pVMmhsYkd3dGIzQmxjbUYwYjNJZ1pYaGhiWEJzWlNBeU1EWXRiWFYwWVhScApibWN0ZDJWaWFHOXZheUJTYjI5MElFTkJNQjRYRFRJMU1EWXdPREl3TVRVME1Gb1hEVE13TURZd056SXdNVFUwCk1Gb3dKekVsTUNNR0ExVUVBd3djYlhWMFlYUnBibWN0YzJWeWRtbGpaUzVrWldaaGRXeDBMbk4yWXpDQ0FTSXcKRFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU4yK3VxTktJOVhtL2pMcFlmZ3p2ZnJFUFhrWQp1UnRhNzVWYTc2eWpvS1Z4YlRBbFNqZ2duWmQ1WEhqOVF4aW9tTTAzQzJ2aUVlRThhSXpydVFlUXFvYjFLWmVFCm1hTm5jc21qWHQ0WU5jSjNOTlFoOXhBTGMvMlp2MGIzVjBia2lheUdKM3hieWJVZEpLQkJnV3dZZDNJWmxUK2oKc2xManlCbnBtdERmeXMzWUNMUFhyTVZ0ano2eFJZL1dMWlY5MHRLSG9nb1cxSnRzWW8zam90SXIvR21WTzZTZgpJSzNtSVhCN1BrTENRWDc2S1hleHZxZG9yZEZ6YmV6Z2lNaDdNNW1NbkROUTd3UFBiT3Jqa1A5REY5OEFIeWlTCnJCeVhqY0pVdDczZXJVdkhqdmd5T1VNRFlMWGtSYVFjNEg2d0RWWHpNOVhEVDJWYTF0QnZZVGlPRHZjQ0F3RUEKQWFPQjN6Q0IzREFmQmdOVkhTTUVHREFXZ0JTSHByUVI1bGJialVKK1RwMURDY05tM0xCVG1qQUpCZ05WSFJNRQpBakFBTUFzR0ExVWREd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEJ0QmdOVkhSRUVaakJrCmdoaHRkWFJoZEdsdVp5MXpaWEoyYVdObExtUmxabUYxYkhTQ0hHMTFkR0YwYVc1bkxYTmxjblpwWTJVdVpHVm0KWVhWc2RDNXpkbU9DS20xMWRHRjBhVzVuTFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1cwpiMk5oYkRBZEJnTlZIUTRFRmdRVUFpd3l1aDcrRFhWMzZwRW4ybU9uZXE3Zi9sVXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUd5cnpqRFV2eC9JRWxCcHdUc2tvaXVvWU5ib29HVTk5OEZxejc2ZHV4Z0hRTXdScngvd05mb0MKWFNETVAxb01aUkpWT1ozdEhwRjFGV2ZwN1BpMk5CTDZtcnpkcVJVRmJmbDlDQUlUZ3h4d1I3ZTdFYXowZDZadwplSS9DNHgraTlScTVDT1JrL3A2VnZyY2tCMmh5L3MxUjhYdGxad1ZaQzRJOWpsbE9MbE5OcDNSUUVnMUZyNnZiCllqbVQ1VkpmZEdwc2s4Qnk3bHM1N2paeStRTjRlUkFmbFg5SlZMV21iVGw0MWtSUnFPOFVBdUxlTERTcWlRY0IKS3JqajV5WGc2eHFvUjVPcFVFZ0xRcVZNcTdqVkQybmVkQnNBWi9pNk01VGliSk9hRkN1QXJWSXY3UmFjZkhIMwpBSkh5aGwrRWx1ZUI1dk1QMU5iSzcxaHFyMko0VDVJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRGR2cnFqU2lQVjV2NHkKNldINE03MzZ4RDE1R0xrYld1K1ZXdStzbzZDbGNXMHdKVW80SUoyWGVWeDQvVU1ZcUpqTk53dHI0aEhoUEdpTQo2N2tIa0txRzlTbVhoSm1qWjNMSm8xN2VHRFhDZHpUVUlmY1FDM1A5bWI5RzkxZEc1SW1zaGlkOFc4bTFIU1NnClFZRnNHSGR5R1pVL283SlM0OGdaNlpyUTM4ck4yQWl6MTZ6RmJZOCtzVVdQMWkyVmZkTFNoNklLRnRTYmJHS04KNDZMU0sveHBsVHVrbnlDdDVpRndlejVDd2tGKytpbDNzYjZuYUszUmMyM3M0SWpJZXpPWmpKd3pVTzhEejJ6cQo0NUQvUXhmZkFCOG9rcXdjbDQzQ1ZMZTkzcTFMeDQ3NE1qbERBMkMxNUVXa0hPQitzQTFWOHpQVncwOWxXdGJRCmIyRTRqZzczQWdNQkFBRUNnZ0VBYVVUNUpMajNQejU4a2gzaW9TcXJONmUvQ1VTMzUra3BVUzNORjVmTWxZNCsKQ0R2RHV0YWRDZ0tXNkdkUFdaNzhmM3Z3dzZRYzJlRk1QdzVQRm16U3orUUdmVVI1amEzNFBBcC9hSTkwd2gvRwphQ2pCdWcrOTNuaUZhb0xVbjdheU4wR3U4Q1pCSVdhMjh3OTJDaU9wWFBVUk9oZVQraTdoMlk5aHJHUjV5bk14CklmMDdseWZMeXFHSjczdEFuZXBvMG41ZTVZYjZxbjBVc2JSSnhHSk9NeTAzYklDellUcDNwV09VYkhnOVozN2MKYjdodmJTdGFycDNlMjhaT3o2aU90T1E5aFlOWUQvN254bE1SK3VJTlZMMlFweDBMYXhwNTJvNEszb2VCUFhnbwo5d2RJSEIyMUZLcUZkZlEyMWdUWDhzS2JkMDJrUkZGV2c0aCtTRXRxalFLQmdRRHVkaU9IaFhRWi94T1lkL2NwCjl2cDlLZHFFcGRyRFhOVTN0ZmhoRHcrcEtFTFArcWFmTTN5UzJtVEFuaytYZGZJUFl6WG9Qdm1QcnQ3MWJvSE4KY1NkZ3owdlBrVU9FdWxVTHYxNzh0U3luVTY1MGp3TCtRVExoZm5McWdYMTdxQ0o5Ynl4OW95bExZdmhVdjVsMgpQZFlnS2ZubTdVWWpkNE1OZlFncXowUW1yUUtCZ1FEdURkaHZjdHEvSlllZ3pOWXNFRVNLQXZxcnI5UUREQWUvCmpiUnZ6Q3RYUzV5czE0UlZMWmhXNXpELzNxZ3drSUhBbC9CSEdzeHprcWZvOXJqOWlZeWkybHNzOGppTkNUcDIKK3lkZUhwR0Q3VzNKaEE4djdtMExvMVdNYU12cVpVSm1pUC95aFF6TjcrTGFGWkdHSnpzMWNvMEF5QlBCWU5ibApJbEptbkJlVXN3S0JnQ0NmblFDL2EwRGJPczBUTElkYk9LM0MraGhIc0lRbHdTM2NBVjBWK0dpR0Q0M3dscmNWCkRpZnhKUE9OTlFwZG9uNGtibzJWZ0FMK1E1YUVSZEhiZHkyeGJvZTVNZW1JckhYcytvdk1KWTNHendrM1A0dVYKVStheHEvc1ZPQnVneHdjdUhJSWJ2bHlINzcxNGNRQlNPV2N4RnZWVzVNK1pYQjZPU24zQTJXd0pBb0dCQU9iVgpQQ05OcnZtYzdiZ3FDQit3SXBYbEw2YmRsMnJnOW41emJSemZVTU9VU1RkOHdCQk1aeVVWaDNrRk1mZnRtRFBsCjRSTkIxRERaYThKRnc3bnQ4QlpXUUFVRVYzdkRFQk1obE5uNk1FWktLNlExVHZpK2JMVFZTL1ljQkdla2lzK2MKVnZ1V3NvVGE4UkZoeXJ2WVBOeWwyRDZDeEUxR2x2cVczbW9yUDk1ckFvR0FXNXIrbnpyYnpFMGF2bUZKcmZ0OQp3Y0xlQk14U0xuN1JhYzJxdGlwWDM5a3FTTVd1TGVyV1BFejM2Y1FKUFEreWk2SUlNV3JDOXRyVE95SCsvaVZGCkpTb05yekFvZWFGTkd4UFUzZEpQZGFDbVZpUit6enorTHBBeHQ4ZzRXK2NTUUpneEdVT0RTWE05dTBrRXo4S00Kd1hpL0xNSHhsWVJDWXlic0JSeFZWS2c9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-rules-mutating
  labels:
    app: prom-rules-mutating
  annotations:
    dhctl.deckhouse.io/bootstrap-resource-place: before-deckhouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prom-rules-mutating
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prom-rules-mutating
    spec:
      nodeSelector:
        node.deckhouse.io/group: master
      imagePullSecrets:
        - name: flant-regcred
      containers:
        - name: shell-operator
          image: registry.flant.com/deckhouse/ssdlc-tools/tools-base-images/prod-image:e2e_prometheus_rules_mutating-v0.1.0
          imagePullPolicy: Always
          env:
            - name: SHELL_OPERATOR_LISTEN_PORT
              value: "11115"
            - name: VALIDATING_WEBHOOK_LISTEN_PORT
              value: "11114"
            - name: SHELL_OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: Debug
            - name: VALIDATING_WEBHOOK_SERVICE_NAME
              value: mutating-service
            - name: VALIDATING_WEBHOOK_CONFIGURATION_NAME
              value: "prom-rules-mutating"
          livenessProbe:
            httpGet:
              port: 11114
              path: /healthz
              scheme: HTTPS
          volumeMounts:
            - name: validating-certs
              mountPath: /validating-certs/
              readOnly: true
      serviceAccountName: prom-rules-mutating
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - operator: "Exists"
      volumes:
        - name: validating-certs
          secret:
            secretName: prom-rules-mutating
---
apiVersion: v1
kind: Service
metadata:
  name: mutating-service
  annotations:
    dhctl.deckhouse.io/bootstrap-resource-place: before-deckhouse
spec:
  ports:
    - name: webhook
      port: 443
      targetPort: 11114
      protocol: TCP
  selector:
    app: prom-rules-mutating
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prom-rules-mutating
  annotations:
    dhctl.deckhouse.io/bootstrap-resource-place: before-deckhouse
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prom-rules-mutating
  annotations:
    dhctl.deckhouse.io/bootstrap-resource-place: before-deckhouse
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations"]
    verbs: ["create", "list", "update"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["create", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prom-rules-mutating
  annotations:
    dhctl.deckhouse.io/bootstrap-resource-place: before-deckhouse
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prom-rules-mutating
subjects:
  - kind: ServiceAccount
    name: prom-rules-mutating
    namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  name: flant-regcred
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: '${FOX_DOCKERCFG}'
