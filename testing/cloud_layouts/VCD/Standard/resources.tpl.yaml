---
apiVersion: deckhouse.io/v1
kind: VCDInstanceClass
metadata:
  name: system
spec:
  rootDiskSizeGb: 30
  sizingPolicy: ${VCD_ORG}-MSK
  storageProfile: Fast vHDD
  template: private-templates/debian-12

---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: system
spec:
  nodeType: CloudEphemeral
  nodeTemplate:
    labels:
      node-role.deckhouse.io/system: ""
    taints:
      - effect: NoExecute
        key: dedicated.deckhouse.io
        value: system
  cloudInstances:
    minPerZone: 1
    maxPerZone: 1
    classReference:
      kind: VCDInstanceClass
      name: system
  chaos:
    mode: Disabled

---
apiVersion: deckhouse.io/v1
kind: IngressNginxController
metadata:
  name: main
spec:
  ingressClass: nginx
  inlet: HostPort
  hostPort:
    httpPort: 80
    httpsPort: 443
  nodeSelector:
    node-role.kubernetes.io/master: ''
  tolerations:
    - effect: NoSchedule
      operator: Exists
---
apiVersion: deckhouse.io/v1
kind: NodeUser
metadata:
  name: user-e2e
spec:
  uid: 10056
  sshPublicKeys:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDSNdUmV2ekit0rFrQE9IoRsVqKTJfR8h+skMYjXHBv/nJN6J2eBvQlebnhfZngxTvHYYxl0XeRu3KEz5v23gIidT21o9x0+tD4b2PcyZ24o64GwnF/oFnQ9mYBJDRisZNdXYPadTp/RafQ0qNUX/6h8vZYlSPM77dhW7Oyf6hcbaniAmOD30bO89UM//VHbllGgfhlIbU382/EnPOfGvAHReATADBBHmxxtTCLbu48rN35DlOtMgPob3ZwOsJI3keRrIZOf5qxeF3VB0Ox4inoR6PUzWMFLCJyIMp7hzY+JLakO4dqfvRJZjgTZHQUvjDs+aeUcH8tD4Wd5NDzmxnHLtJup0lkHkqgjo6vqWIcQeDXuXsk3+YGw0PwMpwO2HMVPs2SnfT6cZ+Mo6Dmq0t1EjtSBXLMe5C5aac5w6NrXuypRQDoce7p3uZP2TVsxmpyvkd6RyiWr+wuOOB3h/k8q+kRh4LKzivJMEkZoZeCxkJiIWDknxEAU1sl25W4hEU= e2e@nodeuser"
  passwordHash: "$6$vUn3pWjfLzk8iARF$JTR4j5IV0u5aD7O/xK8ZBN4ie/1TE1YwLzfPutpJ4BCJozy1Rgw.Pl4x6gDiUwsPyQcylCuf/oxbL0iMqFdPL/"
  isSudoer: true
---
apiVersion: v1
kind: Secret
metadata:
  name: dotfile-secret
data:
  .secret-file: dmFsdWUtMg0KDQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dotfile-cm
  namespace: d8-system
data:
  .file: "content"
---
# testing creating multiple resources for one non exists resource
apiVersion: v1
kind: Namespace
metadata:
  name: test-ns-with-multiple-resources
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: application-controller-sa
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-application-controller-sa
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller-sa
  namespace: test-ns-with-multiple-resources
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-application-controller-sa
  namespace: test-ns-with-multiple-resources
  annotations:
    kubernetes.io/service-account.name: argocd-application-controller-sa
type: kubernetes.io/service-account-token
