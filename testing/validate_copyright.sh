#!/bin/bash

# Copyright 2021 Flant CJSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -Eeo pipefail

EE_LICENSE='(?s)Copyright 2021 Flant CJSC.*Licensed under the Deckhouse Platform Enterprise Edition \(EE\) license. See https://github.com/deckhouse/deckhouse/blob/main/ee/LICENSE'
CE_LICENSE="(?s)\
[/#{-]*(\s)*Copyright 2021 Flant CJSC[-}\n#/]*\
[/#{-]*(\s)*Licensed under the Apache License, Version 2.0 \(the \"License\"\);[-}\n]*\
[/#{-]*(\s)*you may not use this file except in compliance with the License.[-}\n]*\
[/#{-]*(\s)*You may obtain a copy of the License at[-}\n#/]*\
[/#{-]*(\s)*http://www.apache.org/licenses/LICENSE-2.0[-}\n#/]*\
[/#{-]*(\s)*Unless required by applicable law or agreed to in writing, software[-}\n]*\
[/#{-]*(\s)*distributed under the License is distributed on an \"AS IS\" BASIS,[-}\n]*\
[/#{-]*(\s)*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[-}\n]*\
[/#{-]*(\s)*See the License for the specific language governing permissions and[-}\n]*\
[/#{-]*(\s)*limitations under the License.[-}\n]*"

function request_gitlab_api() {
  curl --silent -f -H "PRIVATE-TOKEN: ${JOB_TOKEN}" https://fox.flant.com/api/v4/projects/${CI_PROJECT_ID}/${1}
}

function check_flant_license() {
  filename=${1}
  if [[ $filename =~ ^/?ee/ ]]; then
    if ! grep -Pzq "$EE_LICENSE" $filename; then
      echo "ERROR: $filename doesn't contain EE license"
      return 1
    fi
  else
    if ! grep -Pzq "$CE_LICENSE" $filename; then
      echo "ERROR: $filename doesn't contain CE license"
      return 1
    fi
  fi
}

function check_file_copyright() {
  filename=${1}

  # Skip symlinks and other than files
  if [[ ! -f $filename ]] || [[ -L $filename ]]; then return 0; fi

  # Skip autogenerated file or file already has other than Flant copyright
  if [[ -n $(head -n 10 $filename | grep -E 'Copyright The|autogenerated|DO NOT EDIT') ]]; then return 0; fi

  if [[ -n $(head -n 10 $filename | grep -E 'Flant|Deckhouse') ]]; then
    if ! check_flant_license "${filename}"; then
      return 1
    fi
  elif [[ -n $(head -n 10 $filename | grep -E 'Copyright') ]]; then
    # Skip file with some other copyright
    return 0
  else
    echo "ERROR: $filename doesn't contain any copyright information."
    return 1
  fi

}

JOB_TOKEN=$1
SKIP_LABEL_NAME='Skip copyright validation'
hasErrors=0

if [[ -z $CI_OPEN_MERGE_REQUESTS ]]; then
  echo "There are no merge requests found"
  exit 0
fi

IFS=',' read -r -a MERGE_REQUESTS_ARRRAY <<<"$CI_OPEN_MERGE_REQUESTS"
for MERGE_REQUEST_ID in ${MERGE_REQUESTS_ARRRAY[*]}; do
  MERGE_REQUEST_ID=$(cut -d \! -f 2 <<<${MERGE_REQUEST_ID})
  MERGE_REQUEST_DATA=$(request_gitlab_api "merge_requests/${MERGE_REQUEST_ID}/" | jq -r '.')

  if [[ $(jq -rc --arg label_name "${SKIP_LABEL_NAME}" '.labels[] | select ( . == $label_name)' <<<${MERGE_REQUEST_DATA}) != "" ]]; then
    echo "Validation skipped..."
    exit 0
  fi
done

DIFF_DATA="$(git diff origin/main... --name-status -w --ignore-blank-lines --diff-filter=A | awk '{print $2}')"

if [[ -z $DIFF_DATA ]]; then
  echo "Empty diff data"
  exit 0
fi

for item in ${DIFF_DATA}; do

  pattern="\.go$|/[^/.]+$|\.sh$|\.lua$|\.py$"
  skip_pattern="geohash.lua$|Dockerfile$|Makefile$|/docs/documentation/|/docs/site/|bashrc$|inputrc$"
  if [[ "$item" =~ $pattern ]] && ! [[ "$item" =~ $skip_pattern ]]; then
    if ! check_file_copyright "${item}"; then
      hasErrors=1
    fi
  fi
done

if [[ $hasErrors -gt 0 ]]; then
  echo -e "\nFix the problem or use '${SKIP_LABEL_NAME}' MR label to skip."
fi

exit $hasErrors
