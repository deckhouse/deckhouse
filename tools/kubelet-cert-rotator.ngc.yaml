apiVersion: deckhouse.io/v1alpha1
kind: NodeGroupConfiguration
metadata:
  name: kubelet-rotator
spec:
  weight: 200
  bundles:
  - "*"
  nodeGroups:
  - "master"
  content: |
    CA_CRT="/etc/kubernetes/pki/ca.crt"
    CA_KEY="/etc/kubernetes/pki/ca.key"
    CA_CRT_BUNDLE="/etc/kubernetes/pki/ca-bundle.crt"

    CA_CRT_64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTGNMb21NMUZ4WUF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBeE1qZ3hOREUxTVRCYUZ3MHpOVEF4TWpZeE5ESXdNVEJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURINS9hMExLKzNFUWxQMWpjSzBxR0d2WXJWbmZLWGU3OVp3N3UwdVQvQ1ZsNFlBanptS3VpVk5adEwKR2lPRkp6VmVyNTF4YzkrYmNUSExTT3lPZWlRSHFDYVRUMEtIcFFYQjlOeW4vZk9aczh4aVl0c2FhNUkxL1YvVgpucWloZ1p6cGVYSCtYc1NHUXFZcmV0TVVwYXZYUDA0QWFMRmk1OXlVWjZNejRlQlQ3ZEVXOUp6aktXN0tpOFI5CmlqdlNVZFlJTVZPU0dXV3Zwb0hMaWZqQ3NLN3F6RTBZdnBTdjc2cktLY1RvbzJ3NzJORHpPanNoeHpVV0RtNXAKN01TalQ2czFNckp4MWljeEFOK1BSZ2FSRGdrT1JKeDFsaWQvL0xUaVJaa0lIbjAyZjY3M1BsS3ZleC9Od2JGdAo3Szl5R3VSVnFjcWpXTlAzU0krODZmbGhrMkxYQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUeERkQlYwakYwcm80a1ZoNDl5REVnZnQrMjBEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXlhMUJkSXNncQpudWRxRlUrTlNKSmpmNnVvWTZsekpZNHAySGhmZzNYWnBqVC9vUzBvekhZVEhXQnlUS0QyNVFEYWI0cHFxYmdoCjM0K1hreXNiUkxSQUVta3BHU3hJcXd5VkJJaFpMUkc4TU01VktxWGk3ZllVMXpGbDlucVRSSzA5TVF3TzA3Mk0KcWd6bGdQUFo0NXdlaG1TazkxUUk5aW1QM2JHR0ppeWxSUFR4TEd0SG12eDFZSGEvM0g4ck1WQml5aEZiWlVwdQowVFJSdUlqT0piR1o4cDN6YzV2eFJBRzdPUGFMVVR5cHVRMXNIQjFNWCsrNDg0UkF2cWtFSGg3R054VHltanBUCnpyS1NjOTBzYzVsYkJURjZ2UVBRRDZJbmNBbG0xaW1Jd1pxV3pNK0Y5VE43cy9nVlRqZmFlUDJ5WE56ZXN5NGkKKzZFOURDN1E2VUtzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    CA_KEY_64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeCtmMnRDeXZ0eEVKVDlZM0N0S2hocjJLMVozeWwzdS9XY083dExrL3dsWmVHQUk4CjVpcm9sVFdiU3hvamhTYzFYcStkY1hQZm0zRXh5MGpzam5va0I2Z21rMDlDaDZVRndmVGNwLzN6bWJQTVltTGIKR211U05mMWYxWjZvb1lHYzZYbHgvbDdFaGtLbUszclRGS1dyMXo5T0FHaXhZdWZjbEdlak0rSGdVKzNSRnZTYwo0eWx1eW92RWZZbzcwbEhXQ0RGVGtobGxyNmFCeTRuNHdyQ3U2c3hOR0w2VXIrK3F5aW5FNktOc085alE4em83CkljYzFGZzV1YWV6RW8wK3JOVEt5Y2RZbk1RRGZqMFlHa1E0SkRrU2NkWlluZi95MDRrV1pDQjU5Tm4rdTl6NVMKcjNzZnpjR3hiZXl2Y2hya1ZhbktvMWpUOTBpUHZPbjVZWk5pMXdJREFRQUJBb0lCQUVQYzB6dEhFRCt0WU9QaApiTDRYMHczU3VwYmFEOGl0RWNCL1dmRjRFZFQvVE9JSm9ITGlqaUpaR0diZWNNQjdGdnNWMHZUNHlTZ1R2VHV0CmZlREFSZ3J6WW1VUHV4NGhQMXNnck9lNnBqKy9jZHJVaEZ6cnQ2N3NYT1JBQUM4VHVSanBTWEY0Nm01Sm9lK1EKdXFkL3RsNVQ5ejdjUzV1djZvbld4T2lQL1g5LzJvdkR3clFaOWRzY01TS2VGdDdGd09WdXhjTnc5SnY2aG91egpuUWdzU2FBcXlzMnF4bGhOdjBnY1J1eCt4eDBha1FscUc3UERRR1BDSlZYbzZHei9CcDJxQ2dMcUEwMDc1UXlzClljZzh4MG9QNFlJYS9yVHBlazdXOVppbW5BSjRoQWxnaFRqNG5FM2lBMWVUY2lFamx4bWF6bXdlWDE4bmRaZloKcDJ4NnZJRUNnWUVBMlZjdWtoODZHTE1jUVJqa3NSRUhIamhhY3A2QXRsb0w4U1Y0U0oxKzh1citLNks0YU5BUQoxSHBUTGppZHZoZUtMOVpjTXkzVld6cjJLUG5EWU1IZFlIV3VQYnRzWTFhVElNR0Y5amIvcEZobWJhdXFnOFNZCnlNbG44VGJRam5iOTIwQ2R3dmdvcXRDeHJEOGRhOHM3QklxWmNzQmgvbG9kWGduU0IwWEFRZGtDZ1lFQTYzYmoKRG5MM2Fobk9MK29oK3hpWTRBQ2hvcHNsNU5wRExXK01lb2JZK1hDRkFacjNIdHdNbDZYMWg1VDhLRUIwd3NJbwpvSm9GVVlsU2gwRnJPalJraU5SL2ZSL2NIWjBoYUN6VEl2eEZRemRsZGIwcVVZZVA3c05WZFRGY0RpQXo5NWVsCkZvNlJSTVVkRStTZzhSNlI1d0Z5QXU4UFgxcWdzUVJpbS9mbUxDOENnWUVBa2t4NFFjNFpXbFQrdU9jYjBnRUgKVEpWY2RQa3k1UXk2S3lvd3pKaVB3czdpSnRkUzBPTDE0VUV5U3RPN2d5RHZXUUl2Y0JmekhZVVQvRU1iL0Q2agpXUEgrUnZtcG5UakNzdkx4ek9uNnJWTUFKK1M5VkJON1VQVWFMYW5iTzNybnFMWFhQRTIxZWo0ZXl6WjFCSUY2CkNiV09VMHNpNjRjWGE1eXFyMUNKZVFrQ2dZRUEwbk4wNXdJc1RtRjRIdTBscC9aSkZOU2JvdWtHU25BbDRLTTEKcklGL3hob2lWdGY1alZSaDBOeWRBYXhRWDIyVXJrbTQ1Q29sSE1ZZXhCTGRVcTFuT2NDcm5kcnU4bXp4WWRuRwpjQnVIa0ZjZjBNYmMzdmZKMWo0eDBFZm9uaHQ4Tnd3TG1vaWNJQm9KTGpHSEExc3VUb2pGTFFnYjlqN2JKcnZqCm9zRkRzVE1DZ1lFQXg5Z1B4WFdGMnhsUzM1WXdNK3FER2hSeXJjQk4rc1FwaExEenoxRHFjUG4yY095ak95RWsKSlFsTS9FS1RIS2JadmxmamhJanM1a3VkSGdRZldLU3dMOVV6U2gxeG1jQk5PdS85bWpmdWhTUnNpVXBrNExJYwo1b2dqWUU0SHBFT0lOZ2lqbmtPR1lGWm5lb3RFL080UWlwWmZMb3ovQ1VEOWNucjJ3cVBiTTBjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    CA_CRT_BUNDLE_64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSG1xazVDNE53WW93RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBeE1qZ3hNekU1TVRsYUZ3MHpOVEF4TWpZeE16STBNVGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURrcmdoUmFLYVdMKzltQXQxLzBlRFFvYnZHK3puVzVWMktzY3g5dGhGYWh5bjFqSDI1WC8xZXAxYm0KU2luNFBHWWxCbjk1bi9GUllpYS9zazQrdFVicDlhZFMvZlpBelFBTU9BSTJ2Q2lXMUtqMHZkdHl6TTdJOWM4SgpRU3FLSG9wOTAvdmh6bWRBa1FhR2ROQlhCZitZR2xkakJTWEcrZGhqTUsrazRIWG1EZnRoUG9sTDBXMmpUbVVnClBPRnB5N0dmTVU3SkZFaTNyWlE0QmprbGJTK0dFVU95VkNmUkkrNk52bjFHMWxNTU50MkhMSURlRTZDRWV6ZTAKVXpkNmlmWEhmOTBrbE1nN05hNVJIMmNiQVVoSUlla3Myc2d5d1Nqb2NybmF6L3M4RjluUmVjUEtHTXBVY0lWbQpZOXlpU1p0SkNvQmJ6MU9kVUVmMnJYdjFyRk9kQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUNTB6cmVleTdGSWZMTGxqcDdtSnZFNHFhMTBUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlpZYTQ0ODRYVAovak9xVTZWUmVlQmNlcUxpVlp0RDg5Mll0bGF1Y2Q2cWxRUHdMMWpCVlZIU0E1OXlrWmIxOG5mL3l0NVJyeWoxCldybllHcXQzUnZReUdQZlVhcm1CRkF4V2U1dGlUdTB5S2krWFVBYUNnV3htVXRiK3BCYzhjSlZJUG5rUkJqdisKUlNLL21RY1lkdytaODZudHpQU2xVZEJGbGgyNHRsTTFleWlHRzNsTFhkMnNIb1pENFF0RGp1dzJoYWVJNDRmZQpIMmJCeDdaMHErdm9Ydzhla3BWSFEyUklaL1AzbWJwZkhvdzBURGJtREdwc1lZWUk5V3RIUTVON0Q3WTJaV2pzCmdvSHkvNzNwUGdjcVpJdHdqQ1YrTVFkRzVVOTlacWYrMEREa3o4dHNSSTZUVjRFc01UM3ZpVkpXSDU1K1J6MUIKakFKcituQUE2VzFzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTGNMb21NMUZ4WUF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBeE1qZ3hOREUxTVRCYUZ3MHpOVEF4TWpZeE5ESXdNVEJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURINS9hMExLKzNFUWxQMWpjSzBxR0d2WXJWbmZLWGU3OVp3N3UwdVQvQ1ZsNFlBanptS3VpVk5adEwKR2lPRkp6VmVyNTF4YzkrYmNUSExTT3lPZWlRSHFDYVRUMEtIcFFYQjlOeW4vZk9aczh4aVl0c2FhNUkxL1YvVgpucWloZ1p6cGVYSCtYc1NHUXFZcmV0TVVwYXZYUDA0QWFMRmk1OXlVWjZNejRlQlQ3ZEVXOUp6aktXN0tpOFI5CmlqdlNVZFlJTVZPU0dXV3Zwb0hMaWZqQ3NLN3F6RTBZdnBTdjc2cktLY1RvbzJ3NzJORHpPanNoeHpVV0RtNXAKN01TalQ2czFNckp4MWljeEFOK1BSZ2FSRGdrT1JKeDFsaWQvL0xUaVJaa0lIbjAyZjY3M1BsS3ZleC9Od2JGdAo3Szl5R3VSVnFjcWpXTlAzU0krODZmbGhrMkxYQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUeERkQlYwakYwcm80a1ZoNDl5REVnZnQrMjBEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXlhMUJkSXNncQpudWRxRlUrTlNKSmpmNnVvWTZsekpZNHAySGhmZzNYWnBqVC9vUzBvekhZVEhXQnlUS0QyNVFEYWI0cHFxYmdoCjM0K1hreXNiUkxSQUVta3BHU3hJcXd5VkJJaFpMUkc4TU01VktxWGk3ZllVMXpGbDlucVRSSzA5TVF3TzA3Mk0KcWd6bGdQUFo0NXdlaG1TazkxUUk5aW1QM2JHR0ppeWxSUFR4TEd0SG12eDFZSGEvM0g4ck1WQml5aEZiWlVwdQowVFJSdUlqT0piR1o4cDN6YzV2eFJBRzdPUGFMVVR5cHVRMXNIQjFNWCsrNDg0UkF2cWtFSGg3R054VHltanBUCnpyS1NjOTBzYzVsYkJURjZ2UVBRRDZJbmNBbG0xaW1Jd1pxV3pNK0Y5VE43cy9nVlRqZmFlUDJ5WE56ZXN5NGkKKzZFOURDN1E2VUtzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    echo $CA_CRT_64 | base64 -d > $CA_CRT
    echo $CA_CRT_BUNDLE_64 | base64 -d > $CA_CRT_BUNDLE
    echo $CA_KEY_64 | base64 -d > $CA_KEY

    ##### kubelet-client-current.pem #####

    CURRENT_PEM="/var/lib/kubelet/pki/kubelet-client-current.pem"

    cp -a $CURRENT_PEM $CURRENT_PEM.bk
    TMPDIR=$(bb-tmp-dir)

    openssl x509 -in "$CURRENT_PEM" > "$TMPDIR/old.crt"

    openssl ec -in "$CURRENT_PEM" > "$TMPDIR/key.pem" 2>/dev/null
    SUBJECT="/$(openssl x509 -in "$TMPDIR/old.crt" -noout -subject | cut -d= -f2- | tr -d ' ' | tr , /)"

    openssl req -new -key "$TMPDIR/key.pem" -subj "$SUBJECT" -out "$TMPDIR/new.csr"

    openssl x509 -req -in "$TMPDIR/new.csr" \
        -CA "$CA_CRT" \
        -CAkey "$CA_KEY" \
        -CAcreateserial \
        -out "$TMPDIR/new.crt" \
        -days 7

    cat "$TMPDIR/new.crt" "$TMPDIR/key.pem" > "$TMPDIR/new.pem"

    openssl verify -CAfile $CA_CRT $TMPDIR/new.pem

    cp -f "$TMPDIR/new.pem" "$CURRENT_PEM"
    rm -rf $TMPDIR

    ##### kubelet-server-current.pem #####
    TMPDIR=$(bb-tmp-dir)
    CURRENT_PEM="/var/lib/kubelet/pki/kubelet-server-current.pem"
    cp -a $CURRENT_PEM $CURRENT_PEM.bk

    openssl x509 -in "$CURRENT_PEM" > "$TMPDIR/old.crt"
    openssl ec -in "$CURRENT_PEM" > "$TMPDIR/key.pem" 2>/dev/null

    SUBJECT="/$(openssl x509 -in "$TMPDIR/old.crt" -noout -subject | cut -d= -f2- | tr -d ' ' | tr , /)"

    SAN=$(openssl x509 -in "$TMPDIR/old.crt" -noout -ext subjectAltName | tail -n +2 | sed 's/ //g' | tr '\n' ',' | sed 's/,$//')
    echo $SAN

    if [[ "$SAN" == *DNS:* ]]; then
      DNS_NAME=$(echo "$SAN" | grep -o 'DNS:[^,]*' | sed 's/DNS://')
      IPS=$(echo "$SAN" | grep -o 'IPAddress:[^,]*' | sed 's/IPAddress://' | tr '\n' ',' | sed 's/,$//')

      openssl req -new -key "$TMPDIR/key.pem" \
          -subj "$SUBJECT" \
          -addext "subjectAltName = DNS:$DNS_NAME$(echo ",$IPS" | sed 's/,/,IP:/g')" \
          -out "$TMPDIR/kubelet-server.csr"


      SUBJECT_ALT_NAME="DNS:$DNS_NAME$(echo ",$IPS" | sed 's/,/,IP:/g')"
      openssl x509 -req -days 7 -sha256 \
          -in "$TMPDIR/kubelet-server.csr" \
          -CA "$CA_CRT" \
          -CAkey "$CA_KEY" \
          -CAcreateserial \
          -extfile <(printf "[ext]\nsubjectAltName=%s\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth" "$SUBJECT_ALT_NAME") \
          -extensions ext \
          -out "$TMPDIR/new.crt"

    else
      IPS=$(echo "$SAN" | grep -o 'IPAddress:[^,]*' | sed 's/IPAddress://' | tr '\n' ',' | sed 's/,$//')

      openssl req -new -key "$TMPDIR/key.pem" \
          -subj "$SUBJECT" \
          -addext "subjectAltName = IP:$(echo "$IPS" | sed 's/,/,IP:/g')" \
          -out "$TMPDIR/kubelet-server.csr"


      SUBJECT_ALT_NAME="IP:$(echo "$IPS" | sed 's/,/,IP:/g')"
      openssl x509 -req -days 365 -sha256 \
          -in "$TMPDIR/kubelet-server.csr" \
          -CA "$CA_CRT" \
          -CAkey "$CA_KEY" \
          -CAcreateserial \
          -extfile <(printf "[ext]\nsubjectAltName=%s\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth" "$SUBJECT_ALT_NAME") \
          -extensions ext \
          -out "$TMPDIR/new.crt"
    fi

    cat "$TMPDIR/new.crt" "$TMPDIR/key.pem" > "$TMPDIR/new.pem"
    openssl verify -CAfile $CA_CRT $TMPDIR/new.pem

    cp -f "$TMPDIR/new.pem" "$CURRENT_PEM"
    rm -rf $TMPDIR

    CA_CRT_B64=$(cat $CA_CRT | base64 -w0)
    sed -i "s|certificate-authority-data: .*|certificate-authority-data: $CA_CRT_BUNDLE_64|" /etc/kubernetes/kubelet.conf
    cp -f $CA_CRT_BUNDLE $CA_CRT
    systemctl restart kubelet