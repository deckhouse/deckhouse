apiVersion: deckhouse.io/v1alpha1
kind: NodeGroupConfiguration
metadata:
  name: kubelet-rotator
spec:
  weight: 200
  bundles:
  - "*"
  nodeGroups:
  - "master"
  content: |
    CA_CRT="/etc/kubernetes/pki/ca.crt"
    CA_KEY="/etc/kubernetes/pki/ca.key"
    CA_CRT_BUNDLE="/etc/kubernetes/pki/ca-bundle.crt"

    CA_CRT_64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSW52cU4rTzcyTTB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBeE1qa3dOekl5TXpKYUZ3MHpOVEF4TWpjd056STNNekphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUN3bFhqbWhtenh2OWljR09MUXJjRFR6aE45NitnMENCV1NtdUFJVkl1Vzd3ZUpvTmZndjgxam1iRTgKSnBEUzFZS2d3czc0QXNMKzBHRHNmeFlTdUVxem5laHAyTnJIaW45QkE5ZjY5aGp4aE9wTUkzeTIzeDJqd2JFYwp6Z1hDQStpSmNnNEp4dHNnR3pLTUdpcXZtL3hYYnd1OHZnS2JleGNZOWFyL2xmOEQ1ekpCVS9yRG9RUjNZYmpHCmtTWnJpc2hBZEdkUDVOSFlRTHZuM1NKNFQybjFCcWhJRTZidFZoSnNWMXcrTng4bHdSdGQ5S1RuY2ZWK3E2UWQKelZ6aWQ0WDc2c2YyVlArYnExQ0xiU0JWR2Uvbzk0aUJKdGoyMFVKTG94RFRzVEgrazRWS0hDa0s4MEMxNktvcAo2YnpoRWxMbHNXekFEdzB3U2VielJLWHIyR0I5QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUa0NmVnh1WTNTNjA5SElDWFE0T1R5UWllY0tEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0dwVUpCd0IwMQozOE5PU29NbjlSVUx3V0NpWmNENHlBS3psaG84bjdhOUVnQjcvNEtYcmc4dHM2SFZ3Ty9BVk1QZyt0TEw3YlFSCmg0RWxkcmVpUG1JWEoyRFlpUCsvQkRhMEpla2xkdUpjQ3pRRk5HR1l0WW1ScWwzMjlDNW4rNUFHd21xQ1BoeFoKTmtZOXpjUFVwVXJaR0taaHdISGFTT1J0UlA3MzJLZUJWMm10dFh5NHYzMGZ5c21zWGhweEpOSWtuRjJPbldXWQpPWnMyQis5NzRteHpQSmlsTkdiaExZZHV5QmVPam9NT1orY3NBUWdZL0x2bitkNFgxYlhnc0RTVGwrekwrQkRmCnFyZDB2TE1OYzc4WkFlTzhRK2ZWZ2NJeVoxWUhwNFgvazBpaW5RbGd0THYxTFd1OWpkMWExV3ErUWtFU2JKNUsKYWZwdkdCbVFTZDJOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    CA_KEY_64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0pWNDVvWnM4Yi9ZbkJqaTBLM0EwODRUZmV2b05BZ1ZrcHJnQ0ZTTGx1OEhpYURYCjRML05ZNW14UENhUTB0V0NvTUxPK0FMQy90Qmc3SDhXRXJoS3M1M29hZGpheDRwL1FRUFgrdllZOFlUcVRDTjgKdHQ4ZG84R3hITTRGd2dQb2lYSU9DY2JiSUJzeWpCb3FyNXY4VjI4THZMNENtM3NYR1BXcS81WC9BK2N5UVZQNgp3NkVFZDJHNHhwRW1hNHJJUUhSblQrVFIyRUM3NTkwaWVFOXA5UWFvU0JPbTdWWVNiRmRjUGpjZkpjRWJYZlNrCjUzSDFmcXVrSGMxYzRuZUYrK3JIOWxUL202dFFpMjBnVlJudjZQZUlnU2JZOXRGQ1M2TVEwN0V4L3BPRlNod3AKQ3ZOQXRlaXFLZW04NFJKUzViRnN3QThOTUVubTgwU2w2OWhnZlFJREFRQUJBb0lCQUF4WWh2bG5FSnJlVk9DbApCTWFlUDBzUHIyRXdheTJvR3dvQzlnTGZGbHRaSHVmS2JRMXptNEtKTGxFTVNUZlVZYXVuc3h5MzVMWTREMjY1CmUrdVhJdkhuNm1Yc0dXKzJDU3VjZnk4Mm9ZdlJSU2hKbXVDV1BOWkVKb1BqQzVnQytmRVNIbFVrcUJGWWxYSWkKS2pYWTdBMlkzL00wUGE1dExySTZDdGlQdmlLaG02UEx6OEhYb1NPMmpNK3dOMzdkbTBKcTVkMlRDZHY0alkxdQplN2UyL2FwQ01MV2l2T1dJTnkrM0cyV3pKaGhKdGVCbCtSWTQwcUJuaFVPTHVXY3hWa0JicHdMcW5tUnEvWm9qClBFSHlsTjJUTHl3cnJVbFU1czhZWWNWTHQ3dFZic0ZLbDRVMTVvK2ptNWVIRU9qcnowdmR6M0Y2UEFkOTREK1oKa1R2NHV3RUNnWUVBeUgvd2EvalJ4b1ZjUEttSXpxNDlVMHRBaXVrSlNkT0RCekxMeW5TcW9CaEJ4S1ZtUFlURgp1aVljSXJiWkFQdFNVamxLWTFKL0luK2tHUnRTOW40RmM3OFp1VW5RekVLeWVqdStZLzMwdTBudVo4MmZWUk9HCnRqd1pIVmVzOHdlNGVpVmxTNlhhcXJ5QlMvakRpWk9HdEFzZVVxdXBKTlRvb2YvMTd0U3pXK0VDZ1lFQTRYYkcKc3BHaDBlMlJzUFF3Z09saEFURXk4NEdEWmhxN0taY0IyL2hSZHNUQXMxOXdtRGFObjNVbGZCVHA2d1VDbkZRcAo1Tk5PTG5HckNoeXVwRnVUbi9GbGZFSzN3SWZ3SHNTOXI5NzU2b2NldzR0NmVNVGpFUWlMV3Zta2lha2hVdlByCmN5UENjaUdDYzg1eDB6U3kxR1ZvVittZWVmaTNxUDBLRHlzbCtCMENnWUIwTnd4QldWa21pN2hhQlI2aVJnYVAKMkNlU0hOOWdablFsWVFFVTJham80UWFHR0NUNTlaS3lnbEorb0tPSjJTTHZPL3Z0TkMweTd1OU1DalY5WUxDQwpWYnR3VmVQcjhhRUlEc2NkcUY4SmpDSGZFeVdPcDZIRzBYRHhQQmVvU3NwWUtvTGJaVWdvL05pcEU0a3JubEpPCjI3NzR4ajFsZHU5Y3IwTjY2dGtIb1FLQmdRREJxWW1ROXNDOWxrZVBiS0NCQ25XMVZYSkRjVnJSaUdKOW5lVU4KOGlUZlZLK0ZJNVNPV2tXWjAwRUliTnBrY2lCRThaSXVxRVkrWklxYkcvbnkyV3BiZHpsSjIvRUVJbi9obmZLbApMMjBSdzFCc2ZORU5EV2xSUnpxVVFWelFsZ00yd3FmYWRidmUxdU83MzNjc0NOY1cwNmdsNDFpcHdqYlhvOHBSCkx5bmxEUUtCZ0FJbEJXQTNJNUNZdGorMnRFTWhFWitNeFlKR2YyWHNBY2ttQlI5dWg2ZnBmUTcweFVyTFFCUVUKbHozMHc2MDU5RS84VCtESUJkU1VBYVRWNW55Nmxrd1Rjc3V4SldGZGc4anVwT0dmbG40dTlzdnZDNTFoa1lZeQo5VzFQUTVJS3RzTDhVbHc3ejNSbGRMOWR2d2ZyU2RLUWhZMzFGYm5hT0ZZUkt4ajZnTStpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

    echo $CA_CRT_64 | base64 -d > $CA_CRT
    echo $CA_KEY_64 | base64 -d > $CA_KEY

    ##### kubelet-client-current.pem #####

    CURRENT_PEM="/var/lib/kubelet/pki/kubelet-client-current.pem"

    cp -a $CURRENT_PEM $CURRENT_PEM.bk
    TMPDIR=$(bb-tmp-dir)

    openssl x509 -in "$CURRENT_PEM" > "$TMPDIR/old.crt"

    openssl ec -in "$CURRENT_PEM" > "$TMPDIR/key.pem" 2>/dev/null
    SUBJECT="/$(openssl x509 -in "$TMPDIR/old.crt" -noout -subject | cut -d= -f2- | tr -d ' ' | tr , /)"

    openssl req -new -key "$TMPDIR/key.pem" -subj "$SUBJECT" -out "$TMPDIR/new.csr"

    openssl x509 -req -in "$TMPDIR/new.csr" \
        -CA "$CA_CRT" \
        -CAkey "$CA_KEY" \
        -CAcreateserial \
        -out "$TMPDIR/new.crt" \
        -days 7

    cat "$TMPDIR/new.crt" "$TMPDIR/key.pem" > "$TMPDIR/new.pem"

    openssl verify -CAfile $CA_CRT $TMPDIR/new.pem

    cp -f "$TMPDIR/new.pem" "$CURRENT_PEM"
    rm -rf $TMPDIR

    ##### kubelet-server-current.pem #####
    TMPDIR=$(bb-tmp-dir)
    CURRENT_PEM="/var/lib/kubelet/pki/kubelet-server-current.pem"
    cp -a $CURRENT_PEM $CURRENT_PEM.bk

    openssl x509 -in "$CURRENT_PEM" > "$TMPDIR/old.crt"
    openssl ec -in "$CURRENT_PEM" > "$TMPDIR/key.pem" 2>/dev/null

    SUBJECT="/$(openssl x509 -in "$TMPDIR/old.crt" -noout -subject | cut -d= -f2- | tr -d ' ' | tr , /)"

    SAN=$(openssl x509 -in "$TMPDIR/old.crt" -noout -ext subjectAltName | tail -n +2 | sed 's/ //g' | tr '\n' ',' | sed 's/,$//')
    echo $SAN

    if [[ "$SAN" == *DNS:* ]]; then
      DNS_NAME=$(echo "$SAN" | grep -o 'DNS:[^,]*' | sed 's/DNS://')
      IPS=$(echo "$SAN" | grep -o 'IPAddress:[^,]*' | sed 's/IPAddress://' | tr '\n' ',' | sed 's/,$//')

      openssl req -new -key "$TMPDIR/key.pem" \
          -subj "$SUBJECT" \
          -addext "subjectAltName = DNS:$DNS_NAME$(echo ",$IPS" | sed 's/,/,IP:/g')" \
          -out "$TMPDIR/kubelet-server.csr"


      SUBJECT_ALT_NAME="DNS:$DNS_NAME$(echo ",$IPS" | sed 's/,/,IP:/g')"
      openssl x509 -req -days 7 -sha256 \
          -in "$TMPDIR/kubelet-server.csr" \
          -CA "$CA_CRT" \
          -CAkey "$CA_KEY" \
          -CAcreateserial \
          -extfile <(printf "[ext]\nsubjectAltName=%s\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth" "$SUBJECT_ALT_NAME") \
          -extensions ext \
          -out "$TMPDIR/new.crt"

    else
      IPS=$(echo "$SAN" | grep -o 'IPAddress:[^,]*' | sed 's/IPAddress://' | tr '\n' ',' | sed 's/,$//')

      openssl req -new -key "$TMPDIR/key.pem" \
          -subj "$SUBJECT" \
          -addext "subjectAltName = IP:$(echo "$IPS" | sed 's/,/,IP:/g')" \
          -out "$TMPDIR/kubelet-server.csr"


      SUBJECT_ALT_NAME="IP:$(echo "$IPS" | sed 's/,/,IP:/g')"
      openssl x509 -req -days 365 -sha256 \
          -in "$TMPDIR/kubelet-server.csr" \
          -CA "$CA_CRT" \
          -CAkey "$CA_KEY" \
          -CAcreateserial \
          -extfile <(printf "[ext]\nsubjectAltName=%s\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth" "$SUBJECT_ALT_NAME") \
          -extensions ext \
          -out "$TMPDIR/new.crt"
    fi

    cat "$TMPDIR/new.crt" "$TMPDIR/key.pem" > "$TMPDIR/new.pem"
    openssl verify -CAfile $CA_CRT $TMPDIR/new.pem

    cp -f "$TMPDIR/new.pem" "$CURRENT_PEM"
    rm -rf $TMPDIR

    CA_CRT_BUNDLE_64=$(cat $CA_CRT_BUNDLE | base64 -w0)

    # это для кублета
    sed -i "s|certificate-authority-data: .*|certificate-authority-data: $CA_CRT_BUNDLE_64|" /etc/kubernetes/kubelet.conf
    sed -i "s|clientCAFile: .*|clientCAFile: $CA_CRT_BUNDLE|" /var/lib/kubelet/config.yaml

    systemctl restart kubelet