apiVersions:
- apiVersion: deckhouse.io/v1
  openAPISpec:
    properties:
      sshPublicKey:
        description: |
          Публичный ключ для доступа на узлы.
      masterNodeGroup:
        description: |
          Спецификация для описания NodeGroup master-узлов.
        properties:
          replicas:
            description: |
              Количество создаваемых master-узлов.
          zones:
            description: |
              Список зон, в которых допустимо создавать узлы.
          instanceClass:
            description: |
              Частичное содержимое полей [YandexInstanceClass](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/cr.html#yandexinstanceclass).
            properties: &instanceClassProperties_ru
              platform:
                description: |
                  Платформа виртуальной машины.
              cores:
                description: |
                  Количество ядер у создаваемых инстансов.
              memory:
                description: |
                  Количество оперативной памяти (в мегабайтах) у создаваемых инстансов.
              imageID:
                description: |
                  Идентификатор образа, который будет установлен в заказанные инстансы.
              diskSizeGB:
                description: |
                  Размер диска (в гигабайтах) у инстансов.
              externalIPAddresses:
                description: |
                  Список внешних IP-адресов. Количество элементов массива должно соответствовать `replicas`.

                  При отсутствии опции `externalSubnetID` необходимо использовать или [зарезервированные публичные IP-адреса](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/faq.html#как-зарезервировать-публичный-ip-адрес) или константу `Auto`.

                  При наличии опции `externalSubnetID` необходимо выбрать конкретные свободные IP-адреса из указанной подсети.
              externalSubnetID:
                description: |
                  Подключаемый к узлу дополнительный сетевой интерфейс, в который будет идти маршрут по умолчанию.
              externalSubnetIDs:
                description: |
                  Подключаемый к узлу дополнительный сетевой интерфейс, в который будет идти маршрут по умолчанию.

                  Также будет добавлен маршрут для internal-интерфейса узла на всю подсеть, указанную в `nodeNetworkCIDR`.

                  Количество элементов массива должно соответствовать `replicas`.
              additionalLabels:
                description: |
                  Дополнительные лейблы, которые будут присвоены созданным инстансам.
              networkType:
                description: |
                  Тип сети.
      nodeGroups:
        description: |
          Массив дополнительных NodeGroup для создания статичных узлов (например, для выделенных frontend-узлов или шлюзов).
        items:
          properties:
            name:
              description: |
                Имя NodeGroup, которое будет использоваться для генерации имен узлов.
            replicas:
              description: |
                Количество узлов.
            zones:
              description: |
                Список зон, в которых допустимо создавать узлы.
            nodeTemplate:
              description: |
                Настройки Node-объектов в Kubernetes, которые будут добавлены после регистрации узла.
              properties:
                labels:
                  description: |
                    Список лейблов, которые будут прикреплены ко всем ресурсам кластера (если они это поддерживают).

                    Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.labels`.

                    Если поменять теги в рабочем кластере, то после применения изменений необходимо пересоздать все машины.
                annotations:
                  description: |
                    Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.annotations`.
                taints:
                  description: |
                    Аналогично полю `.spec.taints` из объекта [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#taint-v1-core).

                    > **Внимание!** Доступны только поля `effect`, `key`, `values`.
            instanceClass:
              description: |
                Частичное содержимое полей [YandexInstanceClass](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/cr.html#yandexinstanceclass).
              properties:
                <<: *instanceClassProperties_ru
                coreFraction:
                  description: |
                    Базовый уровень производительности каждого ядра CPU у создаваемых инстансов. [Подробнее...](https://cloud.yandex.ru/docs/compute/concepts/performance-levels)
      existingNetworkID:
        description: |
          ID существующей VPC Network.
      nodeNetworkCIDR:
        description: |
          Данная подсеть будет разделена на **три** равных части и использована для создания подсетей в трёх зонах Yandex.Cloud.
      existingZoneToSubnetIDMap:
        description: |
          Одна или несколько ранее существовавших подсетей, сопоставленных с соответствующей зоной.

          > **Внимание!** Deckhouse создаст таблицу маршрутизации, которую необходимо вручную привязать к указанными подсетям.
      labels:
        description: |
          Лейблы, проставляемые на ресурсы, создаваемые в Yandex.Cloud.

          Если поменять лейблы в рабочем кластере, то после применения изменений необходимо пересоздать все машины.
      dhcpOptions:
        description: |
          Список DHCP-опций, которые будут установлены на все подсети.

          [Возможные проблемы](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/faq.html#проблемы-dhcpoptions-и-пути-их-решения) при использовании.
        properties:
          domainName:
            description: |
              Search-домен.
          domainNameServers:
            description: |
              Список адресов рекурсивных DNS.
      layout:
        description: |
          Название схемы размещения.

          [Подробнее](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/layouts.html) о возможных схемах размещения провайдера.
      withNATInstance:
        description: |
          Настройки для схемы размещения [`WithNATInstance`](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/layouts.html#withnatinstance).
        properties:
          exporterAPIKey:
            description: |
              API-ключ для экспортера метрик Яндекс Облака.

              - Если значение ключа — пустая строка, то экспортер не будет развернут в кластере.
              - Если значение ключа — `Auto`, то Deckhouse создаст service account c ролью `monitoring.viewer` и API-ключ для него. Для основного service account'а требуется роль `admin`.
              - Любое другое значение ключа считается допустимым API-ключем. Используйте [инструкцию](https://cloud.yandex.ru/docs/iam/operations/api-key/create) для создания API-ключа.
                Service account'у, для которого будет создан ключ, необходимо назначить роль `monitoring.viewer`.
          natInstanceExternalAddress:
            description: |
              Внешний [зарезервированный IP-адрес](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/faq.html#как-зарезервировать-публичный-ip-адрес) или адрес из `externalSubnetID` при указании опции.
          natInstanceInternalAddress:
            description: |
              Лучше не использовать эту опцию, а использовать автоматически назначаемые адреса.
          internalSubnetID:
            description: |
              ID подсети для внутреннего интерфейса.
          externalSubnetID:
            description: |
              Подключаемый к узлу дополнительный сетевой интерфейс, в который будет идти маршрут по умолчанию.
      provider:
        description: |
          [Параметры подключения](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-yandex/environment.html) к API Yandex.Cloud.
        properties:
          cloudID:
            description: |
              Идентификатор облака.
          folderID:
            description: |
              Идентификатор директории.
          serviceAccountJSON:
            description: |
              Ключ к Service Account'у в JSON-формате, выдаваемый [yc iam key create](environment.html).
      zones:
        description: |
          Глобальное ограничение набора зон, с которыми работает данный cloud provider.
