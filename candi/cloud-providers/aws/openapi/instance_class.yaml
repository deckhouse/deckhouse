apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awsinstanceclasses.deckhouse.io
  labels:
    heritage: deckhouse
    module: cloud-provider-aws
spec:
  group: deckhouse.io
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema: &schema
        openAPIV3Schema:
          type: object
          description: |
            Parameters of the AWS instance used by `machine-controller-manager` (the [node-manager](https://deckhouse.io/en/documentation/v1/modules/040-node-manager/) modile).

            The `CloudInstanceClass` resource of the `node-manager` module refers to this resource.
          required:
            - spec
          properties:
            spec:
              type: object
              required:
                - instanceType
              properties:
                instanceType:
                  description: |
                    Instance type of AWS instance.

                    **Caution!** Ensure that this type is present in all zones specified in the `zones` parameter.
                  example: t3.large
                  type: string
                capacity:
                  type: object
                  description: |
                    Capacity settings for cluster-autoscaler planning. Only makes sense if minPerZone equals to 0.
                    Deckhouse will try to fetch built-in EC2 instance types and determine it's capacity, so
                    you have to fill this field only if your instance type is not found.
                    Presented values don't affect real node ordering, just capacity planning.
                  required:
                    - cpu
                    - memory
                  properties:
                    cpu:
                      oneOf:
                        - type: string
                          pattern: "^[0-9]+m?$"
                        - type: number
                      description: Node vCPU resources
                      x-examples: ["1000m"]
                    memory:
                      oneOf:
                        - type: string
                          pattern: "^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$"
                        - type: number
                      description: Node memory resources
                      x-examples: ["1500Mi"]
                ami:
                  description: |
                    The Amazon Machine Image (AMI ID) to use in provisioned instances.

                    Here is how you can find the required AMI (each region has its own set of AMIs):
                    ```shell
                    aws ec2 --region <REGION> describe-images \
                    --filters 'Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-2020*' | \
                    jq '.Images[].ImageId'
                    ```
                  example: ami-040a1551f9c9d11ad
                  type: string
                spot:
                  description: Whether to create Spot Instances with minimum hourly price with which Instances will run.
                  type: boolean
                diskType:
                  description: Instance EBS disk type.
                  example: "gp2"
                  type: string
                  x-doc-default: "gp2"
                iops:
                  description: IOPS rate for io1 diskType
                  example: "500"
                  type: string
                diskSizeGb:
                  description: Instance root disk size in gigabytes.
                  example: 20
                  type: integer
                  x-doc-default: 20
                additionalTags:
                  description: Extra AWS tags for instances in addition to `AWSClusterConfiguration.tags`.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                  additionalProperties:
                    type: string
                additionalSecurityGroups:
                  type: array
                  description: |
                    The additional security groups to add to provisioned instances of the specific InstanceClass.
                  items:
                    type: string
    - name: v1
      served: true
      storage: false
      schema: *schema
  scope: Cluster
  names:
    plural: awsinstanceclasses
    singular: awsinstanceclass
    kind: AWSInstanceClass
    categories:
      - cloudinstanceclasses
