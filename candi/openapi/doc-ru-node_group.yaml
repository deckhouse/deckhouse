spec:
  versions:
    - name: v1alpha1
      additionalPrinterColumns: &additionalPrinterColumns
        - name: Type
          type: string
          description: "Type of nodes in group"
          jsonPath: .spec.nodeType
        - name: Ready
          type: integer
          description: "Number of ready Kubernetes nodes in the group."
          jsonPath: .status.ready
        - name: Nodes
          type: integer
          description: "Number of Kubernetes nodes (in any state) in the group."
          jsonPath: .status.nodes
        - name: UpToDate
          type: integer
          description: "Number of up-to-date nodes in the group."
          jsonPath: .status.upToDate
        - name: Instances
          type: integer
          description: "Number of instances (in any state) in the group."
          jsonPath: .status.instances
        - name: Desired
          type: integer
          description: "Number of desired instances in the group."
          jsonPath: .status.desired
        - name: Min
          type: integer
          description: "Minimal amount of instances in the group."
          jsonPath: .status.min
        - name: Max
          type: integer
          description: "Maximum amount of instances in the group."
          jsonPath: .status.max
        - name: Standby
          type: integer
          description: "Number of overprovisioned instances in the group."
          jsonPath: .status.standby
        - name: Status
          type: string
          description: "Status message about group handling."
          jsonPath: .status.conditionSummary.statusMessage
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: |
            Описывает runtime-параметры группы узлов.
          properties:
            status: &status
              properties:
                ready:
                  description: "Number of ready Kubernetes nodes in the group."
                nodes:
                  description: "Number of Kubernetes nodes (in any state) in the group."
                instances:
                  description: "Number of instances (in any state) in the group."
                desired:
                  description: "Number of desired machines in the group."
                min:
                  description: "Minimal amount of instances in the group."
                max:
                  description: "Maximum amount of instances in the group."
                upToDate:
                  description: "Number of up-to-date nodes in the group."
                standby:
                  description: "Number of overprovisioned instances in the group."
                error:
                  description: "Error message about possible problems with the group handling."
                lastMachineFailures:
                  items:
                    properties:
                      name:
                        description: "Machine's name."
                      providerID:
                        description: "Machine's ProviderID."
                      ownerRef:
                        description: "Machine owner's name."
                      lastOperation:
                        properties:
                          description:
                            description: "Last operation's description."
                          lastUpdateTime:
                            description: "Timestamp of last status update for operation."
                          state:
                            description: "Machine's operation state."
                          type:
                            description: "Type of operation."
                conditionSummary:
                  properties:
                    statusMessage:
                      description: "Status message about group handling."
                    ready:
                      description: "Status of the condition summary."
            spec:
              properties:
                nodeType: &nodeType
                  description: |
                    Тип узлов, которые представляет эта группа.
                    - Cloud — узлы для этой группы будут автоматически создаваться (и удаляться) в настроенном облачном провайдере.
                    - Static — статический узел, размещенный на железном сервере или виртуальной машине. Узел не управляется
                      cloud-controller-manager'ом, даже если включен один из облачных провайдеров.
                    - Hybrid – статический узел (созданный вручную или любыми внешними инструментами), размещенный в том же облаке, с
                      которым настроена интеграция у одного из облачных провайдеров, на таком узле работает CSI и такой узел
                      управляется cloud-controller-manager'ом (объект Node автоматически обогащается информацией о зоне и регионе по
                      данным, полученным от облака; при удалении узла из облака, соответствующий ему Node-объект будет
                      удален в Kubernetes).
                kubernetesVersion:
                  description: |
                    Желаемая minor-версия Kubernetes.

                    По умолчанию соответствует глобально выбранной для кластера версии (см. документацию по установке) или, если таковая не определена, текущей версии control-plane'а.
                cri:
                  description: |
                    Параметры container runtime.
                  properties:
                    type: &criType
                      description: |
                        Тип container runtime.

                        Если не указан, используется значение `defaultCRI` из первичной конфигурации кластера (параметр `cluster-configuration.yaml` секрета `d8-cluster-configuration` в namespace `kube-system`), которая создается при инсталляции.

                        **Необязательный параметр.**
                    containerd: &criContainerd
                      description: |
                        Параметры работы Containerd.

                        При настройке этих параметров, `cri.type` должен быть — `Containerd`.
                      properties:
                        maxConcurrentDownloads:
                          description: |
                            Максимальное количество параллельных потоков загрузки для каждой операции pull.
                cloudInstances: &cloudInstances
                  description: |
                    Параметры заказа облачных виртуальных машин.

                    **Внимание!** Допустимо использовать только совместно с `nodeType: CloudEphemeral`.
                  properties:
                    zones:
                      description: |
                        Переопределение перечня зон, в которых создаются инстансы.

                        Значение по умолчанию зависит от выбранного облачного провайдера и обычно соответствует всем зонам используемого региона.
                    minPerZone:
                      description: |
                        Минимальное количество инстансов в зоне. Проставляется в объект MachineDeployment и в качестве нижней границы в cluster-autoscaler.
                    maxPerZone:
                      description: |
                        Максимальное количество инстансов в зоне. Проставляется как верхняя граница в cluster-autoscaler.
                    maxUnavailablePerZone:
                      description: |
                        Сколько инстансов может быть недоступно при RollingUpdate'е.
                    maxSurgePerZone:
                      description: |
                        Сколько инстансов создавать одновременно при scale-up.
                    standby:
                      description: |
                        Количество подогретых инстансов для этой `NodeGroup`.

                        Значение может быть абсолютным (например, `2`) или процентом желаемых узлов (например, `10%`). Абсолютное значение рассчитывается из процента от максимального количества узлов путем округления в меньшую сторону, но минимум — `1`.
                    standbyHolder:
                      description: |
                        Параметры "занимателя" ресурсов для подогретых инстансов.
                      properties:
                        notHeldResources:
                          description: |
                            Ресурсы, которые не будут заняты.
                          properties:
                            cpu:
                              description: |
                                Количество CPU.

                                Значение может быть абсолютным (например, `1`) или в _millicore_-формате (например, `1500m`).
                            memory:
                              description: |
                                Количество памяти.

                                Значение может быть абсолютным в байтах (например, `128974848`) или в Kubernetes-формате с суффиксами: `G`, `Gi`, `M`, `Mi` (например, `750Mi`).
                    classReference:
                      description: |
                        Ссылка на объект `InstanceClass`. Уникален для каждого `cloud-provider-`модуля.
                      properties:
                        kind:
                          description: |
                            Тип объекта (например, `OpenStackInstanceClass`). Тип объекта указан в документации соответствующего `cloud-provider-`модуля.
                        name:
                          description: |
                            Имя нужного `InstanceClass`-объекта (например, `finland-medium`).
                nodeTemplate: &nodeTemplate
                  description: |
                    Настройки Node-объектов в Kubernetes, которые будут добавлены после регистрации узла.
                  properties:
                    labels:
                      description: |
                        Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.labels`.
                    annotations:
                      description: |
                        Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.annotations`.
                    taints:
                      description: |
                        Аналогично полю `.spec.taints` из объекта [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#taint-v1-core).

                        **Внимание!** Доступны только поля `effect`, `key`, `value`.
                static:
                  description: Параметры статического узла.
                  properties:
                    internalNetworkCIDRs:
                      description: CIDR подсети.
                chaos: &chaos
                  description: |
                    Настройки chaos monkey.
                  properties:
                    mode:
                      description: |
                        Режим работы chaos monkey:
                        - `DrainAndDelete` — при срабатывании делает узлу drain, затем - удаляет его;
                        - `Disabled` — не трогает данную NodeGroup.
                    period:
                      description: |
                        В какой интервал времени сработает chaos monkey (указывать можно в [golang формате](https://golang.org/pkg/time/#ParseDuration)).
                operatingSystem: &operatingSystem
                  description: |
                    Параметры операционной системы.
                  properties:
                    manageKernel:
                      description: |
                        Автоматическое управление ядром операционной системы.
                disruptions: &disruptions
                  description: |
                    Параметры обновлений приводящих к возможному простою.
                  properties:
                    approvalMode:
                      description: |
                        Режим выдачи разрешения на disruptive-обновление.
                        - `Manual` — отключить автоматическую выдачу разрешений на disruption. Когда disruption потребуется – загорится специальный алерт.
                        - `Automatic` —  автоматически выдавать разрешения на disruption при обновлении (значение по умолчанию).
                    automatic:
                      description: |
                        Дополнительные параметры для режима `Automatic`.
                      properties:
                        drainBeforeApproval:
                          description: |
                            Выгон (draining) Pod'ов с узла, перед выдачей разрешения на disruption.
                        windows:
                          description: |
                            Список окон disruption-обновлений узлов.
                          items:
                            properties:
                              from:
                                description: Время начала окна обновления (в часовом поясе UTC).
                              to:
                                description: Время окончания окна обновления (в часовом поясе UTC).
                              days:
                                description: Дни недели, в которые применяется окно обновлений.
                docker:
                  description: |
                    Параметры настройки Docker.

                    При настройке этих параметров, `cri.type` должен быть — `Docker`.
                  properties:
                    maxConcurrentDownloads:
                      description: |
                        Максимальное количество потоков одновременного скачивания Docker-образов.
                    manage:
                      description: |
                        Автоматическое управление версией и параметрами Docker.
                kubelet: &kubelet
                  description: |
                    Параметры настройки kubelet.
                  properties:
                    maxPods:
                      description: |
                        Максимальное количество pod'ов на узлах данной `NodeGroup`.
                    rootDir:
                      description: |
                        Путь к каталогу для файлов kubelet'а (volume mounts, и т.д.).
    - name: v1alpha2
      additionalPrinterColumns: *additionalPrinterColumns
      schema:
        openAPIV3Schema:
          description: |
            Описывает runtime-параметры группы узлов.
          properties:
            status: *status
            spec:
              properties:
                nodeType: *nodeType
                cri:
                  description: |
                    Параметры container runtime.
                  properties:
                    type: *criType
                    containerd: *criContainerd
                    docker:
                      description: |
                        Параметры настройки Docker.
                      properties:
                        maxConcurrentDownloads:
                          description: |
                            Максимальное количество потоков одновременного скачивания Docker-образов.
                        manage:
                          description: |
                            Автоматическое управление версией и параметрами Docker.
                    notManaged: &notManaged
                      type: object
                      description: Настройки для cri установленных на нодах вручную.
                      properties:
                        criSocketPath:
                          type: string
                          description: Путь к сокету cri.
                cloudInstances: *cloudInstances
                nodeTemplate: *nodeTemplate
                chaos: *chaos
                operatingSystem: *operatingSystem
                disruptions: *disruptions
                kubelet: *kubelet
    - name: v1
      additionalPrinterColumns: *additionalPrinterColumns
      schema:
        openAPIV3Schema:
          description: |
            Описывает runtime-параметры группы узлов.
          properties:
            status: *status
            spec:
              properties:
                nodeType:
                  description: |
                    Тип узлов, которые представляет эта группа.
                    - CloudEphemeral — узлы для этой группы будут автоматически создаваться (и удаляться) в настроенном облачном провайдере.
                    - CloudPermanent - узлы этой группу берутся из ProviderClusterConfiguration и создаются/удаляются через dhctl
                    - CloudStatic - статический узел (созданный вручную или любыми внешними инструментами), размещенный в том же облаке, с
                      которым настроена интеграция у одного из облачных провайдеров, на таком узле работает CSI и такой узел
                      управляется cloud-controller-manager'ом (объект Node автоматически обогащается информацией о зоне и регионе по
                      данным, полученным от облака; при удалении узла из облака, соответствующий ему Node-объект будет
                      удален в Kubernetes).
                    - Static — статический узел, размещенный на железном сервере или виртуальной машине. Узел не управляется
                      cloud-controller-manager'ом, даже если включен один из облачных провайдеров.
                  type: string
                  enum:
                    - CloudEphemeral
                    - CloudPermanent
                    - CloudStatic
                    - Static
                cri:
                  type: object
                  description: |
                    Параметры container runtime.
                  properties:
                    type: *criType
                    containerd: *criContainerd
                    docker:
                      type: object
                      description: Параметры настройки Docker.
                      properties:
                        maxConcurrentDownloads:
                          description: Максимальное количество потоков одновременного скачивания Docker-образов.
                        manage:
                          description: Автоматическое управление версией и параметрами Docker.
                    notManaged: *notManaged
                cloudInstances: *cloudInstances
                nodeTemplate: *nodeTemplate
                chaos: *chaos
                operatingSystem: *operatingSystem
                disruptions: *disruptions
                kubelet: *kubelet
                update:
                  properties:
                    maxConcurrent:
                      description: Максимальное количество одновременно обновляемых узлов. Можно указать число узлов или процент от общего количества узлов в данной группе.
