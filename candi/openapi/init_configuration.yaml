kind: InitConfiguration
apiVersions:
- apiVersion: deckhouse.io/v1
  openAPISpec:
    type: object
    description: |
      Deckhouse configuration to start after installation.
    additionalProperties: false
    required: [apiVersion, kind, deckhouse]
    x-examples:
    - apiVersion: deckhouse.io/v1
      kind: InitConfiguration
      deckhouse:
        imagesRepo: nexus.company.my/deckhouse/ee
        registryDockerCfg: eyJhdXRocyI6IHsgIm5leHVzLmNvbXBhbnkubXkiOiB7InVzZXJuYW1lIjoibmV4dXMtdXNlciIsInBhc3N3b3JkIjoibmV4dXMtcEBzc3cwcmQiLCJhdXRoIjoiYm1WNGRYTXRkWE5sY2pwdVpYaDFjeTF3UUhOemR6QnlaQW89In19fQo=
        registryScheme: HTTPS
        registryCA: |
          -----BEGIN CERTIFICATE-----
          ...
          -----END CERTIFICATE-----
    properties:
      apiVersion:
        type: string
        description: Version of the Deckhouse API.
        enum: [deckhouse.io/v1, deckhouse.io/v1alpha1]
      kind:
        type: string
        enum: [InitConfiguration]
      deckhouse:
        type: object
        description: Initial parameters required to install Deckhouse.
        properties:
          imagesRepo:
            type: string
            pattern: '^[0-9a-zA-Z\.\-]+(\:[0-9]{1,5})?(\/[0-9a-zA-Z\.\-\_\/]+)?$'
            description: |
              Address of a container registry with Deckhouse images.

              Specify it if Deckhouse Enterprise Edition edition or third-party registry (e.g. proxy server in a closed environment) is used.

              The address matches the edition of Deckhouse used. The public container registry address for Deckhouse Enterprise Edition is `registry.deckhouse.io/deckhouse/ee`.
            minLength: 1
            default: registry.deckhouse.io/deckhouse/ce
          registryDockerCfg:
            type: string
            description: |
              A Base64-encoded string from the Docker client configuration file (in Linux it is usually `$HOME/.docker/config.json`), for accessing a third-party container registry.

              For example, to access the container registry `registry.company.my` under the user `user` with the password `P@ssw0rd` it will be `eyJhdXRocyI6eyJyZWdpc3RyeS5jb21wYW55Lm15Ijp7ImF1dGgiOiJkWE5sY2pwUVFITnpkekJ5WkFvPSJ9fX0K` (string `{"auths":{"registry.company.my":{"auth":"dXNlcjpQQHNzdzByZAo="}}}` in Base64).
            minLength: 1
            default: eyJhdXRocyI6IHsgInJlZ2lzdHJ5LmRlY2tob3VzZS5pbyI6IHt9fX0=
          registryCA:
            type: string
            description: |
              Root CA certificate to validate the container registry’s HTTPS certificate (if self-signed certificates are used).
          registryScheme:
            type: string
            description: Registry access scheme (HTTP or HTTPS).
            enum: [HTTP, HTTPS]
            default: HTTPS
          devBranch:
            type: string
            deprecated: true
            description: |
              The parameter is used for development needs. Will be replaced with the CLI-tools.

- apiVersion: deckhouse.io/v2alpha1
  openAPISpec:
    type: object
    description: |
      Deckhouse and registry configuration to start after installation.
    additionalProperties: false
    required: [apiVersion, kind, deckhouse]
    x-examples:
      - apiVersion: deckhouse.io/v2alpha1
        kind: InitConfiguration
        deckhouse:
        registry:
          mode: Direct
          direct:
            imagesRepo: nexus.company.my/deckhouse/ee
            username: "nexus-user"
            password: "nexus-p@ssw0rd"
            scheme: HTTPS
            ca: |
              -----BEGIN CERTIFICATE-----
              ...
              -----END CERTIFICATE-----
      - apiVersion: deckhouse.io/v2alpha1
        kind: InitConfiguration
        deckhouse:
        registry:
          mode: Proxy
          proxy:
            imagesRepo: nexus.company.my/deckhouse/ee
            username: "nexus-user"
            password: "nexus-p@ssw0rd"
            scheme: HTTPS
            ca: |
              -----BEGIN CERTIFICATE-----
              ...
              -----END CERTIFICATE-----
      - apiVersion: deckhouse.io/v2alpha1
        kind: InitConfiguration
        deckhouse:
        registry:
          mode: Detached
          detached:
            imagesBundlePath: ~/deckhouse/bundle.tar
    properties:
      apiVersion:
        type: string
        description: Version of the Deckhouse API.
        enum: [deckhouse.io/v2alpha1]
      kind:
        type: string
        enum: [InitConfiguration]
      registry:
        type: object
        description: Initial parameters required to configure registry.
        properties:
          mode:
            type: string
            description: |
              Specifies the mode of accessing the container registry for Deckhouse. This setting affects how container images are fetched and stored during the deployment process:

              - `Direct` — Deckhouse will directly access the specified registry without any intermediaries.
              - `Proxy` — Deckhouse will set up the system-registry module, which will act as a caching proxy for the specified registry. This mode helps reduce network traffic and improve image pull speed by caching images locally.
              - `Detached` — Deckhouse will establish a standalone registry using the system-registry module and initially copy the installation images for the current release. Manual updates of the registry with new images are necessary. Refer to the documentation for detailed setup and maintenance instructions.
            enum: [Direct, Proxy, Detached]
            default: Direct
          direct:
            type: object
            description: Direct mode properties.
            properties: &directProperties
              imagesRepo:
                type: string
                pattern: '^[0-9a-zA-Z\.\-]+(\:[0-9]{1,5})?(\/[0-9a-zA-Z\.\-\_\/]+)?$'
                description: |
                  Address of a container registry with Deckhouse images.

                  Specify it if Deckhouse Enterprise Edition edition or third-party registry (e.g. registry in a closed environment) is used.

                  The address matches the edition of Deckhouse used. The public container registry address for Deckhouse Enterprise Edition is `registry.deckhouse.io/deckhouse/ee`.
                minLength: 1
                default: registry.deckhouse.io/deckhouse/ce
              username:
                type: string
                description: |
                  Username for accessing container registry with deckhouse images.
              password:
                type: string
                description: |
                  Password for accessing container registry with deckhouse images.
              ca:
                type: string
                description: |
                  Root CA certificate to validate the container registry’s HTTPS certificate (if self-signed certificates are used).
              scheme:
                type: string
                description: Registry access scheme (HTTP or HTTPS).
                enum: [HTTP, HTTPS]
                default: HTTPS
          detached:
            x-doc-d8Revision: ee
            type: object
            description: Detached mode properties.
            properties:
              imagesBundlePath:
                type: string
                description: |
                  The path to the image bundle for the Deckhouse Kubernetes Platform distribution. The path can be specified both on the folder and on the tar archive.

                  For more information on how to get it, consult the docs at https://deckhouse.io/documentation/v1/deckhouse-faq.html#manually-uploading-images-to-an-air-gapped-registry
              storageMode: &storageMode
                enum: [S3, Fs]
                description: |
                  The type of data storage for the system registry module.
                default: Fs
          proxy:
            x-doc-d8Revision: ee
            type: object
            description: Proxy mode properties.
            properties:
              <<: *directProperties
              storageMode:
                <<: *storageMode
              ttl:
                type: string
                pattern: '(^(?:(\d+)h)?(?:(\d+)m)?(?:(\d+)s)?(?:(\d+)ms)?(?:(\d+)(µs|us))?(?:(\d+)ns)?$)|(^(0)$)'
                description: |
                  TTL specifies the expiration time for cached content, after which it will be automatically cleaned up.
                  Default: If not set, the TTL defaults to 7 days (168 hours).
                  Persistent Cache: If set to 0, the cache will never expire.
                x-example:
                  - "168h"
                  - "168h10m"
                  - "168h10m5s"
                default: 168h
        oneOf:
          - required: [mode]
            properties:
              mode:
                enum: [Direct]
              direct: {}
            not:
              required: [proxy, detached]
          - required: [mode]
            properties:
              mode:
                enum: [Proxy]
              proxy: {}
            not:
              required: [detached, direct]
          - required: [mode]
            properties:
              mode:
                enum: [Detached]
              detached: {}
            not:
              required: [proxy, direct]
      deckhouse:
        type: object
        description: Initial parameters required to install Deckhouse.
        properties:
          devBranch:
            type: string
            deprecated: true
            description: |
              The parameter is used for development needs. Will be replaced with the CLI-tools.
