# Channel canary settings
"canary":
  "alpha":
    enabled: true
    waves: 2
    interval: "5m"
  "beta":
    enabled: false
    waves: 1
    interval: "1m"
  "early-access":
    enabled: true
    waves: 6
    interval: "30m"
  "stable":
    enabled: true
    waves: 6
    interval: "30m"
  "rock-solid":
    enabled: false
    waves: 5
    interval: "5m"

# release requirements, don't forget to register check function in a file requirements.go
requirements:
  "k8s": "<autogenerated on the build stage>" # modules/040-control-plane-manager/requirements/check.go
  "disabledModules": "delivery,l2-load-balancer,ceph-csi" # specific key with comma-separated list of modules, which have to be disabled to deploy this release
  # autoK8sVersion must be equal to 'DefaultKubernetesVersion' in the 'dhctl/pkg/config/base.go'
  # it's used to block release with deprecated APIs when changing default kubernetes version
  "autoK8sVersion": "<autogenerated on the build stage>" #modules/340-monitoring-kubernetes/requirements/check.go
  "ingressNginx": "1.9" # modules/402-ingress-nginx/requirements/check.go
  "nodesMinimalOSVersionUbuntu": "18.04" # modules/040-node-manager/requirements/check.go
  "nodesMinimalOSVersionDebian": "10" # modules/040-node-manager/requirements/check.go
  "istioMinimalVersion": "1.19" # modules/110-istio/requirements/check.go
  "metallbHasStandardConfiguration": "true" # ee/se/modules/380-metallb/requirements/check.go
  "checkAdditionalPropertiesDhctlConfigs": "true" # modules/040-node-manager/requirements/check_config.go
  "unmetCloudConditions": "true" # modules/040-node-manager/requirements/check.go

# map of disruptions, associated with a specific release. You have to register check functions before specified release
disruptions:
  "1.36": ["ingressNginx"] # modules/402-ingress-nginx/requirements/disruption.go
