variables:
  # Don't forget to update .gitlab-ci-simple.yml if necessary
  WERF_CHANNEL: "ea"
  WERF_ENV: FE
  # We use stapel image from own registry due to docker hub pull amount limitation.
  # To re-push stapel image from docker hub use command:
  # `skopeo copy docker://flant/werf-stapel:0.6.1 docker://registry-write.deckhouse.io/flant/werf-stapel:0.6.1`
  WERF_STAPEL_IMAGE_NAME: "${DECKHOUSE_REGISTRY_READ_HOST}/flant/werf-stapel"
  WERF_STAPEL_IMAGE_VERSION: "0.6.1"
  TEST_TIMEOUT: "15m"
  DEV_REGISTRY_PATH: "${DECKHOUSE_DEV_REGISTRY_HOST}/${CI_PROJECT_PATH}"
  BASE_IMAGES_REGISTRY_PATH: "registry.deckhouse.io/base_images/"

include:
  - '.gitlab/ci_includes/terraform_versions.yml'
  - '.gitlab/ci_includes/image_versions.yml'
  - '.gitlab/ci_includes/web.yml'
  - '.gitlab/ci_templates/build.yml'
  - '.gitlab/ci_templates/cleanup.yml'
  - '.gitlab/ci_templates/tests.yml'
  - '.gitlab/ci_templates/cloud_tests.yml'
  - '.gitlab/ci_templates/deploy.yml'

stages:
  - build
  - testing
  - cloud_testing_docker
  - cloud_testing_containerd
  - deploy
  - deploy_website
  - cleanup_registry
  - cleanup_builder

Go Generate:
  extends: .Go Generate template
  tags:
    - werf-distributed

Build CE:
  extends: .Build template
  tags:
    - werf-distributed
  variables:
    WERF_ENV: CE
  only:
  - tags

Build EE:
  extends: .Build template
  tags:
    - werf-distributed
  variables:
    WERF_ENV: EE
  only:
  - tags

Build FE:
  extends: .Build template
  tags:
    - werf-distributed

Tests:
  extends: .Tests template
  tags:
    - werf-distributed
  needs: &needs
    - "Build FE"

Matrix Tests:
  extends: .Matrix Tests template
  tags:
    - werf-distributed
  needs: *needs

Dhctl Tests:
  extends: .Dhctl Tests template
  tags:
    - werf-distributed
  needs: *needs

GolangCI Lint:
  extends: .GolangCI Lint template
  tags:
    - werf-distributed
  needs: *needs

OpenAPI Test Cases:
  extends: .OpenAPI Test Cases template
  tags:
    - werf-distributed
  needs: *needs

Cloud layouts Tests docker (manual):
  extends: .Cloud layouts Tests template for docker
  tags:
    - cloud-layouts
  except:
    refs:
    - schedules
    - alpha
    - beta
    - early-access
    - stable
    - rock-solid
  when: manual
  needs: *needs

Cloud layouts Tests containerd (manual):
  extends: .Cloud layouts Tests template for containerd
  tags:
    - cloud-layouts
  except:
    refs:
      - schedules
      - alpha
      - beta
      - early-access
      - stable
      - rock-solid
  when: manual
  needs: *needs

Cloud layouts Tests vSphere docker (manual):
  extends: .Cloud layouts Tests vSphere template for docker
  tags:
    - cloud-layouts-vsphere
  except:
    refs:
    - schedules
    - alpha
    - beta
    - early-access
    - stable
    - rock-solid
  when: manual
  needs: *needs

Cloud layouts Tests vSphere containerd (manual):
  extends: .Cloud layouts Tests vSphere template for containerd
  tags:
    - cloud-layouts-vsphere
  except:
    refs:
      - schedules
      - alpha
      - beta
      - early-access
      - stable
      - rock-solid
  when: manual
  needs: *needs

Cloud layouts Tests Static docker (manual):
  extends: .Cloud layouts Tests Static template for docker
  tags:
    - cloud-layouts
  except:
    refs:
      - schedules
      - alpha
      - beta
      - early-access
      - stable
      - rock-solid
  when: manual
  needs: *needs

Cloud layouts Tests Static containerd (manual):
  extends: .Cloud layouts Tests Static template for containerd
  tags:
    - cloud-layouts
  except:
    refs:
      - schedules
      - alpha
      - beta
      - early-access
      - stable
      - rock-solid
  when: manual
  needs: *needs

Cloud layouts Tests for containerd (scheduled):
  extends: .Cloud layouts Tests template for containerd scheduled
  tags:
    - cloud-layouts
  only:
    variables:
    - $CLOUD_LAYOUTS_SCHEDULE
  when: always
  needs: *needs

Cloud layouts Tests vSphere for containerd (scheduled):
  extends: .Cloud layouts Tests vSphere template for containerd scheduled
  tags:
    - cloud-layouts-vsphere
  only:
    variables:
      - $CLOUD_LAYOUTS_SCHEDULE
  when: always
  needs: *needs

Cloud layouts Tests Static for containerd (scheduled):
  extends: .Cloud layouts Tests Static template for containerd scheduled
  tags:
    - cloud-layouts
  only:
    variables:
      - $CLOUD_LAYOUTS_SCHEDULE
  when: always
  needs: *needs

Validators:
  extends: .Go Validators template
  tags:
    - werf-distributed
  needs: *needs

No Cyrillic Validation:
  extends: .No Cyrillic Validation template
  tags:
    - werf-distributed
  needs: []

Doc Validation:
  extends: .Content Validation template
  tags:
    - werf-distributed
  needs: []

Copyright Validation:
  extends: .Copyright Validation template
  tags:
    - werf-distributed
  needs: []

.base_deploy: &base_deploy
  extends: .base_deploy_template
  after_script:
    - git checkout ${CI_JOB_NAME} && git reset ${CI_COMMIT_SHA}
    - git push --force $(echo ${CI_REPOSITORY_URL} | sed -r "s/^(.+gitlab-ci-token:).+(\@.+)$/\1${REGISTRY_CLEANER_TOKEN}\2/") ${CI_JOB_NAME}
  needs:
    - "Matrix Tests"
    - "Validators"
    - "Tests"
    - "Build CE"
    - "Build EE"
    - "Build FE"
    - "Go Generate"
  tags:
    - werf-distributed
  dependencies:
    - "Build CE"
    - "Build EE"
    - "Build FE"
  parallel:
    matrix:
    - WERF_ENV: CE
    - WERF_ENV: EE
    - WERF_ENV: FE
  only:
    - tags

alpha:
  <<: *base_deploy
  environment:
    name: alpha

beta:
  <<: *base_deploy
  environment:
    name: beta

early-access:
  <<: *base_deploy
  environment:
    name: early-access

stable:
  <<: *base_deploy
  environment:
    name: stable

rock-solid:
  <<: *base_deploy
  environment:
    name: rock-solid

Cleanup registry:
  extends: .Cleanup registry template
  tags:
    - werf-distributed
