# base components imports
# . is dict have keys:
#   k8sVersions - list of dict versions k8s
#   CandiVersionMap - dict CandiVersionMap from werf.yaml
{{- define "base components imports" }}
{{- $context := . -}}
- image: tools/semver
  add: /usr/bin/semver
  to: /usr/bin/semver
  before: setup
  {{- range $k8s := $context.k8sVersions }}
    {{- $image_version := printf "%s.%d" $k8s.kubectl (index $context.CandiVersionMap "k8s" $k8s.kubectl "patch") | replace "." "-" }}
- image: common/kubernetes-artifact-{{ $image_version }}
  add: /src/_output/bin/kubectl
  to: /usr/bin/kubectl-{{ $k8s.kubectl }}
  before: setup
  {{- end }}

{{- end }}


# base components
# . is dict have keys:
#   Files - copy Files.Get
#   prefix - Files.Get prefix
#   k8sVersions - list of dict versions k8s
{{- define "base components" }}
{{- $context := . -}}

- |
  # Install kubectl wrapper
  cat <<"EOD" > /usr/bin/kubectl
  {{- tpl ($context.Files.Get (printf "%sdeckhouse-controller/files/kubectl_wrapper.sh.tpl" $context.prefix)) $context.k8sVersions | nindent 2 }}
  EOD
  chmod +x /usr/bin/kubectl
  # Shell comfort: inputrc
  cat <<"EOD" > /etc/inputrc
  {{- $context.Files.Get (printf "%sdeckhouse-controller/files/inputrc" $context.prefix) | nindent 2 }}
  EOD
  # Shell comfort: bashrc
  cat <<"EOD" > /etc/bashrc
  {{- tpl ($context.Files.Get (printf "%sdeckhouse-controller/files/bashrc.tpl" $context.prefix)) $context.k8sVersions | nindent 2 }}
  EOD
  # Shell comfort: add bashrc for deckhouse
  rm -f /.bashrc
  ln -s /etc/bashrc /.bashrc
  # Shell comfort: add bashrc for deckhouse root user
  mkdir -p /root
  rm -f /root/.bashrc
  ln -s /etc/bashrc /root/.bashrc
  # Shell comfort: create /etc/vim
  mkdir -p /etc/vim/
  # Shell comfort: vimrc.local
  cat <<"EOD" > /etc/vim/vimrc.local
  {{- $context.Files.Get (printf "%sdeckhouse-controller/files/vimrc.local" $context.prefix) | nindent 2 }}
  EOD
{{- end }}

# common-base image
# . is dict have keys:
#   Files - .Files.Get
#   prefix - Files.Get prefix
#   k8sVersions - list of dict versions k8s
#   CandiVersionMap - dict CandiVersionMap from werf.yaml
#    - dict CandiVersionMap from werf.yaml
{{- define "common_base_image" }}
{{- $context := . -}}
---
image: common-base-python-artifact
final: false
fromImage: base/python
import:
- image: common/wheel-artifact
  add: /wheels
  to: /wheels
  before: install
shell:
  install:
  - pip3 install -f file:///wheels --no-index pyOpenSSL==24.3.0 cryptography==44.0.1 bcrypt==4.1.1
---
image: common-base
fromImage: base/distroless
import:
- image: common-base-python-artifact
  add: /
  to: /
  before: setup
  includePaths:
  - usr/bin/python*
  - usr/lib/python*
  - usr/lib/libc.so
  - lib/ld-musl-x86_64.so.1
{{ include "base components imports" (dict "k8sVersions" $context.k8sVersions "CandiVersionMap" $context.CandiVersionMap ) }}
- image: registrypackages/d8-curl-artifact-8-9-1
  add: /d8-curl
  to: /usr/bin/curl
  before: install
- image: tools/bash
  add: /usr/bin/bash
  to: /bin/bash
  before: install
- image: tools/bash-completion
  add: /
  to: /
  includePaths:
  - etc/bash_completion
  - etc/bash_completion.d
  - usr/share/bash-completion
  before: install
- image: tools/jq
  add: /usr/bin/jq
  before: install
- image: tools/yq
  add: /usr/bin/yq
  before: install
- image: tools/sed
  add: /usr/bin/sed
  before: install
- image: tools/grep
  add: /usr/bin/grep
  before: install
- image: tools/gawk
  add: /
  to: /
  includePaths:
  - usr/bin/awk
  - usr/bin/gawk
  before: install
- image: tools/findutils
  add: /usr/bin/find
  before: install
- image: tools/coreutils
  add: /
  to: /
  includePaths:
  - usr/bin/[
  - usr/bin/b2sum
  - usr/bin/base32
  - usr/bin/base64
  - usr/bin/basename
  - usr/bin/basenc
  - usr/bin/cat
  - usr/bin/chcon
  - usr/bin/chgrp
  - usr/bin/chmod
  - usr/bin/chown
  - usr/bin/chroot
  - usr/bin/cksum
  - usr/bin/comm
  - usr/bin/coreutils
  - usr/bin/cp
  - usr/bin/csplit
  - usr/bin/cut
  - usr/bin/date
  - usr/bin/dd
  - usr/bin/df
  - usr/bin/dir
  - usr/bin/dircolors
  - usr/bin/dirname
  - usr/bin/du
  - usr/bin/echo
  - usr/bin/env
  - usr/bin/expand
  - usr/bin/expr
  - usr/bin/factor
  - usr/bin/false
  - usr/bin/fmt
  - usr/bin/fold
  - usr/bin/groups
  - usr/bin/head
  - usr/bin/hostid
  - usr/bin/id
  - usr/bin/install
  - usr/bin/join
  - usr/bin/kill
  - usr/bin/link
  - usr/bin/ln
  - usr/bin/logname
  - usr/bin/ls
  - usr/bin/md5sum
  - usr/bin/mkdir
  - usr/bin/mkfifo
  - usr/bin/mknod
  - usr/bin/mktemp
  - usr/bin/mv
  - usr/bin/nice
  - usr/bin/nl
  - usr/bin/nohup
  - usr/bin/nproc
  - usr/bin/numfmt
  - usr/bin/od
  - usr/bin/paste
  - usr/bin/pathchk
  - usr/bin/pinky
  - usr/bin/pr
  - usr/bin/printenv
  - usr/bin/printf
  - usr/bin/ptx
  - usr/bin/pwd
  - usr/bin/readlink
  - usr/bin/realpath
  - usr/bin/rm
  - usr/bin/rmdir
  - usr/bin/runcon
  - usr/bin/seq
  - usr/bin/sha1sum
  - usr/bin/sha224sum
  - usr/bin/sha256sum
  - usr/bin/sha384sum
  - usr/bin/sha512sum
  - usr/bin/shred
  - usr/bin/shuf
  - usr/bin/sleep
  - usr/bin/sort
  - usr/bin/split
  - usr/bin/stat
  - usr/bin/stdbuf
  - usr/bin/stty
  - usr/bin/sum
  - usr/bin/sync
  - usr/bin/tac
  - usr/bin/tail
  - usr/bin/tee
  - usr/bin/test
  - usr/bin/timeout
  - usr/bin/touch
  - usr/bin/tr
  - usr/bin/true
  - usr/bin/truncate
  - usr/bin/tsort
  - usr/bin/tty
  - usr/bin/uname
  - usr/bin/unexpand
  - usr/bin/uniq
  - usr/bin/unlink
  - usr/bin/uptime
  - usr/bin/users
  - usr/bin/vdir
  - usr/bin/wc
  - usr/bin/who
  - usr/bin/whoami
  - usr/bin/yes
  before: install
- image: tools/openssl
  add: /usr/lib
  to: /usr/lib
  includePaths:
  - libcrypto.so*
  - libssl.so*
  - engines-3
  - ossl-modules
  before: install
- image: tools/openssl
  add: /usr/bin/openssl
  to: /usr/bin/openssl
  before: install
- image: tools/vim
  add: /
  to: /
  includePaths:
  - usr/bin/vim
  - usr/share/vim
  before: install
- image: tools/less
  add: /usr/bin/less
  to: /usr/bin/less
  before: install
- image: tools/util-linux
  add: /usr/bin/rev
  to: /usr/bin/rev
  before: install
- image: tools/diffutils
  add: /usr/bin/diff
  to: /usr/bin/diff
  before: install
- image: tools/procps
  add: /bin/ps
  to: /bin/ps
  before: install
shell:
  install:
  {{- include "base components" (dict "Files" $context.Files "prefix" $context.prefix "k8sVersions" $context.k8sVersions) | nindent 2 }}
  # link /run directory to /var/run
  - ln -s /var/run /run
  # add link from bash to bash
  - ln -s /bin/bash /bin/sh
  # add link from vim to vi
  - ln -s /usr/bin/vim /usr/bin/vi
imageSpec:
  config:
    env: { "CRYPTOGRAPHY_OPENSSL_NO_LEGACY": "true", "EDITOR": "/usr/bin/vim" }
{{- end }}


# base-k8s-versions
# In base_k8s_versions the list of versions from .CandiVersionMap.k8s is traversed and
#   then it is divided into 3 elements and the kubectl value is selected from them.
# The case that 1 or 2 elements will be left at the end is taken into account.
# . is $
#
# return
# .k8sVersions:
# - version: ["1.27", "1.28", "1.29"]
#   kubectl: "1.28"
# - version: ["1.30"]
#   kubectl: "1.30"
{{- define "base_k8s_versions" -}}
  {{- $keys := list }}
  {{- range $key, $value := .CandiVersionMap.k8s }}
    {{- $keys = append $keys $key }}
  {{- end }}
  {{- $chunks := list }}
  {{- $chunk := list }}
  {{- $lens := len $keys }}
  {{- /* Going through all the keys */}}
  {{- range $index, $value := $keys }}
    {{- $chunk = append $chunk $value }}
    {{- /* If the chunk has reached size 3 or it is the last element */}}
    {{- if or (eq (len $chunk) 3) (eq (add $index 1) $lens) }}
      {{- /* Determine kubectl version: take the second element of the chunk if it has 3 elements , otherwise the first */}}
      {{- $kubectl := index $chunk 0 }}
      {{- if ge (len $chunk) 3 }}
        {{- $kubectl = index $chunk 1 }}
      {{- end }}
      {{- /* Add the chunk to the chunks */}}
      {{- $chunks = append $chunks (dict "version" $chunk "kubectl" $kubectl) }}
      {{- $chunk = list }}
    {{- end }}
  {{- end }}
  {{- $_ := set . "k8sVersions" $chunks }}
{{- end }}

