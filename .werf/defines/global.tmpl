# k8s_versions
# . is $
#
# return
# .k8sVersions:
# - version: ["1.27", "1.28", "1.29"]
#   kubectl: "1.28"
# - version: ["1.30"]
#   kubectl: "1.30"
{{- define "k8s_versions" -}}
  {{- $keys := list }}
  {{- range $key, $value := .CandiVersionMap.k8s }}
    {{- $keys = append $keys $key }}
  {{- end }}
  {{- $chunks := list }}
  {{- $chunk := list }}
  {{- $lens := len $keys }}
  {{- /* Going through all the keys */}}
  {{- range $index, $value := $keys }}
    {{- $chunk = append $chunk $value }}
    {{- /* If the chunk has reached size 3 or it is the last element */}}
    {{- if or (eq (len $chunk) 3) (eq (add $index 1) $lens) }}
      {{- /* Determine kubectl version: take the second element of the chunk if there is one, otherwise the first */}}
      {{- $kubectl := index $chunk 0 }}
      {{- if ge (len $chunk) 2 }}
        {{- $kubectl = index $chunk 1 }}
      {{- end }}
      {{- /* Add the chunk to the chunk list */}}
      {{- $chunks = append $chunks (dict "version" $chunk "kubectl" $kubectl) }}
      {{- $chunk = list }}
    {{- end }}
  {{- end }}
  {{- $_ := set . "k8sVersions" $chunks }}
{{- end }}
