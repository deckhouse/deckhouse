---
# use image for actual terraform version for infra deployment in e2e
image: e2e-terraform
# we use artifact with ubuntu because alpine can not unzip with `unzip` and `tar` command
# current openstack zip-archive with error: "unzip: zip flag 8 (streaming) is not supported"
from: {{ .Images.BASE_UBUNTU }}
import:
  {{- $k8sVersion := "1.27"}}
  {{- $image_version := printf "%s.%d" $k8sVersion (index $.CandiVersionMap "k8s" $k8sVersion "patch") | replace "." "-" }}
  - artifact: common/kubernetes-artifact-{{ $image_version }}
    add: /src/_output/bin/kubectl
    to: /usr/local/bin/kubectl
    before: setup
  - artifact: terraform # from modules/040-terraform-manager/images/terraform-manager-base/werf.inc.yaml
    add: /terraform/terraform
    to: /image/bin/terraform
    before: setup
    {{- range $_, $edition := $.Editions }}
      {{- if $edition.terraformProviders }}
        {{- range $_, $tfProvider := $edition.terraformProviders }}
          {{- $tf := index $.TF $tfProvider }}
  - artifact: {{ $tf.artifact }} # from modules/040-terraform-manager/images/terraform-manager-{PROVIDER}/werf.inc.yaml
    add: /{{ $tf.artifactBinary }}
    to: /usr/local/share/terraform/plugins/registry.terraform.io/{{ $tf.namespace }}/{{ $tf.type }}/{{ $tf.version }}//linux_amd64/{{ $tf.destinationBinary }}
    before: setup
      {{- end }}
    {{- end }}
    {{- if eq $.Env $edition.name }}
      {{- break -}}
    {{- end }}
  {{- end }}
  - artifact: e2e-eks-terraform-plugins
    add: /terraform-provider-random
    to: /usr/local/share/terraform/plugins/registry.terraform.io/hashicorp/random/3.4.3/linux_amd64/terraform-provider-random_v3.4.3_x5
    before: setup
  - artifact: e2e-eks-terraform-plugins
    add: /terraform-provider-tls
    to: /usr/local/share/terraform/plugins/registry.terraform.io/hashicorp/tls/4.0.5/linux_amd64/terraform-provider-tls_v4.0.5_x5
    before: setup
  - artifact: e2e-eks-terraform-plugins
    add: /terraform-provider-cloudinit
    to: /usr/local/share/terraform/plugins/registry.terraform.io/hashicorp/cloudinit/2.2.0/linux_amd64/terraform-provider-cloudinit_v2.2.0_x5
    before: setup
  - artifact: e2e-eks-terraform-plugins
    add: /terraform-provider-kubernetes
    to: /usr/local/share/terraform/plugins/registry.terraform.io/hashicorp/kubernetes/2.31.0/linux_amd64/terraform-provider-kubernetes_v2.31.0_x5
    before: setup
shell:
  beforeInstall:
  - apt-get update
  - DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends wget unzip git python3 python3-pip jq curl gettext-base bsdextrautils
  - pip3 install awscli
  - |
    mkdir /terraform
    mkdir -p /usr/local/share/terraform/plugins
    cat << EOD > /root/.terraformrc
    provider_installation {
      filesystem_mirror {
        path    = "/usr/local/share/terraform/plugins"
        include = ["*/*/*"]
      }
    }
    EOD
    touch /terraform.log
    chmod 755 /terraform.log
---
artifact: e2e-eks-terraform-plugins
from: {{ $.Images.BASE_GOLANG_21_ALPINE_DEV }}
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apk add --no-cache git openssh-client
  - mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
  install:
  - export GOPROXY={{ $.GOPROXY }}
  - git clone --depth 1 --branch v3.4.3 {{ $.SOURCE_REPO }}/hashicorp/terraform-provider-random.git /src-provider-random
  - cd /src-provider-random
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags \"-static\""
  - git clone --depth 1 --branch v4.0.4 {{ $.SOURCE_REPO }}/hashicorp/terraform-provider-tls.git /src-provider-tls
  - cd /src-provider-tls
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags \"-static\""
  - git clone --depth 1 --branch v2.2.0 {{ $.SOURCE_REPO }}/hashicorp/terraform-provider-cloudinit.git /src-provider-cloudinit
  - cd /src-provider-cloudinit
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags \"-static\""
  - git clone --depth 1 --branch v2.31.0 {{ $.SOURCE_REPO }}/hashicorp/terraform-provider-kubernetes.git /src-provider-kubernetes
  - cd /src-provider-kubernetes
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags \"-static\""
  - mv /src-provider-random/terraform-provider-random /terraform-provider-random
  - mv /src-provider-tls/terraform-provider-tls /terraform-provider-tls
  - mv /src-provider-cloudinit/terraform-provider-cloudinit /terraform-provider-cloudinit
  - mv /src-provider-kubernetes/terraform-provider-kubernetes /terraform-provider-kubernetes
  - chmod 755 /terraform-provider-*
  - chown 64535:64535 /terraform-provider-*
