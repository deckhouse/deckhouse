image: jq-src-artifact
fromImage: src-artifact
final: false
shell:
  install:
    - cd /src
    - git clone --depth 1 {{ .SOURCE_REPO }}/jqlang/jq --branch "jq-1.7.1" .
    - rm -r docs
    - mkdir -p docs/content/manual
    - touch docs/content/manual/manual.yml
---
image: jq
from: {{ $.Images.BASE_ALPINE }}
final: false
import:
  - image: jq-src-artifact
    add: /src
    to: /src
    before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache oniguruma-dev automake autoconf libtool build-base git
  install:
    - cd /src
    - autoreconf -fi
    - |
      ./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --mandir=/usr/share/man \
        --localstatedir=/var \
        --disable-docs
    - make LDFLAGS=-all-static
    - make prefix=/usr install
---
image: yq4-src-artifact
fromImage: src-artifact
final: false
shell:
  install:
    - git clone --depth 1 {{ .SOURCE_REPO }}/mikefarah/yq --branch "v4.44.3" /src
---
image: yq4-artifact
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
final: false
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
import:
  - image: yq4-src-artifact
    add: /src
    to: /src
    before: install
shell:
  install:
    - export GOPROXY={{ .GOPROXY }}
    - cd /src
    - CGO_ENABLED=0 GOOS=linux go build -ldflags '-s -w -extldflags "-static"' -o /usr/local/bin/yq
---
image: semver-src-artifact
fromImage: src-artifact
final: false
shell:
  install:
    - git clone --depth 1 {{ .SOURCE_REPO }}/fsaintjacques/semver-tool --branch 2.1.0 /src
---
image: semver-artifact
from: {{ $.Images.BASE_ALPINE }}
final: false
import:
  - image: semver-src-artifact
    add: /src
    to: /src
    before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache make
  install:
    - cd /src
    - make install
---
image: tini-src-artifact
fromImage: src-artifact
final: false
git:
  - add: /patches/tini
    to: /patches
    stageDependencies:
      install:
        - '**/*'
shell:
  install:
    - git clone --depth 1 {{ .SOURCE_REPO }}/krallin/tini --branch v0.19.0 /src
    - cd /src
    - git apply /patches/*.patch --verbose
---
image: tini-artifact
from: {{ $.Images.BASE_ALPINE }}
final: false
import:
  - artifact: tini-src-artifact
    add: /src
    to: /src
    before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache build-base cmake
  install:
    - cd /src
    - export CFLAGS="-DPR_SET_CHILD_SUBREAPER=36 -DPR_GET_CHILD_SUBREAPER=37"
    - cmake . && make
    - mkdir -p /tini
    - cp tini-static /tini
---
image: src-artifact
from: {{ .Images.BASE_ALT_P11 }}
final: false
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - apt-get install -y git
  - rm -rf /var/lib/apt/lists/* /var/cache/apt/* && mkdir -p /var/lib/apt/lists/partial /var/cache/apt/archives/partial
  - mkdir -p /src
  # ssh auth to 3p repos
  - echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
---
{{ $date := "2024-12-14" }}
image: alt-p11-artifact
from: {{ .Images.BASE_ALT_P11 }}
final: false
shell:
  beforeInstall:
  - sed -i "s|http://ftp.altlinux.org/pub/distributions/ALTLinux p11/branch/x86_64 classic|http://ftp.altlinux.org/pub/distributions/archive/p11/date/{{ $date | replace "-" "/" }}/ x86_64 classic|g" /etc/apt/sources.list.d/alt.list
  - sed -i "s|http://ftp.altlinux.org/pub/distributions/ALTLinux p11/branch/x86_64-i586 classic|http://ftp.altlinux.org/pub/distributions/archive/p11/date/{{ $date | replace "-" "/" }}/ x86_64-i586 classic|g" /etc/apt/sources.list.d/alt.list
  - sed -i "s|http://ftp.altlinux.org/pub/distributions/ALTLinux p11/branch/noarch classic|http://ftp.altlinux.org/pub/distributions/archive/p11/date/{{ $date | replace "-" "/" }}/ noarch classic|g" /etc/apt/sources.list.d/alt.list
  {{- include "alt packages proxy" . | nindent 2 }}
  # ssh auth to 3p repos
  - echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
docker:
  USER: 64535
---
# base artifact to do relocate
image: relocate-artifact
fromImage: alt-p11-artifact
final: false
git:
  - add: /tools/binary_replace/binary_replace.sh
    to: /binary_replace.sh
    stageDependencies:
      install:
        - '**/*'
shell:
  install:
  - apt-get install -y glibc-utils
