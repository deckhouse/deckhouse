kind: DynamixClusterConfiguration
apiVersions:
- apiVersion: deckhouse.io/v1
  openAPISpec:
    type: object
    additionalProperties: false
    description: |
      Описывает конфигурацию облачного кластера в Базис.DynamiX.

      Используется cloud-провайдером, если control plane кластера размещен в облаке.

      Выполните следующую команду, чтобы изменить конфигурацию в работающем кластере:

      ```shell
      kubectl -n d8-system exec -ti svc/deckhouse-leader -c deckhouse -- deckhouse-controller edit provider-cluster-configuration
      ```
    doc-search: |
      ProviderClusterConfiguration
    properties:
      sshPublicKey:
        type: string
        description: Публичный ключ для доступа на узлы.
      location:
        type: string
        description: Имя места установки кластера.
      account:
        type: string
        description: Имя аккаунта.
      masterNodeGroup:
        description: |
          Спецификация для описания NodeGroup master-узлов.
          > Внимание! После изменения параметров секции `masterNodeGroup` необходимо выполнить команду `dhctl converge`, чтобы изменения вступили в силу.
        properties:
          replicas:
            description: |
              Количество создаваемых master-узлов. Для обеспечения кворума важно, чтобы оно было нечетным.
          instanceClass:
            description: |
              Частичное содержимое полей [DynamixInstanceClass](cr.html#dynamixinstanceclass).
            properties: &instanceClassProperties
              numCPUs:
                description: |
                  Количество vCPU, выделяемых виртуальным машинам.
              memory:
                description: |
                  Память в MiB для выделения виртуальным машинам.
              rootDiskSizeGb:
                description: |
                  Размер корневого диска в GiB для использования в виртуальных машинах.
              etcdDiskSizeGb:
                description: |
                  Размер диска для хранения данных etcd в GiB.
              imageName:
                description: |
                  Имя образа ОС, используемое для развертывания ВМ.
              storageEndpoint:
                description: |
                  Имя хранилища.
              pool:
                description: |
                  Имя пула хранения.
              externalNetwork:
                description: |
                  Имя внешней сети.
      nodeGroups:
        description: |
          Массив дополнительных NodeGroup для создания статических узлов (например, для выделенных frontend-узлов или шлюзов).
        items:
          properties:
            name:
              description: |
                Имя NodeGroup, которое будет использоваться для генерации имен узлов.
            replicas:
              description: |
                Количество узлов.
            nodeTemplate:
              description: |
                Настройки Node-объектов в Kubernetes, которые будут добавлены после регистрации узлов.
              properties:
                labels:
                  description: |
                    Список лейблов, которые будут прикреплены ко всем ресурсам кластера (если они это поддерживают).

                    Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#objectmeta-v1-meta) `metadata.labels`.
                    Если поменять лейблы в рабочем кластере, после применения изменений необходимо пересоздать все машины.
                  x-doc-example: |
                    ```yaml
                    labels:
                      environment: production
                      app: warp-drive-ai
                    ```
                annotations:
                  description: |
                    Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#objectmeta-v1-meta) `metadata.annotations`.
                  x-doc-example: |
                    ```yaml
                    annotations:
                      ai.fleet.com/discombobulate: "true"
                    ```
                taints:
                  description: |
                    Аналогично полю `.spec.taints` из объекта [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#taint-v1-core).
                    > **Внимание!** Доступны только поля `effect`, `key`, `values`.
                  x-doc-example: |
                    ```yaml
                    taints:
                    - effect: NoExecute
                      key: ship-class
                      value: frigate
                    ```
            instanceClass:
              description: |
                Частичное содержимое полей [DynamixInstanceClass](cr.html#dynamixinstanceclass).
              properties:
                <<: *instanceClassProperties
      nodeNetworkCIDR:
        description: |
          IP CIDR, который будет назначен внутреннему сегменту этой ViNS.
      nameservers:
        description: |
          Список IP-адресов DNS-серверов.
      layout:
        description: |
          Название схемы размещения.
          [Подробнее](layouts.html) о возможных схемах размещения провайдера.
      provider:
        type: object
        additionalProperties: false
        description: Параметры для подключения к Базис.DynamiX.
        properties:
          controllerUrl:
            description: URL-адрес конечной точки API Базис.DynamiX.
          oAuth2Url:
            description: URL-адрес конечной точки SSO Базис.DynamiX API.
          appId:
            description: ID приложения.
          appSecret:
            description: Секрет приложения.
          insecure:
            description: Установите значение `true`, если Базис.DynamiX имеет самоподписанный сертификат.
