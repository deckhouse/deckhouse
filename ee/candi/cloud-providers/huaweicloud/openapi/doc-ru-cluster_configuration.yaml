kind: HuaweiCloudClusterConfiguration
apiVersions:
- apiVersion: deckhouse.io/v1
  openAPISpec:
    type: object
    description: |
      Описывает конфигурацию облачного кластера в Базис.DynamiX.

      Используется cloud-провайдером, если control plane кластера размещен в облаке.

      Выполните следующую команду, чтобы изменить конфигурацию в работающем кластере:

      ```shell
      kubectl -n d8-system exec -ti svc/deckhouse-leader -c deckhouse -- deckhouse-controller edit provider-cluster-configuration
      ```
    doc-search: |
      ProviderClusterConfiguration
    properties:
      sshPublicKey:
        type: string
        description: Публичный ключ для доступа на узлы.
      zones:
        description: |
          Глобальное ограничение набора зон, с которыми работает данный cloud-провайдер.
      masterNodeGroup:
        description: |
          Спецификация для описания NodeGroup master-узлов.

          > Внимание! После изменения параметров секции `masterNodeGroup` необходимо выполнить команду `dhctl converge`, чтобы изменения вступили в силу.
        properties:
          replicas:
            description: |
              Количество создаваемых master-узлов. Для обеспечения кворума важно, чтобы оно было нечетным.
          instanceClass:
            description: |
              Partial contents of the fields of the [HuaweiCloudInstanceClass](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/cr.html#huaweicloudinstanceclass).
            properties: &instanceClassProperties
              flavorName: &instanceClassFlavorName
                description: |
                  Тип заказываемых виртуальных машин.
              imageName: &instanceClassImageName
                description: |
                  Имя образа виртуальной машины, который будет использоваться для инстанса.
                  Список поддерживаемых Deckhouse ОС и их версий можно найти в [документации](https://deckhouse.ru/products/kubernetes-platform/documentation/v1/supported_versions.html) (учитывайте используемую версию Deckhouse).
              rootDiskSize: &instanceClassRootDiskSize
                description: |
                  Размер root-диска. Значение указывается в гигабайтах.
              etcdDiskSizeGb:
                description: |
                  Размер диска для etcd. Значение указывается в гигабайтах.
          volumeTypeMap:
            description: |
              Словарь типов дисков для хранения данных etcd и конфигурационных файлов Kubernetes.

              Формат элементов словаря: `<ЗОНА ДОСТУПНОСТИ>: <ТИП ДИСКА>` (см. пример).

              Если указан параметр `rootDiskSize`, этот же тип диска будет использован в качестве загрузочного диска виртуальной машины.

              Всегда рекомендуется использовать самые быстрые диски, предоставляемые провайдером.

              Если значение, указанное в `replicas`, превышает количество элементов в словаре, master-узлы, чьи номера превышают
              длину словаря, получают значения, начиная с начала словаря. Если для словаря из примера указано `replicas: 5`, с типом
              диска `fast-eu-1a` будут master-0, master-2 и master-4, а с типом диска `fast-eu-1b` будут master-1 и master-3.
          serverGroup:
            description: |
              ServerGroup объединяет инстансы в группу. Инстансы в такой группе будут размещены на одном гипервизоре (affinity) или на разных гипервизорах (anti-affinity). Это позволяет повысить отказоустойчивость кластера.
            properties:
              policy:
                description: |
                  Политика распределения инстансов:

                  - `AntiAffinity` — размещает инстансы на разных гипервизорах.
      nodeGroups:
        description: |
          Массив дополнительных NodeGroup для создания статических узлов (например, для выделенных frontend-узлов или шлюзов).
        items:
          properties:
            name:
              description: |
                Имя NodeGroup, которое будет использоваться для генерации имен узлов.
            replicas:
              description: |
                Количество узлов.
            nodeTemplate:
              description: |
                Настройки Node-объектов в Kubernetes, которые будут добавлены после регистрации узлов.
              properties:
                labels:
                  description: |
                    Список лейблов, которые будут прикреплены ко всем ресурсам кластера (если они это поддерживают).

                    Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#objectmeta-v1-meta) `metadata.labels`.
                annotations:
                  type: object
                  description: |
                    The same as the `metadata.annotations` standard [field](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#objectmeta-v1-meta).
                  x-examples:
                  - ai.fleet.com/discombobulate: "true"
                  additionalProperties:
                    type: string
                taints:
                  type: array
                  description: |
                    The same as the `.spec.taints` field of the [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#taint-v1-core) object.

                    > **Caution!** Only the `effect`, `key`, `values`  fields are available.
                  x-examples:
                  - - effect: NoExecute
                      key: ship-class
                      value: frigate
                  items:
                    type: object
                    properties:
                      effect:
                        type: string
                        enum: [NoSchedule, PreferNoSchedule, NoExecute]
                      key:
                        type: string
                      value:
                        type: string
            instanceClass:
              type: object
              additionalProperties: false
              required: [flavorName, imageName]
              description: |
                Partial contents of the fields of the.
              properties:
                <<: *instanceClassProperties
      layout:
        description: |
          The way resources are located in the cloud.

          Read [more](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/layouts.html) about possible provider layouts.
        type: string
        x-unsafe: true
      standard:
        type: object
        description: |
          Settings for the [`Standard`](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/layouts.html#standard) layout.
        additionalProperties: false
        required: [internalNetworkCIDR]
        properties:
          internalNetworkCIDR: &internalNetworkCIDR
            description: |
              Routing for the internal cluster network.
            type: string
            pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$'
            x-unsafe: true
          internalNetworkDNSServers:
            description: |
              A list of addresses of the recursive DNSs of the internal cluster network.
            type: array
            items:
              type: string
              pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
          internalNetworkSecurity: &internalNetworkSecurity
            description: |
              Defines whether [SecurityGroups](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-openstack/faq.html#how-to-check-whether-the-provider-supports-securitygroups) and [AllowedAddressPairs](https://docs.openstack.org/developer/dragonflow/specs/allowed_address_pairs.html) must be configured for ports of the internal network.
            type: boolean
            default: true
          enableEIP:
            description: |
                Enable Elastic IP for the master nodes.
            type: boolean
            pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$'
            x-unsafe: true
      provider:
        description: |
          Contains [settings to connect](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/environment.html) to the HuaweiCloud API.

          These settings are the same as those in the `connection` field of the [cloud-provider-huaweicloud](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/configuration.html#parameters) module.
        type: object
        additionalProperties: false
        required: [cloud, region, accessKey, secretKey]
        properties:
          cloud:
            type: string
            description: |
              The endpoint of the cloud provider.
          region:
            type: string
            description: |
              The HuaweiCloud region where the cluster will be deployed.
            x-unsafe: true
          accessKey:
            type: string
            description: |
              The access key of the HuaweiCloud to use.
          secretKey:
            type: string
            description: |
              The secret key of the HuaweiCloud to use.
          insecure:
            type: boolean
            description: |
              Trust self-signed SSL certificates.
          authURL:
            type: string
            description: |
              The Identity authentication URL.
          domainName:
            type: string
            description: |
              The Account name of IAM to scope to.
          projectID:
            type: string
            description: |
              The project id.
