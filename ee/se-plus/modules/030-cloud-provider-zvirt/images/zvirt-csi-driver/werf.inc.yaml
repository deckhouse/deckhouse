{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $image_version := $version | replace "." "-" }}
  {{- if $value.csi.zvirt }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /ovirt-csi-driver
  to: /ovirt-csi-driver
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /lib64
  to: /lib64
  before: install
  includePaths:
  - 'libresolv*'
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /lib/udev/scsi_id
  to: /lib/udev/scsi_id
  before: setup
docker:
  ENTRYPOINT: ["/ovirt-csi-driver"]
  USER: deckhouse:deckhouse
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
final: false
fromImage: common/src-artifact
git:
  - add: /{{ $.ModulePath }}modules/030-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
    to: /patches
    includePaths:
      - '**/*.patch'
    stageDependencies:
      install:
        - '**/*.patch'
shell:
  install:
    - git clone --depth 1 --branch {{ $value.csi.zvirt }} {{ $.SOURCE_REPO }}/openshift/ovirt-csi-driver.git /src
    - cd /src
    - find /patches -name '*.patch' | xargs git apply --verbose
    - rm -rf vendor
    - rm -rf .git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
final: false
from: {{ $.Images.BASE_GOLANG_20_BULLSEYE_DEV }} # https://github.com/golang/go/commit/00401835c1d5122a84f0500e48655cd787402f3f
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
    add: /src
    to: /src
    before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - export GO_VERSION=${GOLANG_VERSION}
  - export GOPROXY={{ $.GOPROXY }}
  - cd /src
  - go mod download
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w -X version.Version={{ $value.csi.zvirt }}" -o /ovirt-csi-driver ./cmd/ovirt-csi-driver/ovirt-csi-driver.go
 {{- end }}
{{- end }}
---
{{- $csiBinaries := "/bin/chmod /bin/mount /bin/mkdir /bin/rmdir /bin/umount /bin/findmnt /bin/lsblk /sbin/badblocks /sbin/blockdev /sbin/blk* /sbin/btrfs* /sbin/dumpe2fs /sbin/e2* /sbin/findfs /sbin/fsck* /sbin/fsfreeze /sbin/fstrim /sbin/mke2fs /sbin/mkfs* /sbin/resize2fs /sbin/xfs_repair /usr/sbin/nvme /usr/sbin/parted /usr/sbin/xfs*" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
final: false
from: {{ $.Images.BASE_ALT_DEV }}
shell:
  setup:
    - /binary_replace.sh -i "{{ $csiBinaries }}" -o /relocate
