{{- $version := "release-4.19" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /ovirt-csi-driver
  to: /ovirt-csi-driver
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /lib64
  to: /lib64
  before: install
  includePaths:
  - 'libresolv*'
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /lib/udev/scsi_id
  to: /lib/udev/scsi_id
  before: setup
imageSpec:
  config:
    entrypoint: ["/ovirt-csi-driver"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
  - cd /src
  - git clone --depth 1 --branch {{ $version }} {{ $.SOURCE_REPO }}/openshift/ovirt-csi-driver.git .
  - git apply /patches/*.patch --verbose
  - rm -rf vendor .git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
final: false
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
    add: /src
    to: /src
    before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - cd /src
  - export GOPROXY={{ $.GOPROXY }}
  - go mod download
  setup:
  - cd /src
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w -X version.Version={{ $version }}" -o /ovirt-csi-driver ./cmd/ovirt-csi-driver/ovirt-csi-driver.go
---
{{- $csiBinaries := "/bin/chmod /bin/mount /bin/mkdir /bin/rmdir /bin/umount /bin/findmnt /bin/lsblk /sbin/badblocks /sbin/blockdev /sbin/blk* /sbin/btrfs* /sbin/dumpe2fs /sbin/e2* /sbin/findfs /sbin/fsck* /sbin/fsfreeze /sbin/fstrim /sbin/mke2fs /sbin/mkfs* /sbin/resize2fs /sbin/xfs_repair /usr/sbin/nvme /usr/sbin/parted /usr/sbin/xfs*" }}
image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
final: false
fromImage: common/relocate-artifact
shell:
  beforeInstall:
    - apt-get update -y
    - apt-get install -y e2fsprogs xfsprogs btrfs-progs nfs-utils parted nvme udev
  install:
    - /binary_replace.sh -i "{{ $csiBinaries }}" -o /relocate
