---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /discoverer
  to: /discoverer
  before: setup
imageSpec:
  config:
    entrypoint: ["/discoverer"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ .ModulePath }}modules/{{ .ModulePriority }}-{{ .ModuleName }}/images/{{ .ImageName }}/src
  to:  /src
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
  stageDependencies:
    install:
      - go.mod
      - go.sum
      - "**/*.go"
- add: /go_lib/cloud-data
  to: /src/go_lib/cloud-data
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
  stageDependencies:
    install:
      - go.mod
      - go.sum
      - "**/*.go"
- add: /pkg/log
  to: /src/pkg/log
  excludePaths:
    - "**/*.md"
    - "**/*.yaml"
  stageDependencies:
    install:
      - go.mod
      - go.sum
      - "**/*.go"
secrets:
- id: CLOUD_PROVIDERS_SOURCE_REPO
  value: {{ .CLOUD_PROVIDERS_SOURCE_REPO }}
shell:
  install:
  - git clone --depth 1 --branch v0.0.1-flant $(cat /run/secrets/CLOUD_PROVIDERS_SOURCE_REPO)/ovirt/go-ovirt /src/go-ovirt
  - cd /src
  - sed -i -e 's# /deckhouse/go_lib/cloud-data# /src/go_lib/cloud-data#g' go.mod
  - sed -i -e 's# /deckhouse/pkg/log# /src/pkg/log#g' go.mod
  - printf "\nreplace github.com/ovirt/go-ovirt => /src/go-ovirt\n" >> go.mod
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
final: false
fromImage: builder/golang-alpine
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
shell:
  install:
  - cd /src
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
  setup:
  - cd /src
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /discoverer
  - chown 64535:64535 /discoverer
  - chmod 0755 /discoverer
