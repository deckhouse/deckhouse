image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: '{{- include "infrastructure_manager_base_image" (dict "TF" .TF "providerName" "ovirt") }}'
git:
  - add: /{{ .ModulePath }}candi/cloud-providers/zvirt
    to: /deckhouse/candi/cloud-providers/zvirt
import:
  - image: terraform-provider-ovirt
    add: /terraform-provider-ovirt
    to: /plugins/registry.terraform.io/{{ .TF.ovirt.namespace }}/{{ .TF.ovirt.type }}/{{ .TF.ovirt.version }}/linux_amd64/terraform-provider-ovirt
    before: setup
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
  - git clone --depth 1 --branch v{{ .TF.ovirt.version }} {{ $.SOURCE_REPO }}/oVirt/terraform-provider-ovirt.git /src
  - cd /src
  - git apply /patches/*.patch --verbose
  - rm -rf .git
---
image: terraform-provider-ovirt
final: false
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
mount:
{{ include "mount points for golang builds" . }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache make bash
  install:
  - export GOPROXY={{ $.GOPROXY }}
  - cd /src
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 make build LDFLAGS="-s -w -extldflags \"-static\" -X main.version={{ .TF.ovirt.version }} -X main.commit=00000000"
  - mv /src/terraform-provider-ovirt /terraform-provider-ovirt
  - chmod -R 755 /terraform-provider-ovirt
  - chown 64535:64535 /terraform-provider-ovirt
