---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: '{{- include "infrastructure_manager_base_image" (dict "TF" .TF "providerName" "vsphere") }}'
git:
- add: /{{ .ModulePath }}candi/cloud-providers/vsphere
  to: /deckhouse/candi/cloud-providers/vsphere
import:
- image: terraform-provider-vsphere
  add: /terraform-provider-vsphere
  to: /plugins/{{ include "infrastructure_manager_plugin_dir" (dict "TF" .TF "providerName" "vsphere") }}/{{ .TF.vsphere.namespace }}/{{ .TF.vsphere.type }}/{{ .TF.vsphere.version }}/linux_amd64/terraform-provider-vsphere
  before: setup
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
fromCacheVersion: "2025-02-05.03"
secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}
shell:
  install:
  - git clone --depth 1 --branch v{{ .TF.vsphere.version }}-flant.2 $(cat /run/secrets/SOURCE_REPO)/deckhouse/3p-terraform-provider-vsphere.git /src
  - cd /src
  - rm -rf vendor
  - rm -rf .git
---
image: terraform-provider-vsphere
final: false
fromImage: builder/golang-alpine
mount:
{{ include "mount points for golang builds" . }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
    - export GOPROXY=$(cat /run/secrets/GOPROXY)
    - cd /src
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w -extldflags \"-static\" -X github.com/hashicorp/terraform-provider-vsphere/version.ProviderVersion={{ .TF.vsphere.version }}" -o /terraform-provider-vsphere
    - chmod -R 755 /terraform-provider-vsphere
    - chown 64535:64535 /terraform-provider-vsphere
