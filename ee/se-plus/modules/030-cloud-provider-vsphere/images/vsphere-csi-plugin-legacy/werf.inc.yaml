---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-csi-artifact
  add: /src/vsphere-csi
  to: /bin/vsphere-csi
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
imageSpec:
  config:
    entrypoint: ["/bin/vsphere-csi"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
final: false
fromImage: common/src-artifact
git:
- add: /{{ $.ModulePath }}modules/030-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
      - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}
shell:
  install:
  - git clone $(cat /run/secrets/SOURCE_REPO)/flant/vsphere-csi-driver.git /src
  - git clone --depth 1 --branch v0.2.1 $(cat /run/secrets/SOURCE_REPO)/flant/cloud-provider-vsphere.git /src/ccm
  - cd /src
  - git checkout 6189afc2522d83a96d3857110c61478710110347
  - git apply /patches/csi/*.patch --verbose
  - rm -rf .git vendor
  - cd /src/ccm
  - git apply /patches/ccm/*.patch --verbose
  - rm -rf .git vendor
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-csi-artifact
final: false
fromImage: builder/golang-alpine
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - cd /src
  - go mod edit -replace=k8s.io/cloud-provider-vsphere=/src/ccm
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
  setup:
  - cd /src
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o vsphere-csi cmd/vsphere-csi/main.go
---
{{- $csiBinaries := "/bin/chmod /bin/mount /bin/mkdir /bin/rmdir /bin/umount /bin/findmnt /bin/lsblk /sbin/badblocks /sbin/blockdev /sbin/blk* /sbin/btrfs* /sbin/dumpe2fs /sbin/e2* /sbin/findfs /sbin/fsck* /sbin/fsfreeze /sbin/fstrim /sbin/mke2fs /sbin/mkfs* /sbin/resize2fs /usr/sbin/parted /usr/sbin/xfs* /sbin/mount.nfs* /sbin/umount.nfs*" }}
image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
final: false
fromImage: common/relocate-artifact
shell:
  beforeInstall:
  - apt-get update -y
  - apt-get install -y e2fsprogs xfsprogs btrfs-progs nfs-utils parted nvme udev
  install:
  - /binary_replace.sh -i "{{ $csiBinaries }}" -o /relocate
