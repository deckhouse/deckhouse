{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $image_version := toString $key | replace "." "-"}}
  {{- if $value.csi.vsphere }}
    {{- $patches := (printf "/%smodules/%s-%s/images/%s" $.ModulePath $.ModulePriority $.ModuleName $.ImageName) }}
    {{- $patch := false }}
    {{- range $path, $_ := $.Files.Glob (printf "%s/*" $patches) }}
      {{- if contains $version $path }}
        {{- $patch = true }}
      {{- end }}
    {{- end }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $image_version }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
  add: /src/vsphere-csi
  to: /bin/vsphere-csi
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
imageSpec:
  config:
    entrypoint: ["/bin/vsphere-csi"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
fromImage: common/src-artifact
final: false
{{- if $patch }}
git:
- add: {{ $patches }}/patches/{{ $version }}
  to: /patches
  stageDependencies:
    install:
      - '**/*'
{{- end }}
shell:
  install:
  - git clone --depth 1 --branch {{ $value.csi.vsphere }} {{ $.SOURCE_REPO }}/kubernetes-sigs/vsphere-csi-driver.git /src
  - git clone --depth 1 --branch v0.2.0 {{ $.SOURCE_REPO }}/gofsutil.git /src/gofsutil
  - cd /src
  {{- if $patch}}
  - git apply /patches/*.patch --verbose
  {{- end}}
  - sed -i -e 's# ../gofsutil# /src/gofsutil#g' go.mod
  - rm -rf .git
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $image_version }}
final: false
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact-{{ $image_version }}
  add: /src
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - cd /src/gofsutil
  - go mod init deckhouse/3p/gofsutil
  - cd /src
  - export GOPROXY={{ $.GOPROXY }}
  - go mod download
  setup:
  - cd /src
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o vsphere-csi cmd/vsphere-csi/main.go
  {{- end }}
{{- end }}
---
{{- $csiBinaries := "/bin/chmod /bin/mount /bin/mkdir /bin/rmdir /bin/umount /bin/findmnt /bin/lsblk /sbin/badblocks /sbin/blockdev /sbin/blk* /sbin/btrfs* /sbin/dumpe2fs /sbin/e2* /sbin/findfs /sbin/fsck* /sbin/fsfreeze /sbin/fstrim /sbin/mke2fs /sbin/mkfs* /sbin/resize2fs /usr/sbin/parted /usr/sbin/xfs* /sbin/mount.nfs* /sbin/umount.nfs*" }}
image: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
final: false
fromImage: common/relocate-artifact
shell:
  beforeInstall:
  - apt-get update -y
  - apt-get install -y e2fsprogs xfsprogs btrfs-progs nfs-utils parted nvme udev
  install:
  - /binary_replace.sh -i "{{ $csiBinaries }}" -o /relocate
