{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- if $value.ccm.vsphere }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $version | replace "." "-" }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $version | replace "." "-" }}
  add: /src/.build/bin/vsphere-cloud-controller-manager.linux_amd64
  to: /bin/vsphere-cloud-controller-manager
  before: setup
imageSpec:
  config:
    entrypoint: ["/bin/vsphere-cloud-controller-manager"]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact-{{ $version | replace "." "-" }}
final: false
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
git:
- add: /{{ $.ModulePath }}modules/030-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
  to: /patches
  stageDependencies:
    install:
      - '**/*'
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apk add --no-cache make bash git mercurial patch rsync openssh-client
  - mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
  install:
  - git clone https://github.com/kubernetes/cloud-provider-vsphere.git /src
  - cd /src
  - git checkout {{ $value.ccm.vsphere }}
  - git apply /patches/{{ $version }}/*.patch --verbose
  - make build VERSION={{ $value.ccm.vsphere }}
  - chown 64535:64535 /src/.build/bin/vsphere-cloud-controller-manager.linux_amd64
  - chmod 0755 /src/.build/bin/vsphere-cloud-controller-manager.linux_amd64
  {{- end }}
{{- end }}
