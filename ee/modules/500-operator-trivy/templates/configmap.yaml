---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trivy-operator
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
data:
  scanJob.podTemplateContainerSecurityContext: '{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}'
  scanJob.compressLogs: "true"
  vulnerabilityReports.scanner: "Trivy"
  configAuditReports.scanner: "Trivy"
  report.recordFailedChecksOnly: "true"
  node.collector.imageRef: {{ include "helm_lib_module_image" (list . "nodeCollector") }}
  {{- with (include "tolerations" . | fromJson) }}
  scanJob.tolerations: {{ .tolerations | toJson | quote }}
  {{- end }}
  {{- with (include "nodeSelector" . | fromJson) }}
  scanJob.nodeSelector: {{ .nodeSelector | toJson | quote }}
  {{- end }}
  # Skip upmeter probes in vulnerability scanning
  # https://github.com/deckhouse/deckhouse/blob/v1.49.0/modules/500-upmeter/images/upmeter/pkg/probe/checker/k8s_statefulset.go#L138
  skipResourceByLabels: upmeter-group,upmeter-probe
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trivy-operator-trivy-config
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | nindent 2 }}
data:
  {{- $registryBase := .Values.global.modulesImages.registry.base | split "/" }}

  {{/* This is a hack to properly run trivy scanners, DON'T change ':' to '@' */}}
  {{- $imageStringSlice := include "helm_lib_module_image" (list . "trivy") | split ":" }}
  {{- $imageRepository := $imageStringSlice._0 }}
  trivy.repository: {{ $imageStringSlice._0 }}
  trivy.tag: {{ $imageStringSlice._1 }}
  trivy.additionalVulnerabilityReportFields: ""
  trivy.severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
  trivy.slow: "true"
  trivy.dbRepository: "{{ .Values.global.modulesImages.registry.base }}/security/trivy-db"
  trivy.command: "image"
  trivy.dbRepositoryInsecure: "false"
  trivy.useBuiltinRegoPolicies: "true"
  trivy.supportedConfigAuditKinds: "Workload,Service,Role,ClusterRole,NetworkPolicy,Ingress,LimitRange,ResourceQuota"
  trivy.timeout: "5m0s"
  trivy.mode: "Standalone"
  trivy.resources.requests.cpu: 100m
  trivy.resources.requests.memory: 100M
  trivy.resources.limits.cpu: 500m
  trivy.resources.limits.memory: 500M
