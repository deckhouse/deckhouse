diff --git a/pkg/plugins/trivy/plugin.go b/pkg/plugins/trivy/plugin.go
index 46d15adb..4f0e4a43 100644
--- a/pkg/plugins/trivy/plugin.go
+++ b/pkg/plugins/trivy/plugin.go
@@ -5,12 +5,6 @@ import (
 	"context"
 	"encoding/json"
 	"fmt"
-	cdx "github.com/CycloneDX/cyclonedx-go"
-	"github.com/aquasecurity/trivy-db/pkg/types"
-	"github.com/aquasecurity/trivy-operator/pkg/utils"
-	tr "github.com/aquasecurity/trivy/pkg/report"
-	ty "github.com/aquasecurity/trivy/pkg/types"
-	containerimage "github.com/google/go-containerregistry/pkg/name"
 	"io"
 	"net/url"
 	"path/filepath"
@@ -18,6 +12,13 @@ import (
 	"strconv"
 	"strings"
 
+	cdx "github.com/CycloneDX/cyclonedx-go"
+	"github.com/aquasecurity/trivy-db/pkg/types"
+	"github.com/aquasecurity/trivy-operator/pkg/utils"
+	tr "github.com/aquasecurity/trivy/pkg/report"
+	ty "github.com/aquasecurity/trivy/pkg/types"
+	containerimage "github.com/google/go-containerregistry/pkg/name"
+
 	"github.com/aquasecurity/trivy-operator/pkg/configauditreport"
 
 	"github.com/aquasecurity/trivy-operator/pkg/apis/aquasecurity/v1alpha1"
@@ -625,6 +626,9 @@ func (p *plugin) newSecretWithAggregateImagePullCredentials(obj client.Object, c
 }
 
 const (
+	dockerConfigVolumeName      = "docker-config"
+	dockerConfigSecret          = "deckhouse-registry"
+	dockerConfigMountPath       = "/root/.docker"
 	tmpVolumeName               = "tmp"
 	ignoreFileVolumeName        = "ignorefile"
 	sslCertDirVolumeName        = "ssl-cert-dir"
@@ -723,6 +727,7 @@ func (p *plugin) getPodSpecForStandaloneMode(ctx trivyoperator.PluginContext, co
 				MountPath: "/tmp",
 				ReadOnly:  false,
 			},
+			getDockerConfigVolumeMount(),
 		},
 	}
 
@@ -745,8 +750,8 @@ func (p *plugin) getPodSpecForStandaloneMode(ctx trivyoperator.PluginContext, co
 			},
 		},
 	}
-	volumeMounts = append(volumeMounts, getScanResultVolumeMount())
-	volumes = append(volumes, getScanResultVolume())
+	volumeMounts = append(volumeMounts, getDockerConfigVolumeMount(), getScanResultVolumeMount())
+	volumes = append(volumes, getDockerConfigVolume(), getScanResultVolume())
 
 	if volume, volumeMount := config.GenerateIgnoreFileVolumeIfAvailable(trivyConfigName); volume != nil && volumeMount != nil {
 		volumes = append(volumes, *volume)
@@ -962,8 +967,8 @@ func (p *plugin) getPodSpecForClientServerMode(ctx trivyoperator.PluginContext,
 		},
 	}
 
-	volumeMounts = append(volumeMounts, getScanResultVolumeMount())
-	volumes = append(volumes, getScanResultVolume())
+	volumeMounts = append(volumeMounts, getDockerConfigVolumeMount(), getScanResultVolumeMount())
+	volumes = append(volumes, getDockerConfigVolume(), getScanResultVolume())
 
 	if volume, volumeMount := config.GenerateIgnoreFileVolumeIfAvailable(trivyConfigName); volume != nil && volumeMount != nil {
 		volumes = append(volumes, *volume)
@@ -1229,6 +1234,29 @@ func getScanResultVolumeMount() corev1.VolumeMount {
 	}
 }
 
+func getDockerConfigVolume() corev1.Volume {
+	return corev1.Volume{
+		Name: dockerConfigVolumeName,
+		VolumeSource: corev1.VolumeSource{
+			Secret: &corev1.SecretVolumeSource{
+				SecretName: dockerConfigSecret,
+				Items: []corev1.KeyToPath{{
+					Key:  ".dockerconfigjson",
+					Path: "config.json",
+				}},
+			},
+		},
+	}
+}
+
+func getDockerConfigVolumeMount() corev1.VolumeMount {
+	return corev1.VolumeMount{
+		Name:      dockerConfigVolumeName,
+		MountPath: dockerConfigMountPath,
+		ReadOnly:  true,
+	}
+}
+
 // FileSystem scan option with standalone mode.
 // The only difference is that instead of scanning the resource by name,
 // We scanning the resource place on a specific file system location using the following command.
@@ -1282,6 +1310,7 @@ func (p *plugin) getPodSpecForStandaloneFSMode(ctx trivyoperator.PluginContext,
 			MountPath: "/tmp",
 			ReadOnly:  false,
 		},
+		getDockerConfigVolumeMount(),
 	}
 
 	initContainerCopyBinary := corev1.Container{
@@ -1343,8 +1372,8 @@ func (p *plugin) getPodSpecForStandaloneFSMode(ctx trivyoperator.PluginContext,
 		},
 	}
 
-	volumeMounts = append(volumeMounts, getScanResultVolumeMount())
-	volumes = append(volumes, getScanResultVolume())
+	volumeMounts = append(volumeMounts, getDockerConfigVolumeMount(), getScanResultVolumeMount())
+	volumes = append(volumes, getDockerConfigVolume(), getScanResultVolume())
 
 	if volume, volumeMount := config.GenerateIgnoreFileVolumeIfAvailable(trivyConfigName); volume != nil && volumeMount != nil {
 		volumes = append(volumes, *volume)
