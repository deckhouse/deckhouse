diff --git a/pkg/metrics/collector.go b/pkg/metrics/collector.go
index 117c27c1..5a16d61d 100644
--- a/pkg/metrics/collector.go
+++ b/pkg/metrics/collector.go
@@ -39,6 +39,7 @@ const (
 	severity           = "severity"
 	vuln_id            = "vuln_id"
 	vuln_title         = "vuln_title"
+	vuln_url           = "vuln_url"
 	vuln_score         = "vuln_score"
 	//compliance
 	title       = "title"
@@ -264,6 +265,7 @@ func buildMetricDescriptors(config trivyoperator.ConfigData) metricDescriptors {
 		vuln_id,
 		vuln_title,
 		vuln_score,
+		vuln_url,
 	}
 	vulnIdLabels = append(vulnIdLabels, dynamicLabels...)
 	exposedSecretLabels := []string{
@@ -567,7 +569,7 @@ func (c ResourcesMetricsCollector) collectVulnerabilityIdReports(ctx context.Con
 				vulnLabelValues[7] = r.Report.Artifact.Tag
 				vulnLabelValues[8] = r.Report.Artifact.Digest
 				for i, label := range c.GetReportResourceLabels() {
-					vulnLabelValues[i+21] = r.Labels[label]
+					vulnLabelValues[i+22] = r.Labels[label]
 				}
 				var vulnList = make(map[string]bool)
 				for _, vuln := range r.Report.Vulnerabilities {
@@ -590,6 +592,7 @@ func (c ResourcesMetricsCollector) collectVulnerabilityIdReports(ctx context.Con
 					if vuln.Score != nil {
 						vulnLabelValues[20] = strconv.FormatFloat(*vuln.Score, 'f', -1, 64)
 					}
+					vulnLabelValues[21] = vuln.PrimaryLink
 					metrics <- prometheus.MustNewConstMetric(c.vulnIdDesc, prometheus.GaugeValue, float64(1), vulnLabelValues...)
 				}
 			}

