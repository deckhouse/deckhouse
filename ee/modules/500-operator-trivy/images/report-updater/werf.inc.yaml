---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
    add: /report-updater
    to: /report-updater
    before: setup
git:
{{- include "image mount points" . }}
imageSpec:
  config:
    entrypoint: [ "/report-updater" ]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}modules/500-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src
  stageDependencies:
    install:
    - '**/*'
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/golang-alt-svace" }}
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY) GOOS=linux GOARCH=amd64 CGO_ENABLED=0
  - cd /src
  - |
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o /report-updater cmd/main.go`) | indent 6 }}
  - chown 64535:64535 /report-updater
  - chmod 0700 /report-updater
