---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    heritage: deckhouse
    module: cloud-provider-vcd
  name: vcdaffinityrules.deckhouse.io
spec:
  group: deckhouse.io
  names:
    kind: VCDAffinityRule
    listKind: VCDAffinityRuleList
    plural: vcdaffinityrules
    shortNames:
    - vcdar
    singular: vcdaffinityrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.nodeCount
      name: NodeCount
      type: integer
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VCDAffinityRule is the Schema for the vcdaffinityrules API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VCDAffinityRuleSpec defines the desired state of VCDAffinityRule.
            properties:
              nodeLabelSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeLabelSelector is a selector for the nodes that this rule applies to.
                  Empty selector means that the rule applies to all nodes.
                type: object
              polarity:
                description: |-
                  The polarity of the affinity rule. Must be either `Affinity` or `AntiAffinity`.
                  `Affinity` means that nodes should be placed on the same host,
                  while `AntiAffinity` means they should be placed on different hosts.
                enum:
                - Affinity
                - AntiAffinity
                type: string
              required:
                description: |-
                  Indicates whether the affinity rule is mandatory (`true`) or only preferred (`false`).
                  If set to `true`, the rule must be enforced; if `false`, the rule is applied if possible but not strictly required.
                type: boolean
            required:
            - polarity
            type: object
          status:
            description: VCDAffinityRuleStatus defines the observed state of VCDAffinityRule.
            properties:
              message:
                description: Message is text description of the current status of
                  the rule.
                type: string
              nodeCount:
                description: NodeCount is the number of nodes that are affected by
                  the rule.
                type: integer
              nodes:
                description: Nodes is a list of nodes that are affected by the rule.
                  Each node has a name and an ID.
                items:
                  properties:
                    ID:
                      description: ID is the unique identifier for the node from the
                        VCD API.
                      type: string
                    name:
                      description: Name is the name of the node.
                      type: string
                  type: object
                type: array
              ruleID:
                description: Rule ID is a unique identifier for the rule from the
                  VCD API.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
