diff --git a/api/v1alpha4/zz_generated.deepcopy.go b/api/v1alpha4/zz_generated.deepcopy.go
index 0f01d99b..e75b4cb9 100644
--- a/api/v1alpha4/zz_generated.deepcopy.go
+++ b/api/v1alpha4/zz_generated.deepcopy.go
@@ -1,5 +1,4 @@
 //go:build !ignore_autogenerated
-// +build !ignore_autogenerated
 
 /*
 Copyright 2021.
diff --git a/api/v1beta1/zz_generated.deepcopy.go b/api/v1beta1/zz_generated.deepcopy.go
index 82377906..f892c517 100644
--- a/api/v1beta1/zz_generated.deepcopy.go
+++ b/api/v1beta1/zz_generated.deepcopy.go
@@ -1,5 +1,4 @@
 //go:build !ignore_autogenerated
-// +build !ignore_autogenerated
 
 /*
 Copyright 2021.
diff --git a/api/v1beta2/vcdmachine_types.go b/api/v1beta2/vcdmachine_types.go
index d85ff63b..b6e8a253 100644
--- a/api/v1beta2/vcdmachine_types.go
+++ b/api/v1beta2/vcdmachine_types.go
@@ -29,6 +29,48 @@ const (
 	VCDProviderID    = "vmware-cloud-director"
 )
 
+const (
+	VCDMachineMetadataTypeString   string = "String"
+	VCDMachineMetadataTypeNumber   string = "Number"
+	VCDMachineMetadataTypeBoolean  string = "Boolean"
+	VCDMachineMetadataTypeDateTime string = "DateTime"
+)
+
+// VCDMachineMetadata defines metadata for the VCDMachine
+// useful for organizing and categorizing your virtualization inventory
+type VCDMachineMetadata struct {
+	// INSERT METADATA FIELDS - metadata for the VCDMachine
+	// Important: Run "make" to regenerate code after modifying this file
+
+	// The key of the metadata item
+	// +kubebuilder:validation:MaxLength=256
+	// +kubebuilder:validation:MinLength=1
+	Key string `json:"key,omitempty"`
+
+	// The value of the metadata item
+	// +kubebuilder:validation:MaxLength=256
+	// +kubebuilder:validation:MinLength=1
+	Value string `json:"value,omitempty"`
+
+	// The type of the metadata. Can be one of `String`, `Number`, `Boolean` or `DateTime`.
+	// Default value is `String`.
+	// +kubebuilder:validation:Enum=String;Number;Boolean;DateTime
+	// +kubebuilder:default=String
+	// +optional
+	Type string `json:"type,omitempty"` // Type can be "string", "int", "bool", etc.
+
+	// The user access level for the metadata. Can be one of `READONLY`, `READWRITE` or `PRIVATE`.
+	// Default value is `READWRITE`.
+	// +kubebuilder:validation:Enum=READONLY;READWRITE;PRIVATE
+	// +kubebuilder:default=READWRITE
+	// +optional
+	UserAccess string `json:"userAccess,omitempty"` // UserAccess can be "read", "write", etc.
+
+	// Whether the metadata is a system metadata or not.
+	// +optional
+	IsSystem bool `json:"isSystem,omitempty"` // IsSystem indicates if the metadata is system-level or user-defined
+}
+
 // VCDMachineSpec defines the desired state of VCDMachine
 type VCDMachineSpec struct {
 	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
@@ -87,6 +129,10 @@ type VCDMachineSpec struct {
 	// Immutable field. machine.Name is used as VM name when this field is empty.
 	// +optional
 	VmNamingTemplate string `json:"vmNamingTemplate,omitempty"`
+
+	// Metadata for the VCDMachine
+	// +optional
+	Metadata []VCDMachineMetadata `json:"metadata,omitempty"`
 }
 
 // VCDMachineStatus defines the observed state of VCDMachine
diff --git a/api/v1beta2/zz_generated.deepcopy.go b/api/v1beta2/zz_generated.deepcopy.go
index 262eb352..8c293673 100644
--- a/api/v1beta2/zz_generated.deepcopy.go
+++ b/api/v1beta2/zz_generated.deepcopy.go
@@ -1,5 +1,4 @@
 //go:build !ignore_autogenerated
-// +build !ignore_autogenerated
 
 /*
 Copyright 2021.
@@ -359,6 +358,21 @@ func (in *VCDMachineList) DeepCopyObject() runtime.Object {
 	return nil
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *VCDMachineMetadata) DeepCopyInto(out *VCDMachineMetadata) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VCDMachineMetadata.
+func (in *VCDMachineMetadata) DeepCopy() *VCDMachineMetadata {
+	if in == nil {
+		return nil
+	}
+	out := new(VCDMachineMetadata)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *VCDMachineSpec) DeepCopyInto(out *VCDMachineSpec) {
 	*out = *in
@@ -373,6 +387,11 @@ func (in *VCDMachineSpec) DeepCopyInto(out *VCDMachineSpec) {
 		*out = make([]string, len(*in))
 		copy(*out, *in)
 	}
+	if in.Metadata != nil {
+		in, out := &in.Metadata, &out.Metadata
+		*out = make([]VCDMachineMetadata, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VCDMachineSpec.
diff --git a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclusters.yaml b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclusters.yaml
index 4d93a4fd..393df91f 100644
--- a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclusters.yaml
+++ b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclusters.yaml
@@ -1,11 +1,9 @@
-
 ---
 apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
-  creationTimestamp: null
+    controller-gen.kubebuilder.io/version: v0.14.0
   name: vcdclusters.infrastructure.cluster.x-k8s.io
 spec:
   group: infrastructure.cluster.x-k8s.io
@@ -22,14 +20,19 @@ spec:
         description: VCDCluster is the Schema for the vcdclusters API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -85,37 +88,37 @@ spec:
                     operational state.
                   properties:
                     lastTransitionTime:
-                      description: Last time the condition transitioned from one status
-                        to another. This should be when the underlying condition changed.
-                        If that is not known, then using the time when the API field
-                        changed is acceptable.
+                      description: |-
+                        Last time the condition transitioned from one status to another.
+                        This should be when the underlying condition changed. If that is not known, then using the time when
+                        the API field changed is acceptable.
                       format: date-time
                       type: string
                     message:
-                      description: A human readable message indicating details about
-                        the transition. This field may be empty.
+                      description: |-
+                        A human readable message indicating details about the transition.
+                        This field may be empty.
                       type: string
                     reason:
-                      description: The reason for the condition's last transition
-                        in CamelCase. The specific API may choose whether or not this
-                        field is considered a guaranteed API. This field may not be
-                        empty.
+                      description: |-
+                        The reason for the condition's last transition in CamelCase.
+                        The specific API may choose whether or not this field is considered a guaranteed API.
+                        This field may not be empty.
                       type: string
                     severity:
-                      description: Severity provides an explicit classification of
-                        Reason code, so the users or machines can immediately understand
-                        the current situation and act accordingly. The Severity field
-                        MUST be set only when Status=False.
+                      description: |-
+                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
+                        understand the current situation and act accordingly.
+                        The Severity field MUST be set only when Status=False.
                       type: string
                     status:
                       description: Status of the condition, one of True, False, Unknown.
                       type: string
                     type:
-                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
-                        Many .condition.type values are consistent across resources
-                        like Available, but because arbitrary conditions can be useful
-                        (see .node.status.conditions), the ability to deconflict is
-                        important.
+                      description: |-
+                        Type of condition in CamelCase or in foo.example.com/CamelCase.
+                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
+                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                       type: string
                   required:
                   - status
@@ -144,14 +147,19 @@ spec:
         description: VCDCluster is the Schema for the vcdclusters API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -215,8 +223,9 @@ spec:
                   refreshToken:
                     type: string
                   secretRef:
-                    description: SecretReference represents a Secret Reference. It
-                      has enough information to retrieve secret in any namespace
+                    description: |-
+                      SecretReference represents a Secret Reference. It has enough information to retrieve secret
+                      in any namespace
                     properties:
                       name:
                         description: name is unique within a namespace to reference
@@ -227,6 +236,7 @@ spec:
                           secret name must be unique.
                         type: string
                     type: object
+                    x-kubernetes-map-type: atomic
                   username:
                     type: string
                 type: object
@@ -247,37 +257,37 @@ spec:
                     operational state.
                   properties:
                     lastTransitionTime:
-                      description: Last time the condition transitioned from one status
-                        to another. This should be when the underlying condition changed.
-                        If that is not known, then using the time when the API field
-                        changed is acceptable.
+                      description: |-
+                        Last time the condition transitioned from one status to another.
+                        This should be when the underlying condition changed. If that is not known, then using the time when
+                        the API field changed is acceptable.
                       format: date-time
                       type: string
                     message:
-                      description: A human readable message indicating details about
-                        the transition. This field may be empty.
+                      description: |-
+                        A human readable message indicating details about the transition.
+                        This field may be empty.
                       type: string
                     reason:
-                      description: The reason for the condition's last transition
-                        in CamelCase. The specific API may choose whether or not this
-                        field is considered a guaranteed API. This field may not be
-                        empty.
+                      description: |-
+                        The reason for the condition's last transition in CamelCase.
+                        The specific API may choose whether or not this field is considered a guaranteed API.
+                        This field may not be empty.
                       type: string
                     severity:
-                      description: Severity provides an explicit classification of
-                        Reason code, so the users or machines can immediately understand
-                        the current situation and act accordingly. The Severity field
-                        MUST be set only when Status=False.
+                      description: |-
+                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
+                        understand the current situation and act accordingly.
+                        The Severity field MUST be set only when Status=False.
                       type: string
                     status:
                       description: Status of the condition, one of True, False, Unknown.
                       type: string
                     type:
-                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
-                        Many .condition.type values are consistent across resources
-                        like Available, but because arbitrary conditions can be useful
-                        (see .node.status.conditions), the ability to deconflict is
-                        important.
+                      description: |-
+                        Type of condition in CamelCase or in foo.example.com/CamelCase.
+                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
+                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                       type: string
                   required:
                   - lastTransitionTime
@@ -356,14 +366,19 @@ spec:
         description: VCDCluster is the Schema for the vcdclusters API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -427,8 +442,9 @@ spec:
                   refreshToken:
                     type: string
                   secretRef:
-                    description: SecretReference represents a Secret Reference. It
-                      has enough information to retrieve secret in any namespace
+                    description: |-
+                      SecretReference represents a Secret Reference. It has enough information to retrieve secret
+                      in any namespace
                     properties:
                       name:
                         description: name is unique within a namespace to reference
@@ -439,6 +455,7 @@ spec:
                           secret name must be unique.
                         type: string
                     type: object
+                    x-kubernetes-map-type: atomic
                   username:
                     type: string
                 type: object
@@ -459,37 +476,37 @@ spec:
                     operational state.
                   properties:
                     lastTransitionTime:
-                      description: Last time the condition transitioned from one status
-                        to another. This should be when the underlying condition changed.
-                        If that is not known, then using the time when the API field
-                        changed is acceptable.
+                      description: |-
+                        Last time the condition transitioned from one status to another.
+                        This should be when the underlying condition changed. If that is not known, then using the time when
+                        the API field changed is acceptable.
                       format: date-time
                       type: string
                     message:
-                      description: A human readable message indicating details about
-                        the transition. This field may be empty.
+                      description: |-
+                        A human readable message indicating details about the transition.
+                        This field may be empty.
                       type: string
                     reason:
-                      description: The reason for the condition's last transition
-                        in CamelCase. The specific API may choose whether or not this
-                        field is considered a guaranteed API. This field may not be
-                        empty.
+                      description: |-
+                        The reason for the condition's last transition in CamelCase.
+                        The specific API may choose whether or not this field is considered a guaranteed API.
+                        This field may not be empty.
                       type: string
                     severity:
-                      description: Severity provides an explicit classification of
-                        Reason code, so the users or machines can immediately understand
-                        the current situation and act accordingly. The Severity field
-                        MUST be set only when Status=False.
+                      description: |-
+                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
+                        understand the current situation and act accordingly.
+                        The Severity field MUST be set only when Status=False.
                       type: string
                     status:
                       description: Status of the condition, one of True, False, Unknown.
                       type: string
                     type:
-                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
-                        Many .condition.type values are consistent across resources
-                        like Available, but because arbitrary conditions can be useful
-                        (see .node.status.conditions), the ability to deconflict is
-                        important.
+                      description: |-
+                        Type of condition in CamelCase or in foo.example.com/CamelCase.
+                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
+                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                       type: string
                   required:
                   - lastTransitionTime
@@ -584,9 +601,3 @@ spec:
     storage: true
     subresources:
       status: {}
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
diff --git a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclustertemplates.yaml b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclustertemplates.yaml
index 96d0cd43..40729677 100644
--- a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclustertemplates.yaml
+++ b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdclustertemplates.yaml
@@ -1,11 +1,9 @@
-
 ---
 apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
-  creationTimestamp: null
+    controller-gen.kubebuilder.io/version: v0.14.0
   name: vcdclustertemplates.infrastructure.cluster.x-k8s.io
 spec:
   group: infrastructure.cluster.x-k8s.io
@@ -23,14 +21,19 @@ spec:
           API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -103,9 +106,9 @@ spec:
                           refreshToken:
                             type: string
                           secretRef:
-                            description: SecretReference represents a Secret Reference.
-                              It has enough information to retrieve secret in any
-                              namespace
+                            description: |-
+                              SecretReference represents a Secret Reference. It has enough information to retrieve secret
+                              in any namespace
                             properties:
                               name:
                                 description: name is unique within a namespace to
@@ -116,6 +119,7 @@ spec:
                                   the secret name must be unique.
                                 type: string
                             type: object
+                            x-kubernetes-map-type: atomic
                           username:
                             type: string
                         type: object
@@ -137,9 +141,3 @@ spec:
     storage: true
     subresources:
       status: {}
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
diff --git a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachines.yaml b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachines.yaml
index 1782ee91..2439ee2b 100644
--- a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachines.yaml
+++ b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachines.yaml
@@ -1,11 +1,9 @@
-
 ---
 apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
-  creationTimestamp: null
+    controller-gen.kubebuilder.io/version: v0.14.0
   name: vcdmachines.infrastructure.cluster.x-k8s.io
 spec:
   group: infrastructure.cluster.x-k8s.io
@@ -22,14 +20,19 @@ spec:
         description: VCDMachine is the Schema for the vcdmachines API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -37,8 +40,9 @@ spec:
             description: VCDMachineSpec defines the desired state of VCDMachine
             properties:
               bootstrapped:
-                description: Bootstrapped is true when the kubeadm bootstrapping has
-                  been run against this machine
+                description: |-
+                  Bootstrapped is true when the kubeadm bootstrapping has been run
+                  against this machine
                 type: boolean
               catalog:
                 description: Catalog hosting templates
@@ -85,37 +89,37 @@ spec:
                     operational state.
                   properties:
                     lastTransitionTime:
-                      description: Last time the condition transitioned from one status
-                        to another. This should be when the underlying condition changed.
-                        If that is not known, then using the time when the API field
-                        changed is acceptable.
+                      description: |-
+                        Last time the condition transitioned from one status to another.
+                        This should be when the underlying condition changed. If that is not known, then using the time when
+                        the API field changed is acceptable.
                       format: date-time
                       type: string
                     message:
-                      description: A human readable message indicating details about
-                        the transition. This field may be empty.
+                      description: |-
+                        A human readable message indicating details about the transition.
+                        This field may be empty.
                       type: string
                     reason:
-                      description: The reason for the condition's last transition
-                        in CamelCase. The specific API may choose whether or not this
-                        field is considered a guaranteed API. This field may not be
-                        empty.
+                      description: |-
+                        The reason for the condition's last transition in CamelCase.
+                        The specific API may choose whether or not this field is considered a guaranteed API.
+                        This field may not be empty.
                       type: string
                     severity:
-                      description: Severity provides an explicit classification of
-                        Reason code, so the users or machines can immediately understand
-                        the current situation and act accordingly. The Severity field
-                        MUST be set only when Status=False.
+                      description: |-
+                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
+                        understand the current situation and act accordingly.
+                        The Severity field MUST be set only when Status=False.
                       type: string
                     status:
                       description: Status of the condition, one of True, False, Unknown.
                       type: string
                     type:
-                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
-                        Many .condition.type values are consistent across resources
-                        like Available, but because arbitrary conditions can be useful
-                        (see .node.status.conditions), the ability to deconflict is
-                        important.
+                      description: |-
+                        Type of condition in CamelCase or in foo.example.com/CamelCase.
+                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
+                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                       type: string
                   required:
                   - status
@@ -138,14 +142,19 @@ spec:
         description: VCDMachine is the Schema for the vcdmachines API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -153,8 +162,9 @@ spec:
             description: VCDMachineSpec defines the desired state of VCDMachine
             properties:
               bootstrapped:
-                description: Bootstrapped is true when the kubeadm bootstrapping has
-                  been run against this machine
+                description: |-
+                  Bootstrapped is true when the kubeadm bootstrapping has been run
+                  against this machine
                 type: boolean
               catalog:
                 description: Catalog hosting templates
@@ -168,9 +178,9 @@ spec:
                 pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                 x-kubernetes-int-or-string: true
               enableNvidiaGPU:
-                description: EnableNvidiaGPU is true when a VM should be created with
-                  the relevant binaries installed If true, then an appropriate placement
-                  policy should be set
+                description: |-
+                  EnableNvidiaGPU is true when a VM should be created with the relevant binaries installed
+                  If true, then an appropriate placement policy should be set
                 type: boolean
               placementPolicy:
                 description: PlacementPolicy is the placement policy to be used on
@@ -181,9 +191,9 @@ spec:
                   (vmware-cloud-director://<vm id>)
                 type: string
               sizingPolicy:
-                description: SizingPolicy is the sizing policy to be used on this
-                  machine. If no sizing policy is specified, default sizing policy
-                  will be used to create the nodes
+                description: |-
+                  SizingPolicy is the sizing policy to be used on this machine.
+                  If no sizing policy is specified, default sizing policy will be used to create the nodes
                 type: string
               storageProfile:
                 description: StorageProfile is the storage profile to be used on this
@@ -208,8 +218,8 @@ spec:
                       description: The machine address.
                       type: string
                     type:
-                      description: Machine address type, one of Hostname, ExternalIP
-                        or InternalIP.
+                      description: Machine address type, one of Hostname, ExternalIP,
+                        InternalIP, ExternalDNS or InternalDNS.
                       type: string
                   required:
                   - address
@@ -223,37 +233,37 @@ spec:
                     operational state.
                   properties:
                     lastTransitionTime:
-                      description: Last time the condition transitioned from one status
-                        to another. This should be when the underlying condition changed.
-                        If that is not known, then using the time when the API field
-                        changed is acceptable.
+                      description: |-
+                        Last time the condition transitioned from one status to another.
+                        This should be when the underlying condition changed. If that is not known, then using the time when
+                        the API field changed is acceptable.
                       format: date-time
                       type: string
                     message:
-                      description: A human readable message indicating details about
-                        the transition. This field may be empty.
+                      description: |-
+                        A human readable message indicating details about the transition.
+                        This field may be empty.
                       type: string
                     reason:
-                      description: The reason for the condition's last transition
-                        in CamelCase. The specific API may choose whether or not this
-                        field is considered a guaranteed API. This field may not be
-                        empty.
+                      description: |-
+                        The reason for the condition's last transition in CamelCase.
+                        The specific API may choose whether or not this field is considered a guaranteed API.
+                        This field may not be empty.
                       type: string
                     severity:
-                      description: Severity provides an explicit classification of
-                        Reason code, so the users or machines can immediately understand
-                        the current situation and act accordingly. The Severity field
-                        MUST be set only when Status=False.
+                      description: |-
+                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
+                        understand the current situation and act accordingly.
+                        The Severity field MUST be set only when Status=False.
                       type: string
                     status:
                       description: Status of the condition, one of True, False, Unknown.
                       type: string
                     type:
-                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
-                        Many .condition.type values are consistent across resources
-                        like Available, but because arbitrary conditions can be useful
-                        (see .node.status.conditions), the ability to deconflict is
-                        important.
+                      description: |-
+                        Type of condition in CamelCase or in foo.example.com/CamelCase.
+                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
+                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                       type: string
                   required:
                   - lastTransitionTime
@@ -305,14 +315,19 @@ spec:
         description: VCDMachine is the Schema for the vcdmachines API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -320,8 +335,9 @@ spec:
             description: VCDMachineSpec defines the desired state of VCDMachine
             properties:
               bootstrapped:
-                description: Bootstrapped is true when the kubeadm bootstrapping has
-                  been run against this machine
+                description: |-
+                  Bootstrapped is true when the kubeadm bootstrapping has been run
+                  against this machine
                 type: boolean
               catalog:
                 description: Catalog hosting templates
@@ -335,17 +351,60 @@ spec:
                 pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                 x-kubernetes-int-or-string: true
               enableNvidiaGPU:
-                description: EnableNvidiaGPU is true when a VM should be created with
-                  the relevant binaries installed If true, then an appropriate placement
-                  policy should be set
+                description: |-
+                  EnableNvidiaGPU is true when a VM should be created with the relevant binaries installed
+                  If true, then an appropriate placement policy should be set
                 type: boolean
               extraOvdcNetworks:
-                description: ExtraOvdcNetworks is the list of extra Ovdc Networks
-                  that are mounted to machines. VCDClusterSpec.OvdcNetwork is always
-                  attached regardless of this field.
+                description: |-
+                  ExtraOvdcNetworks is the list of extra Ovdc Networks that are mounted to machines.
+                  VCDClusterSpec.OvdcNetwork is always attached regardless of this field.
                 items:
                   type: string
                 type: array
+              metadata:
+                description: Metadata for the VCDMachine
+                items:
+                  description: |-
+                    VCDMachineMetadata defines metadata for the VCDMachine
+                    useful for organizing and categorizing your virtualization inventory
+                  properties:
+                    isSystem:
+                      description: Whether the metadata is a system metadata or not.
+                      type: boolean
+                    key:
+                      description: The key of the metadata item
+                      maxLength: 256
+                      minLength: 1
+                      type: string
+                    type:
+                      default: String
+                      description: |-
+                        The type of the metadata. Can be one of `String`, `Number`, `Boolean` or `DateTime`.
+                        Default value is `String`.
+                      enum:
+                      - String
+                      - Number
+                      - Boolean
+                      - DateTime
+                      type: string
+                    userAccess:
+                      default: READWRITE
+                      description: |-
+                        The user access level for the metadata. Can be one of `READONLY`, `READWRITE` or `PRIVATE`.
+                        Default value is `READWRITE`.
+                      enum:
+                      - READONLY
+                      - READWRITE
+                      - PRIVATE
+                      type: string
+                    value:
+                      description: The value of the metadata item
+                      maxLength: 256
+                      minLength: 1
+                      type: string
+                  type: object
+                type: array
               placementPolicy:
                 description: PlacementPolicy is the placement policy to be used on
                   this machine.
@@ -355,9 +414,9 @@ spec:
                   (vmware-cloud-director://<vm id>)
                 type: string
               sizingPolicy:
-                description: SizingPolicy is the sizing policy to be used on this
-                  machine. If no sizing policy is specified, default sizing policy
-                  will be used to create the nodes
+                description: |-
+                  SizingPolicy is the sizing policy to be used on this machine.
+                  If no sizing policy is specified, default sizing policy will be used to create the nodes
                 type: string
               storageProfile:
                 description: StorageProfile is the storage profile to be used on this
@@ -367,11 +426,15 @@ spec:
                 description: TemplatePath is the path of the template OVA that is
                   to be used
                 type: string
+              templateOrg:
+                description: TemplateOrg is the organization of the template OVA that
+                  is to be used
+                type: string
               vmNamingTemplate:
-                description: VmNamingTemplate is go template to generate VM names
-                  based on Machine and VCDMachine CRs. Functions of Sprig library
-                  are supported. See https://github.com/Masterminds/sprig Immutable
-                  field. machine.Name is used as VM name when this field is empty.
+                description: |-
+                  VmNamingTemplate is go template to generate VM names based on Machine and VCDMachine CRs.
+                  Functions of Sprig library are supported. See https://github.com/Masterminds/sprig
+                  Immutable field. machine.Name is used as VM name when this field is empty.
                 type: string
             type: object
           status:
@@ -388,8 +451,8 @@ spec:
                       description: The machine address.
                       type: string
                     type:
-                      description: Machine address type, one of Hostname, ExternalIP
-                        or InternalIP.
+                      description: Machine address type, one of Hostname, ExternalIP,
+                        InternalIP, ExternalDNS or InternalDNS.
                       type: string
                   required:
                   - address
@@ -403,37 +466,37 @@ spec:
                     operational state.
                   properties:
                     lastTransitionTime:
-                      description: Last time the condition transitioned from one status
-                        to another. This should be when the underlying condition changed.
-                        If that is not known, then using the time when the API field
-                        changed is acceptable.
+                      description: |-
+                        Last time the condition transitioned from one status to another.
+                        This should be when the underlying condition changed. If that is not known, then using the time when
+                        the API field changed is acceptable.
                       format: date-time
                       type: string
                     message:
-                      description: A human readable message indicating details about
-                        the transition. This field may be empty.
+                      description: |-
+                        A human readable message indicating details about the transition.
+                        This field may be empty.
                       type: string
                     reason:
-                      description: The reason for the condition's last transition
-                        in CamelCase. The specific API may choose whether or not this
-                        field is considered a guaranteed API. This field may not be
-                        empty.
+                      description: |-
+                        The reason for the condition's last transition in CamelCase.
+                        The specific API may choose whether or not this field is considered a guaranteed API.
+                        This field may not be empty.
                       type: string
                     severity:
-                      description: Severity provides an explicit classification of
-                        Reason code, so the users or machines can immediately understand
-                        the current situation and act accordingly. The Severity field
-                        MUST be set only when Status=False.
+                      description: |-
+                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
+                        understand the current situation and act accordingly.
+                        The Severity field MUST be set only when Status=False.
                       type: string
                     status:
                       description: Status of the condition, one of True, False, Unknown.
                       type: string
                     type:
-                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
-                        Many .condition.type values are consistent across resources
-                        like Available, but because arbitrary conditions can be useful
-                        (see .node.status.conditions), the ability to deconflict is
-                        important.
+                      description: |-
+                        Type of condition in CamelCase or in foo.example.com/CamelCase.
+                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
+                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                       type: string
                   required:
                   - lastTransitionTime
@@ -479,9 +542,3 @@ spec:
     storage: true
     subresources:
       status: {}
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
diff --git a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachinetemplates.yaml b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachinetemplates.yaml
index b8b6c750..d73234e8 100644
--- a/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachinetemplates.yaml
+++ b/config/crd/bases/infrastructure.cluster.x-k8s.io_vcdmachinetemplates.yaml
@@ -1,11 +1,9 @@
-
 ---
 apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
-  creationTimestamp: null
+    controller-gen.kubebuilder.io/version: v0.14.0
   name: vcdmachinetemplates.infrastructure.cluster.x-k8s.io
 spec:
   group: infrastructure.cluster.x-k8s.io
@@ -23,14 +21,19 @@ spec:
           API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -44,8 +47,9 @@ spec:
                       of the machine.
                     properties:
                       bootstrapped:
-                        description: Bootstrapped is true when the kubeadm bootstrapping
-                          has been run against this machine
+                        description: |-
+                          Bootstrapped is true when the kubeadm bootstrapping has been run
+                          against this machine
                         type: boolean
                       catalog:
                         description: Catalog hosting templates
@@ -84,14 +88,19 @@ spec:
           API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -105,8 +114,9 @@ spec:
                       of the machine.
                     properties:
                       bootstrapped:
-                        description: Bootstrapped is true when the kubeadm bootstrapping
-                          has been run against this machine
+                        description: |-
+                          Bootstrapped is true when the kubeadm bootstrapping has been run
+                          against this machine
                         type: boolean
                       catalog:
                         description: Catalog hosting templates
@@ -120,9 +130,9 @@ spec:
                         pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                         x-kubernetes-int-or-string: true
                       enableNvidiaGPU:
-                        description: EnableNvidiaGPU is true when a VM should be created
-                          with the relevant binaries installed If true, then an appropriate
-                          placement policy should be set
+                        description: |-
+                          EnableNvidiaGPU is true when a VM should be created with the relevant binaries installed
+                          If true, then an appropriate placement policy should be set
                         type: boolean
                       placementPolicy:
                         description: PlacementPolicy is the placement policy to be
@@ -133,9 +143,9 @@ spec:
                           format (vmware-cloud-director://<vm id>)
                         type: string
                       sizingPolicy:
-                        description: SizingPolicy is the sizing policy to be used
-                          on this machine. If no sizing policy is specified, default
-                          sizing policy will be used to create the nodes
+                        description: |-
+                          SizingPolicy is the sizing policy to be used on this machine.
+                          If no sizing policy is specified, default sizing policy will be used to create the nodes
                         type: string
                       storageProfile:
                         description: StorageProfile is the storage profile to be used
@@ -167,14 +177,19 @@ spec:
           API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: |-
+              APIVersion defines the versioned schema of this representation of an object.
+              Servers should convert recognized schemas to the latest internal value, and
+              may reject unrecognized values.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: |-
+              Kind is a string value representing the REST resource this object represents.
+              Servers may infer this from the endpoint the client submits requests to.
+              Cannot be updated.
+              In CamelCase.
+              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             type: string
           metadata:
             type: object
@@ -184,24 +199,27 @@ spec:
               template:
                 properties:
                   metadata:
-                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
+                    description: |-
+                      Standard object's metadata.
+                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                     properties:
                       annotations:
                         additionalProperties:
                           type: string
-                        description: 'Annotations is an unstructured key value map
-                          stored with a resource that may be set by external tools
-                          to store and retrieve arbitrary metadata. They are not queryable
-                          and should be preserved when modifying objects. More info:
-                          http://kubernetes.io/docs/user-guide/annotations'
+                        description: |-
+                          Annotations is an unstructured key value map stored with a resource that may be
+                          set by external tools to store and retrieve arbitrary metadata. They are not
+                          queryable and should be preserved when modifying objects.
+                          More info: http://kubernetes.io/docs/user-guide/annotations
                         type: object
                       labels:
                         additionalProperties:
                           type: string
-                        description: 'Map of string keys and values that can be used
-                          to organize and categorize (scope and select) objects. May
-                          match selectors of replication controllers and services.
-                          More info: http://kubernetes.io/docs/user-guide/labels'
+                        description: |-
+                          Map of string keys and values that can be used to organize and categorize
+                          (scope and select) objects. May match selectors of replication controllers
+                          and services.
+                          More info: http://kubernetes.io/docs/user-guide/labels
                         type: object
                     type: object
                   spec:
@@ -209,8 +227,9 @@ spec:
                       of the machine.
                     properties:
                       bootstrapped:
-                        description: Bootstrapped is true when the kubeadm bootstrapping
-                          has been run against this machine
+                        description: |-
+                          Bootstrapped is true when the kubeadm bootstrapping has been run
+                          against this machine
                         type: boolean
                       catalog:
                         description: Catalog hosting templates
@@ -224,17 +243,61 @@ spec:
                         pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                         x-kubernetes-int-or-string: true
                       enableNvidiaGPU:
-                        description: EnableNvidiaGPU is true when a VM should be created
-                          with the relevant binaries installed If true, then an appropriate
-                          placement policy should be set
+                        description: |-
+                          EnableNvidiaGPU is true when a VM should be created with the relevant binaries installed
+                          If true, then an appropriate placement policy should be set
                         type: boolean
                       extraOvdcNetworks:
-                        description: ExtraOvdcNetworks is the list of extra Ovdc Networks
-                          that are mounted to machines. VCDClusterSpec.OvdcNetwork
-                          is always attached regardless of this field.
+                        description: |-
+                          ExtraOvdcNetworks is the list of extra Ovdc Networks that are mounted to machines.
+                          VCDClusterSpec.OvdcNetwork is always attached regardless of this field.
                         items:
                           type: string
                         type: array
+                      metadata:
+                        description: Metadata for the VCDMachine
+                        items:
+                          description: |-
+                            VCDMachineMetadata defines metadata for the VCDMachine
+                            useful for organizing and categorizing your virtualization inventory
+                          properties:
+                            isSystem:
+                              description: Whether the metadata is a system metadata
+                                or not.
+                              type: boolean
+                            key:
+                              description: The key of the metadata item
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            type:
+                              default: String
+                              description: |-
+                                The type of the metadata. Can be one of `String`, `Number`, `Boolean` or `DateTime`.
+                                Default value is `String`.
+                              enum:
+                              - String
+                              - Number
+                              - Boolean
+                              - DateTime
+                              type: string
+                            userAccess:
+                              default: READWRITE
+                              description: |-
+                                The user access level for the metadata. Can be one of `READONLY`, `READWRITE` or `PRIVATE`.
+                                Default value is `READWRITE`.
+                              enum:
+                              - READONLY
+                              - READWRITE
+                              - PRIVATE
+                              type: string
+                            value:
+                              description: The value of the metadata item
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                          type: object
+                        type: array
                       placementPolicy:
                         description: PlacementPolicy is the placement policy to be
                           used on this machine.
@@ -244,9 +307,9 @@ spec:
                           format (vmware-cloud-director://<vm id>)
                         type: string
                       sizingPolicy:
-                        description: SizingPolicy is the sizing policy to be used
-                          on this machine. If no sizing policy is specified, default
-                          sizing policy will be used to create the nodes
+                        description: |-
+                          SizingPolicy is the sizing policy to be used on this machine.
+                          If no sizing policy is specified, default sizing policy will be used to create the nodes
                         type: string
                       storageProfile:
                         description: StorageProfile is the storage profile to be used
@@ -256,12 +319,15 @@ spec:
                         description: TemplatePath is the path of the template OVA
                           that is to be used
                         type: string
+                      templateOrg:
+                        description: TemplateOrg is the organization of the template
+                          OVA that is to be used
+                        type: string
                       vmNamingTemplate:
-                        description: VmNamingTemplate is go template to generate VM
-                          names based on Machine and VCDMachine CRs. Functions of
-                          Sprig library are supported. See https://github.com/Masterminds/sprig
-                          Immutable field. machine.Name is used as VM name when this
-                          field is empty.
+                        description: |-
+                          VmNamingTemplate is go template to generate VM names based on Machine and VCDMachine CRs.
+                          Functions of Sprig library are supported. See https://github.com/Masterminds/sprig
+                          Immutable field. machine.Name is used as VM name when this field is empty.
                         type: string
                     type: object
                 required:
@@ -278,9 +344,3 @@ spec:
     storage: true
     subresources:
       status: {}
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
diff --git a/config/rbac/role.yaml b/config/rbac/role.yaml
index d2970dd5..092fe361 100644
--- a/config/rbac/role.yaml
+++ b/config/rbac/role.yaml
@@ -1,9 +1,7 @@
-
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRole
 metadata:
-  creationTimestamp: null
   name: manager-role
 rules:
 - apiGroups:
diff --git a/config/webhook/manifests.yaml b/config/webhook/manifests.yaml
index bef5e4c7..fd3cb710 100644
--- a/config/webhook/manifests.yaml
+++ b/config/webhook/manifests.yaml
@@ -1,9 +1,7 @@
-
 ---
 apiVersion: admissionregistration.k8s.io/v1
 kind: MutatingWebhookConfiguration
 metadata:
-  creationTimestamp: null
   name: mutating-webhook-configuration
 webhooks:
 - admissionReviewVersions:
@@ -46,12 +44,10 @@ webhooks:
     resources:
     - vcdmachines
   sideEffects: None
-
 ---
 apiVersion: admissionregistration.k8s.io/v1
 kind: ValidatingWebhookConfiguration
 metadata:
-  creationTimestamp: null
   name: validating-webhook-configuration
 webhooks:
 - admissionReviewVersions:
diff --git a/controllers/vcdmachine_controller.go b/controllers/vcdmachine_controller.go
index 6a01f6af..eadad06e 100644
--- a/controllers/vcdmachine_controller.go
+++ b/controllers/vcdmachine_controller.go
@@ -583,6 +583,34 @@ shutdown -r now
 		// 	VCDResourceSet can get bloated with VMs if the cluster contains a large number of worker nodes
 	}
 
+	if vcdMachine.Spec.Metadata != nil {
+		for _, metadataEntry := range vcdMachine.Spec.Metadata {
+			typedValue, err := convertMetadataType(metadataEntry.Type)
+			if err != nil {
+				err1 := capvcdRdeManager.AddToErrorSet(ctx, capisdk.VCDMachineCreationError, "", machine.Name, fmt.Sprintf("%v", err))
+				if err1 != nil {
+					log.Error(err1, "failed to add VCDMachineCreationError into RDE", "rdeID", vcdCluster.Status.InfraId)
+				}
+				return ctrl.Result{}, errors.Wrapf(err, "Failed to convert metadata type %s for key %s", metadataEntry.Type, metadataEntry.Key)
+			}
+			err = vm.AddMetadataEntryWithVisibility(
+				metadataEntry.Key,
+				metadataEntry.Value,
+				typedValue,
+				metadataEntry.UserAccess,
+				metadataEntry.IsSystem,
+			)
+
+			if err != nil {
+				err1 := capvcdRdeManager.AddToErrorSet(ctx, capisdk.VCDMachineCreationError, "", machine.Name, fmt.Sprintf("%v", err))
+				if err1 != nil {
+					log.Error(err1, "failed to add VCDMachineCreationError into RDE", "rdeID", vcdCluster.Status.InfraId)
+				}
+				return ctrl.Result{}, errors.Wrapf(err, "Failed to add metadata entry for key %s", metadataEntry.Key)
+			}
+		}
+	}
+
 	// only resize hard disk if the user has requested so by specifying such in the VCDMachineTemplate spec
 	// check isn't strictly required as we ensure that specified number is larger than what's in the template and left
 	// empty this will just be 0. However, this makes it clear from a standpoint of inspecting the code what we are doing
@@ -1564,3 +1592,18 @@ func MergeJinjaToCloudInitScript(cloudInitConfig CloudInitScriptInput, jinjaConf
 
 	return out, nil
 }
+
+func convertMetadataType(typedValue string) (string, error) {
+	switch typedValue {
+	case infrav1.VCDMachineMetadataTypeString:
+		return types.MetadataStringValue, nil
+	case infrav1.VCDMachineMetadataTypeNumber:
+		return types.MetadataNumberValue, nil
+	case infrav1.VCDMachineMetadataTypeBoolean:
+		return types.MetadataBooleanValue, nil
+	case infrav1.VCDMachineMetadataTypeDateTime:
+		return types.MetadataDateTimeValue, nil
+	default:
+		return "", fmt.Errorf("unsupported type %v", typedValue)
+	}
+}
