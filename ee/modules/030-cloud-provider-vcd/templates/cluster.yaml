{{- $prefix := .Values.global.clusterConfiguration.cloud.prefix }}
{{- $providerClusterConfiguration := .Values.cloudProviderVcd.internal.providerClusterConfiguration | required "internal.providerClusterConfiguration is required" }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ $prefix }}
  namespace: d8-cloud-instance-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "caps-controller-manager")) | nindent 2 }}
#  annotations:
#    cluster.x-k8s.io/paused: "true"
# A finalizer has been added to prevent cascading removing of all capi resources after deleting the cluster resource.
  finalizers:
    - deckhouse.io/capi-controller-manager
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - {{ .Values.global.clusterConfiguration.podSubnetCIDR }}
    services:
      cidrBlocks:
        - {{ .Values.global.clusterConfiguration.serviceSubnetCIDR }}
    serviceDomain: {{ .Values.global.clusterConfiguration.clusterDomain }}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: StaticCluster
    namespace: d8-cloud-in
    name: {{ $prefix }}
  controlPlaneRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: StaticControlPlane
    namespace: d8-cloud-instance-manager
    name: {{ $prefix }}-control-plane
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: VCDCluster
metadata:
  name: capi-cluster
  namespace: default
spec:
  site: {{ $providerClusterConfiguration.provider.server | trimSuffix "/" | quote }} # VCD endpoint with the format https://VCD_HOST. No trailing '/'
  org: {{ $providerClusterConfiguration.organization | quote }} # VCD organization name where the cluster should be deployed
  ovdc: {{ $providerClusterConfiguration.virtualDataCenter | quote }}
  ovdcNetwork: "internal"
  useAsManagementCluster: false # intent to use the resultant CAPVCD cluster as a management cluster
  userContext:
    secretRef:
      name: capi-user-credentials
      namespace: d8-cloud-instance-manager
  proxyConfigSpec:
    {{- if hasKey $.Values.global.clusterConfiguration.proxy "httpProxy" }}
    httpProxy: {{ $.Values.global.clusterConfiguration.proxy.httpProxy | quote }}
    {{- end }}
    {{- if hasKey $.Values.global.clusterConfiguration.proxy "httpsProxy" }}
    httpsProxy: {{ $.Values.global.clusterConfiguration.proxy.httpsProxy | quote }}
    {{- end }}
    {{- $noProxy := list "127.0.0.1" "169.254.169.254" $.Values.global.clusterConfiguration.clusterDomain $.Values.global.clusterConfiguration.podSubnetCIDR $.Values.global.clusterConfiguration.serviceSubnetCIDR }}
    {{- if hasKey $.Values.global.clusterConfiguration.proxy "noProxy" }}
      {{- $noProxy = concat $noProxy $.Values.global.clusterConfiguration.proxy.noProxy }}
    {{- end }}
    noProxy:
    {{- $noProxy | toYaml | nindent 4 }}
# TODO change it on generic solution for *ControlPlane

