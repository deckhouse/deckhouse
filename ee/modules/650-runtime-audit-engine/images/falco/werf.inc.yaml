{{- $falcoVersion := "0.38.1" }}
{{- $pluginsVersion := "plugins/k8smeta/v0.2.0" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
from: {{ $.Images.BASE_ALT_P11 }}
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /falco-package
  to: /
  includePaths:
  - usr/bin/
  - usr/share/
  - etc/
  before: install
shell:
  beforeInstall:
  - rm -df /lib/modules
  - ln -s $HOST_ROOT/lib/modules /lib/modules
  install:
  - "sed -i 's/time_format_iso_8601: false/time_format_iso_8601: true/' /etc/falco/falco.yaml"
docker:
  CMD: ["/usr/bin/falco"]
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
from: {{ $.Images.BASE_ALT_P11 }}
shell:
  install:
  - apt-get update
  - apt-get install -y git openssl-devel wget clang cmake libelf-devel libbpf-devel bpftool perl-IPC-Cmd gcc12 gcc12-c++ build-essential golang
  - git config --global url."{{ .SOURCE_REPO }}".insteadOf https://github.com
  - mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
  - git clone --branch {{ $falcoVersion }} --depth 1 {{ .SOURCE_REPO }}/falcosecurity/falco.git
  - rm -f /usr/bin/clang
  - ln -s /usr/bin/clang-18 /usr/bin/clang
  - rm -f /usr/bin/x86_64-alt-linux-gcc /usr/bin/x86_64-alt-linux-g++
  - ln -s x86_64-alt-linux-gcc-12 /usr/bin/x86_64-alt-linux-gcc
  - ln -s x86_64-alt-linux-g++-12 /usr/bin/x86_64-alt-linux-g++
  - mkdir -p /falco/build
  - cd /falco/build
  - cmake -DCMAKE_BUILD_TYPE=release -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_DRIVER=OFF -DCPACK_GENERATOR=TGZ -DBUILD_BPF=OFF -DBUILD_FALCO_MODERN_BPF=ON -DBUILD_WARNINGS_AS_ERRORS=OFF -DFALCO_VERSION=0.38.1 -DUSE_BUNDLED_DEPS=ON /falco
  - make package -j4
  - mkdir -p /falco-package
  - tar -zxvf falco-{{ $falcoVersion }}-x86_64.tar.gz --strip-components 1 -C /falco-package
  # build plugins
  - cd /
  - git clone --branch {{ $pluginsVersion }} --depth 1 {{ .SOURCE_REPO }}/falcosecurity/plugins.git
  - cd /plugins/plugins/json
  - make
  - cd /plugins/plugins/k8saudit
  - make
  - cd /plugins/plugins/k8smeta
  - make
  - cp /plugins/plugins/json/libjson.so /plugins/plugins/k8saudit/libk8saudit.so /plugins/plugins/k8smeta/libk8smeta.so /falco-package/usr/share/falco/plugins
