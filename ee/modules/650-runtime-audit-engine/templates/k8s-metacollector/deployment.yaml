{{- define "k8s-metacollector_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: k8s-metacollector
  namespace:  d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "k8s-metacollector")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: k8s-metacollector
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "k8s-metacollector"
      minAllowed:
        {{- include "k8s-metacollector_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    {{- include "helm_lib_vpa_kube_rbac_proxy_resources" . | nindent 4 }}
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: k8s-metacollector
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "k8s-metacollector")) | nindent 2 }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: k8s-metacollector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-metacollector
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "k8s-metacollector")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: k8s-metacollector
  template:
    metadata:
      labels:
        app: k8s-metacollector
    spec:
      affinity:
      {{- include "helm_lib_node_selector" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "cluster-low") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" . | nindent 6 }}
      serviceAccountName: k8s-metacollector
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - image: {{ include "helm_lib_module_image" (list . "k8sMetacollector") }}
        name: k8s-metacollector
        command:
        - /manager
        args:
        - run
        - "--metrics-bind-address=127.0.0.1:8080"
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" . | nindent 8 }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 45
          timeoutSeconds: 5
          periodSeconds: 15
        ports:
        - name: health-probe
          containerPort: 8081
          protocol: "TCP"
        - name: broker-grpc
          containerPort: 45000
          protocol: "TCP"
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
          {{- if not (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "k8s-metacollector_resources" . | nindent 12 }}
          {{- end }}
      - name: kube-rbac-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" . | nindent 8 }}
        image: {{ include "helm_lib_module_common_image" (list . "kubeRbacProxy") }}
        args:
          - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8080"
          - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
          - "--v=2"
          - "--logtostderr=true"
          - "--stale-cache-interval=1h30m"
          - "--livez-path=/livez"
        env:
          - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KUBE_RBAC_PROXY_CONFIG
            value: |
              upstreams:
              - upstream: http://127.0.0.1:8080/
                path: /
                authorization:
                  resourceAttributes:
                    namespace: d8-{{ $.Chart.Name }}
                    apiGroup: apps
                    apiVersion: v1
                    resource: deployments
                    subresource: prometheus-metrics
                    name: {{ $.Chart.Name }}
        ports:
          - containerPort: 8080
            name: https-metrics
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTPS
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
          {{- if not (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
          {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 14 }}
          {{- end }}
