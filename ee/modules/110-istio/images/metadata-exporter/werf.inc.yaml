---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/alt-p11
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-build-artifact
  add: /src/metadata-exporter
  to: /metadata-exporter
  after: setup
- image: registrypackages/d8-curl-artifact-8-9-1
  add: /d8-curl
  to: /usr/bin/curl
  before: setup
imageSpec:
  config:
    entrypoint: ["/metadata-exporter"]
---
image: {{ .ModuleName }}/{{ .ImageName }}-build-artifact
from: {{ .Images.BASE_GOLANG_23_ALPINE }}
fromCacheVersion: "2025-02-05.2"
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
shell:
  beforeInstall:
  {{- include "alpine packages proxy" . | nindent 2 }}
  - apk add --no-cache bash git binutils
  install:
  - cd /src
  - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
  setup:
  - cd /src
  - export GOOS=linux GOARCH=amd64 CGO_ENABLED=0
  - go build -ldflags="-s -w" -o /src/metadata-exporter main.go exporter.go models.go
  - chmod 0500 /src/metadata-exporter
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src
  stageDependencies:
    install:
    - "**/*"
shell:
  install:
  - cd /src
