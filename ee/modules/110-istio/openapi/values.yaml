x-extend:
  schema: config-values.yaml
type: object
properties:
  internal:
    type: object
    default: {}
    properties:
      versionMap:
        type: object
        default: {}
        x-examples:
          - {"1.13": { "fullVersion": "1.13.33", "revision": "1x13", "imageSuffix": "V1x13x7" } } # must be real
        additionalProperties:
          type: object
          properties:
            fullVersion:
              type: string
              x-examples: ["1.13.33"]
            revision:
              type: string
              x-examples: ["v1x13"]
            imageSuffix:
              type: string
              x-examples: ["V1x13x7"]
      deployDexAuthenticator:
        type: boolean
        x-examples: [true]
      ca:
        type: object
        default: {}
        properties:
          cert:
            type: string
            x-examples: ["---CERT PEM---"]
          key:
            type: string
            x-examples: ["---KEY PEM---"]
          chain:
            type: string
            x-examples: ["---CHAIN PEM---"]
          root:
            type: string
            x-examples: ["---ROOT PEM---"]
      federations:
        type: array
        default: []
        x-examples:
        - [{"name": "aaa", "trustDomain": "bbb", "spiffeEndpoint": "ccc", "ingressGateways": [{"address": "1.2.3.4", "port": 1234}], "publicServices": [{"hostname": "zzz.xxx.ccc", "ports": [{"name": "ddd", "port": 2345}], "virtualIP": "3.4.5.6"}]}]
      multiclusters:
        type: array
        default: []
        x-examples:
        - [{"name": "aaa", "spiffeEndpoint": "ccc", "enableIngressGateway": true, "apiHost": "aaa.sss.ddd", "networkName": "a-b-c-1-2-3", "apiJWT": "aAaA.bBbB.CcCc", "ingressGateways": [{"address": "1.2.3.4", "port": 1234}]}]
      remotePublicMetadata:
        type: object
        default: {}
        additionalProperties:
          type: object
          properties:
            name:
              type: string
            spiffeEndpoint:
              type: string
            enableIngressGateway:
              type: bool
            apiHost:
              type: string
            networkName:
              type: string
            apiJWT:
              type: string
            ingressGateways:
              type: array
              default: []
              items:
                type: object
                properties:
                  address:
                    type: string
                  port:
                    type: integer
            public:
              type: object
              default: {}
              properties:
                clusterUUID:
                  type: string
                authnKeyPub:
                  type: string
                rootCA:
                  type: string
      remoteAuthnKeypair:
        type: object
        default: {}
        properties:
          pub:
            type: string
            x-examples: ["---PUB KEY---"]
          priv:
            type: string
            x-examples: ["---PRIV KEY---"]
      deprecatedVersions:
        type: array
        items:
          type: object
          required:
          - version
          - alertSeverity
          properties:
            version:
              type: string
            alertSeverity:
              type: integer
              minimum: 1
              maximum: 9
        default:
          - version: "1.10.1"
            alertSeverity: 4
        x-examples:
          - [{version: "1.12", alertSeverity: 7}, {version: "1.13", alertSeverity: 9}]
      globalVersion:
        type: string
        x-examples: ["1.13"] # must be real
      isGlobalVersionIstiodReady:
        type: boolean
        default: false
        x-examples: [true]
      versionsToInstall:
        type: array
        items:
          type: string
        default: []
        x-examples:
        - ["1.13"] # must be real
      operatorVersionsToInstall:
        type: array
        items:
          type: string
        default: []
        x-examples:
        - ["1.13"] # must be real
      applicationNamespaces:
        type: array
        items:
          type: string
        default: []
        x-examples:
        - ["myns"]
      multiclustersNeedIngressGateway:
        type: boolean
        default: false
        x-examples: [true]
      customCertificateData:
        type: object
        properties:
          tls.crt:
            type: string
            x-examples:
              - plainstring
          tls.key:
            type: string
            x-examples:
              - plainstring
          ca.crt:
            type: string
            x-examples:
              - plainstring
      auth:
        type: object
        default: {}
        properties:
          password:
            type: string
            x-examples: ["p4ssw0rd"]
      ingressControllers:
        type: ['null', array]
        default: []
        items:
          type: object
          properties:
            name:
              type: string
              x-examples: ["test"]
            spec:
              type: object
              default: {}
              x-required-for-helm:
                - ingressGatewayClass
                - inlet
              properties:
                ingressClass:
                  type: string
                  x-examples: ["istio"]
                inlet:
                  type: string
                  x-examples: ["HostPort"]
                nodeSelector:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    The same as the `spec.nodeSelector` pod parameter in Kubernetes.

                    If the parameter is omitted or `false`, it will be determined [automatically](https://deckhouse.io/en/documentation/v1/#advanced-scheduling).
                tolerations:
                  type: array
                  description: |
                    The same as `spec.tolerations` for the Kubernetes pod.

                    Use [automatic](https://deckhouse.io/en/documentation/v1/#advanced-scheduling) if not specified. Set `false` to turn off automatic.
                  items:
                    type: object
                    properties:
                      effect:
                        type: string
                      key:
                        type: string
                      operator:
                        type: string
                      tolerationSeconds:
                        type: integer
                        format: int64
                      value:
                        type: string
                loadBalancer:
                  type: object
                  default: {}
                  properties:
                    sourceRanges:
                      type: array
                      items:
                        type: string
                    annotations:
                      type: object
                      additionalProperties: true
                nodePort:
                  type: object
                  default: {}
                  properties:
                    httpPort:
                      type: integer
                    httpsPort:
                      type: integer
                hostPort:
                  type: object
                  default: {}
                  properties:
                    httpPort:
                      type: integer
                    httpsPort:
                      type: integer
