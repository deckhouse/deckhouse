{{- if include "nvidia_gpu_enabled" . }}
  {{- $kubernetesSemVer := semver .Values.global.discovery.kubernetesVersion }}
  {{- $nmmImageName := join "" (list "nvidiaMigManager" $kubernetesSemVer.Major $kubernetesSemVer.Minor ) }}
  {{- $nmmImage := include "helm_lib_module_image_no_fail" (list . $nmmImageName) }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: nvidia-mig-manager
  namespace: d8-nvidia-gpu
  {{- include "helm_lib_module_labels" (list . (dict "app" "nvidia-gpu" "component" "nvidia-mig-manager")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: nvidia-mig-manager
  updatePolicy:
    updateMode: "Initial"
  resourcePolicy:
    containerPolicies:
    - containerName: nvidia-mig-manager
      minAllowed:
        cpu: 50m
        memory: 64Mi
      maxAllowed:
        cpu: 100m
        memory: 128Mi
  {{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-mig-manager
  namespace: d8-nvidia-gpu
  {{- include "helm_lib_module_labels" (list . (dict "app" "nvidia-gpu" "component" "nvidia-mig-manager")) | nindent 2 }}
spec:
  selector:
    matchLabels:
     component: nvidia-mig-manager
  template:
    metadata:
      labels:
        component: nvidia-mig-manager
    spec:
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      - key: mig-reconfigure
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: node.kubernetes.io/unschedulable
        operator: "Exists"
        effect: "NoSchedule"
      {{- include "nvidia_node_selector" (tuple . "mig-manager") | nindent 6 }}
      terminationGracePeriodSeconds: 60
      serviceAccountName: nvidia-mig-manager
      automountServiceAccountToken: true
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: nvidia-mig-manager
          image: {{ $nmmImage }}
          command: ["/usr/bin/nvidia-mig-manager"]
          securityContext:
            privileged: true
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
          {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
              cpu: 50m
              memory: 64Mi
          {{- end }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: CONFIG_FILE
            value: "/mig-parted-config/config.yaml"
          - name: GPU_CLIENTS_FILE
            value: "/gpu-clients/clients.yaml"
          - name: HOST_ROOT_MOUNT
            value: "/host"
          - name: HOST_NVIDIA_DIR
            value: "/usr/local/nvidia"
          - name: HOST_KUBELET_SYSTEMD_SERVICE
            value: "kubelet.service"
          - name: HOST_MIG_MANAGER_STATE_FILE
            value: "/etc/systemd/system/nvidia-mig-manager.service.d/override.conf"
          - name: DEFAULT_GPU_CLIENTS_NAMESPACE
            value: "d8-nvidia-gpu"
          - name: WITH_SHUTDOWN_HOST_GPU_CLIENTS
            value: "true"
          - name: WITH_REBOOT
            value: "false"
          volumeMounts:
          - mountPath: /host
            name: host-root
          - mountPath: /sys
            name: host-sys
          - mountPath: /gpu-clients
            name: gpu-clients
          - mountPath: /mig-parted-config
            name: mig-parted-config
          - mountPath: /usr/bin/reconfigure-mig.sh
            name: mig-parted-reconfigure-script
            subPath: reconfigure-mig.sh
          - mountPath: /usr/bin/prestop.sh
            name: mig-parted-reconfigure-script
            subPath: prestop.sh
          lifecycle:
            preStop:
              exec:
                command: [ "bash", "-c", "/usr/bin/prestop.sh"]
      volumes:
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: host-sys
        hostPath:
          path: /sys
          type: Directory
      - name: gpu-clients
        configMap:
          name: gpu-clients
      - name: mig-parted-config
        configMap:
          name: mig-parted-config
      - name: mig-parted-reconfigure-script
        configMap:
          name: mig-parted-reconfigure-script
          defaultMode: 0755
{{- end }}