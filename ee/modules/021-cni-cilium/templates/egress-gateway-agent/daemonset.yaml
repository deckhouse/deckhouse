{{- define "egress_gateway_agent_resources" }}
cpu: 10m
memory: 50Mi
{{- end }}
{{- $foundVirtualIP := false -}}
{{- range $key, $value := $.Values.cniCilium.internal.egressGatewaysMap }}
  {{- if eq $value.sourceIP.mode "VirtualIPAddress" }}
    {{- $foundVirtualIP = true -}}
  {{- end -}}
{{- end -}}
{{- if $foundVirtualIP }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: egress-gateway-agent
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "egress-gateway-agent")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: apps/v1
    kind: DaemonSet
    name: egress-gateway-agent
  updatePolicy:
    updateMode: "Off"
  {{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: egress-gateway-agent
  namespace: d8-{{ .Chart.Name }}
  {{ include "helm_lib_module_labels" (list . (dict "app" "egress-gateway-agent")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: egress-gateway-agent
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        {{ include "helm_lib_prevent_ds_eviction_annotation" . | nindent 8 }}
      labels:
        app: egress-gateway-agent
    spec:
      {{- include "helm_lib_priority_class" (tuple . "system-node-critical") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "with-uninitialized" "with-cloud-provider-uninitialized" "with-storage-problems") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      nodeSelector:
        egress-gateway.network.deckhouse.io/member: ""
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        - name: deckhouse-registry
      serviceAccountName: egress-gateway-agent
      containers:
      - name: egress-gateway-agent
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all_and_add" (list . (list "NET_RAW")) | nindent 8 }}
        image: {{ include "helm_lib_module_image" (list . "egressGatewayAgent") }}
        command:
          - /egress-gateway-agent
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: KUBERNETES_SERVICE_HOST
            value: "127.0.0.1"
          - name: KUBERNETES_SERVICE_PORT
            value: "6445"
        livenessProbe:
          httpGet:
            path: /healthz
            host: 127.0.0.1
            port: 9870
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            host: 127.0.0.1
            port: 9870
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            {{- include "egress_gateway_agent_resources" . | nindent 12}}
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- end }}
