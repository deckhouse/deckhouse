x-extend:
  schema: config-values.yaml
type: object
properties:
  internal:
    type: object
    default: {}
    properties:
      cniSecretData:
        type: string
      providerClusterConfiguration:
        type: object
        additionalProperties: false
        description: |
          Describes the configuration of a cloud cluster in HuaweiCloud.

          Used by the cloud provider if a cluster's control plane is hosted in the cloud.

          Run the following command to change the configuration in a running cluster:

          ```shell
          kubectl -n d8-system exec -ti svc/deckhouse-leader -c deckhouse -- deckhouse-controller edit provider-cluster-configuration
          ```
        x-doc-search: |
          ProviderClusterConfiguration
        x-examples:
        - apiVersion: deckhouse.io/v1
          kind: HuaweiCloudClusterConfiguration
          layout: Standard
          sshPublicKey: "<SSH_PUBLIC_KEY>"
          zones:
            - eu-3a
          standard:
            externalNetworkName: "external-network"
          provider:
            domainName: '<DOMAIN_NAME>'
            region: 'eu-3'
            accessKey: '<USERNAME>'
            secretKey: '<PASSWORD>'
          masterNodeGroup:
            replicas: 1
            instanceClass:
              rootDiskSize: 50
              imageName: "debian-11-genericcloud-amd64-20220911-1135"
          nodeGroups:
            - name: front
              replicas: 2
              instanceClass:
                flavorName: m1.large
                imageName: "debian-11-genericcloud-amd64-20220911-1135"
                rootDiskSize: 50
                configDrive: false
                floatingIPPools:
                  - public
                  - shared
                additionalSecurityGroups:
                  - sec_group_1
                  - sec_group_2
              zones:
                - eu-1a
                - eu-1b
        required: [apiVersion, kind, layout, provider, sshPublicKey, masterNodeGroup]
        properties:
          apiVersion:
            type: string
            enum: [deckhouse.io/v1]
          kind:
            type: string
            enum: [HuaweiCloudClusterConfiguration]
          sshPublicKey:
            type: string
            description: A public key for accessing nodes.
          zones:
            type: array
            items:
              type: string
            minItems: 1
            uniqueItems: true
            description: |
              The globally restricted set of zones that this Cloud Provider works with.
            x-doc-required: false
          masterNodeGroup:
            type: object
            additionalProperties: false
            required: [replicas, instanceClass, volumeTypeMap]
            description: |
              The definition of the master's NodeGroup.

              > Caution! After changing the parameters of the section, you need to run `dhctl converge` for the changes to take effect.
            properties:
              replicas:
                type: integer
                minimum: 1
                description: |
                  The number of master nodes to create. It is important to have an odd number of masters to ensure a quorum.
                x-unsafe-rules: [updateReplicas]
              instanceClass:
                description: |
                  Partial contents of the fields of the [HuaweiCloudInstanceClass](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/cr.html#huaweicloudinstanceclass).
                type: object
                required: [flavorName, imageName]
                additionalProperties: false
                properties: &instanceClassProperties
                  flavorName: &instanceClassFlavorName
                    type: string
                    description: |
                      Flavor of HuaweiCloud servers.

                      Get a list of all available flavors: `huaweicloud flavor list`.

                      For all non-master nodes it is advisable to use flavor's with a local disk. If cloud provider supports local disks they are usually faster and cheaper. The disadvantage of using such flavors is the inability to migrate nodes between hypervisors.

                      Flavor create example: `huaweicloud flavor create c4m8d50 --ram 8192 --disk 50 --vcpus 4`
                    x-doc-required: true
                  imageName: &instanceClassImageName
                    description: |
                      Image to use while provisioning HuaweiCloud servers.

                      Use this command to get a list of available images: `huaweicloud image list`.

                      The list of OS and their versions supported by Deckhouse can be found in the [documentation](https://deckhouse.ru/products/kubernetes-platform/documentation/v1/supported_versions.html) (take into account the Deckhouse version used).
                    type: string
                    x-doc-required: true
                  rootDiskSize: &instanceClassRootDiskSize
                    description: |
                      The size of a root disk (in gigabytes).

                      This parameter also has influence on type of volume that will be used for root disk; the ["How to use rootDiskSize and when it is preferred"](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/faq.html#how-to-use-rootdisksize-and-when-it-is-preferred) section describes how to use it.
                    type: integer
                  etcdDiskSizeGb:
                    description: |
                      Etcd disk size in gigabytes.
                    example: 10
                    default: 10
                    type: integer
              volumeTypeMap:
                description: |
                  A dictionary of disk types for storing etcd data and Kubernetes configuration files.

                  Format of dictionary elements: `<AVAILABILITY ZONE>: <VOLUME TYPE>` (see the example).

                  If the `rootDiskSize` parameter is specified, the same disk type will be used for the VM's boot drive.

                  We recommend using the fastest disks provided by the provider in all cases.

                  If the value specified in `replicas` exceeds the number of elements in the dictionary, the master nodes whose number exceeds the length of the dictionary get the values starting from the beginning of the dictionary. For example, if `replicas: 5`, then master-0, master-2, master-4 will have the `fast-eu-1a` disk type, while master-1, master-3 will have the `fast-eu-1b` disk type.

                  Useful commands:
                  - `openstack availability zone list` — get list of availability zones.
                  - `openstack volume type list` — get list of volume types.
                x-examples:
                  - eu-1a: fast-eu-1a
                    eu-1b: fast-eu-1b
                type: object
                minProperties: 1
                additionalProperties:
                  type: string
                  minLength: 1
              serverGroup:
                type: object
                description: |
                  The ServerGroup object groups instances together. The instances in the group are placed on the same hypervisor (affinity) or different hypervisors (anti-affinity). This allows you to increase the fault tolerance of the cluster.
                required: [ policy ]
                properties:
                  policy:
                    type: string
                    enum: [ AntiAffinity ]
                    description: |
                      The policy that determines how instances are distributed among hypervisors.

                      - `AntiAffinity` — instances are placed on different hypervisors. This policy is managed by Deckhouse.
          nodeGroups:
            type: array
            description: |
              An array of additional NodeGroups for creating static nodes (e.g., for dedicated front nodes or gateways).
            items:
              type: object
              required: [name, replicas, instanceClass]
              properties:
                name:
                  type: string
                  description: |
                    The name of the NodeGroup to use for generating node names.
                replicas:
                  type: integer
                  description: |
                    The number of nodes to create.
                nodeTemplate:
                  description: |
                    Parameters of Node objects in Kubernetes to add after registering the node.
                  properties:
                    labels:
                      type: object
                      description: |
                        A list of labels to attach to cluster resources.

                        The same as the `metadata.labels` standard [field](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#objectmeta-v1-meta).
                      x-examples:
                      - environment: production
                        app: warp-drive-ai
                      additionalProperties:
                        type: string
                    annotations:
                      type: object
                      description: |
                        The same as the `metadata.annotations` standard [field](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#objectmeta-v1-meta).
                      x-examples:
                      - ai.fleet.com/discombobulate: "true"
                      additionalProperties:
                        type: string
                    taints:
                      type: array
                      description: |
                        The same as the `.spec.taints` field of the [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#taint-v1-core) object.

                        > **Caution!** Only the `effect`, `key`, `values`  fields are available.
                      x-examples:
                      - - effect: NoExecute
                          key: ship-class
                          value: frigate
                      items:
                        type: object
                        properties:
                          effect:
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          key:
                            type: string
                          value:
                            type: string
                instanceClass:
                  type: object
                  additionalProperties: false
                  required: [flavorName, imageName]
                  description: |
                    Partial contents of the fields of the.
                  properties:
                    <<: *instanceClassProperties
          layout:
            type: string
            description: |
              The way resources are located in the cloud.

              Read [more](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-vsphere/layouts.html) about possible provider layouts.
            x-unsafe: true
          standard:
            type: object
            description: |
              Settings for the [`Standard`](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/layouts.html#standard) layout.
            additionalProperties: false
            required: [internalNetworkCIDR]
            properties:
              internalNetworkCIDR: &internalNetworkCIDR
                description: |
                  Routing for the internal cluster network.
                type: string
                pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$'
                x-unsafe: true
              internalNetworkDNSServers:
                description: |
                  A list of addresses of the recursive DNSs of the internal cluster network.
                type: array
                items:
                  type: string
                  pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
              internalNetworkSecurity: &internalNetworkSecurity
                description: |
                  Defines whether [SecurityGroups](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-openstack/faq.html#how-to-check-whether-the-provider-supports-securitygroups) and [AllowedAddressPairs](https://docs.openstack.org/developer/dragonflow/specs/allowed_address_pairs.html) must be configured for ports of the internal network.
                type: boolean
                default: true
              enableEIP:
                description: |
                    Enable Elastic IP for the master nodes.
                type: boolean
                pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$'
                x-unsafe: true
          provider:
            description: |
              Contains [settings to connect](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/environment.html) to the HuaweiCloud API.

              These settings are the same as those in the `connection` field of the [cloud-provider-huaweicloud](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/030-cloud-provider-huaweicloud/configuration.html#parameters) module.
            type: object
            additionalProperties: false
            required: [cloud, region, accessKey, secretKey]
            properties:
              cloud:
                type: string
                description: |
                  The endpoint of the cloud provider.
              region:
                type: string
                description: |
                  The HuaweiCloud region where the cluster will be deployed.
                x-unsafe: true
              accessKey:
                type: string
                description: |
                  The access key of the HuaweiCloud to use.
              secretKey:
                type: string
                description: |
                  The secret key of the HuaweiCloud to use.
              insecure:
                type: boolean
                description: |
                  Trust self-signed SSL certificates.
              authURL:
                type: string
                description: |
                  The Identity authentication URL.
              domainName:
                type: string
                description: |
                  The Account name of IAM to scope to.
              projectID:
                type: string
                description: |
                  The project id.
      providerDiscoveryData:
        type: object
        additionalProperties: false
        required: [ apiVersion, kind ]
        x-examples:
        - apiVersion: deckhouse.io/v1
          kind: HuaweiCloudDiscoveryData
          storageDomains:
          - name: Default
        properties:
          apiVersion:
            type: string
            enum: [ deckhouse.io/v1 ]
          kind:
            type: string
            enum: [ HuaweiCloudDiscoveryData ]
          layout:
            type: string
            enum: [Standard]
          zones:
            type: array
            items:
              type: string
              minLength: 1
            minItems: 1
            uniqueItems: true
          instances:
            type: object
          volumeTypes:
            type: array
            description: |
              List of volumes types in the cloud.
            items:
              type: object
              required: [name]
              properties:
                id:
                  type: string
                  description: |
                    The ID of the volume type.
                name:
                  type: string
                  description: |
                    The name of the volume type.
                isPublic:
                  type: boolean
                  description: |
                    The flag that indicates whether the volume type is public.
      storageClasses:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            allowVolumeExpansion:
              type: boolean
