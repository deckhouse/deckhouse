{{- define "huaweicloud_cloud_config" }}
{{- $providerClusterConfiguration := .Values.cloudProviderHuaweicloud.internal.providerClusterConfiguration | required "internal.providerClusterConfiguration is required" }}
[Global]
cloud = {{ $providerClusterConfiguration.provider.cloud | quote }}
region = {{ $providerClusterConfiguration.provider.region | quote }}
access-key = {{ $providerClusterConfiguration.provider.accessKey | quote }}
secret-key = {{ $providerClusterConfiguration.provider.secretKey | quote }}
iam-endpoint = "https://iam.{{ $providerClusterConfiguration.provider.region }}.{{ $providerClusterConfiguration.provider.cloud }}"
  {{- if $providerClusterConfiguration.provider.projectID }}
project-id = {{ $providerClusterConfiguration.provider.projectID | quote }}
  {{- end }}
  {{- if $providerClusterConfiguration.provider.authURL }}
auth-url = {{ $providerClusterConfiguration.provider.authURL | quote }}
  {{- end }}
  {{- if $providerClusterConfiguration.provider.domainName }}
domain-name = {{ $providerClusterConfiguration.provider.domainName | quote }}
  {{- end }}
  {{- if $providerClusterConfiguration.provider.caCert }}
ca-file = /etc/config/ca.crt
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-huaweicloud
  {{- include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager")) | nindent 2 }}
type: Opaque
data:
  cloud-config: {{ include "huaweicloud_cloud_config" . | b64enc | quote }}
{{- if hasKey .Values.cloudProviderHuaweicloud.internal.providerClusterConfiguration.provider "caCert" }}
  ca.crt: {{ .Values.cloudProviderHuaweicloud.internal.providerClusterConfiguration.provider.caCert | b64enc | quote }}
{{- end }}
