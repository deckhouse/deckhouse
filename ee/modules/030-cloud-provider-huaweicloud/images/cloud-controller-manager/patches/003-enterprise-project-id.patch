diff --git a/pkg/cloudprovider/huaweicloud/sharedloadbalancer.go b/pkg/cloudprovider/huaweicloud/sharedloadbalancer.go
index 3a52f0b8..37a6efb1 100644
--- a/pkg/cloudprovider/huaweicloud/sharedloadbalancer.go
+++ b/pkg/cloudprovider/huaweicloud/sharedloadbalancer.go
@@ -319,12 +319,13 @@ func (l *SharedLoadBalancer) createLoadbalancer(clusterName, subnetID string, se
 	provider := elbmodel.GetCreateLoadbalancerReqProviderEnum().VLB
 	desc := fmt.Sprintf("Created by the ELB service(%s/%s) of the k8s cluster(%s).",
 		service.Namespace, service.Name, clusterName)
 	loadbalancer, err := l.sharedELBClient.CreateInstanceCompleted(&elbmodel.CreateLoadbalancerReq{
-		Name:        &name,
-		VipSubnetId: subnetID,
-		Provider:    &provider,
-		Description: &desc,
+		Name:                &name,
+		VipSubnetId:         subnetID,
+		Provider:            &provider,
+		Description:         &desc,
+		EnterpriseProjectId: &l.cloudConfig.AuthOpts.EnterpriseProjectID,
 	})
 	if err != nil {
 		return nil, err
 	}
diff --git a/pkg/config/config.go b/pkg/config/config.go
index 1e366bc7..79edcd19 100644
--- a/pkg/config/config.go
+++ b/pkg/config/config.go
@@ -45,14 +45,15 @@ type VpcOptions struct {
 	SecurityGroupID string `gcfg:"security-group-id"`
 }

 type AuthOptions struct {
-	Cloud     string `gcfg:"cloud"`
-	AuthURL   string `gcfg:"auth-url"`
-	Region    string `gcfg:"region"`
-	AccessKey string `gcfg:"access-key"`
-	SecretKey string `gcfg:"secret-key"`
-	ProjectID string `gcfg:"project-id"`
+	Cloud               string `gcfg:"cloud"`
+	AuthURL             string `gcfg:"auth-url"`
+	Region              string `gcfg:"region"`
+	AccessKey           string `gcfg:"access-key"`
+	SecretKey           string `gcfg:"secret-key"`
+	ProjectID           string `gcfg:"project-id"`
+	EnterpriseProjectID string `gcfg:"enterprise-project-id"`
 }

 func (a *AuthOptions) GetCredentials() *basic.Credentials {
 	return basic.NewCredentialsBuilder().

