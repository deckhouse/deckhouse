{{- if not .Values.metallb.speaker.nodeSelector }}
  {{ fail "`metallb.speaker.nodeSelector` parameter is mandatory" }}
{{- end }}

{{- if ($.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: speaker
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "speaker")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: speaker
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: speaker
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "speaker")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: speaker
  template:
    metadata:
      labels:
        app: speaker
    spec:
      {{- include "helm_lib_priority_class" (tuple . "system-node-critical") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      nodeSelector:
        {{- .Values.metallb.speaker.nodeSelector | toYaml | nindent 8 }}
{{- if .Values.metallb.speaker.tolerations }}
      tolerations:
        {{- .Values.metallb.speaker.tolerations | toYaml | nindent 8 }}
{{- end }}
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
        - args:
            - --host=127.0.0.1
            - --port=7472
            - --config=config
          env:
            - name: METALLB_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: METALLB_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: "{{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.metallb.speaker }}"
          imagePullPolicy: IfNotPresent
          name: speaker
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all_and_add" (list . (list "NET_ADMIN" "NET_RAW" "SYS_ADMIN")) | nindent 10 }}
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
        - name: kube-rbac-proxy
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all" . | nindent 10 }}
          image: "{{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.common.kubeRbacProxy }}"
          args:
            - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):7473"
            - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
            - "--v=2"
            - "--logtostderr=true"
            - "--stale-cache-interval=1h30m"
          ports:
            - containerPort: 7473
              name: https-metrics
          env:
            - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: KUBE_RBAC_PROXY_CONFIG
              value: |
                upstreams:
                - upstream: http://127.0.0.1:7472/metrics
                  path: /metrics
                  authorization:
                    resourceAttributes:
                      namespace: d8-{{ .Chart.Name }}
                      apiGroup: apps
                      apiVersion: v1
                      resource: daemonsets
                      subresource: prometheus-metrics
                      name: speaker
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: speaker
      terminationGracePeriodSeconds: 0
