{{- define "agent_resources" }}
cpu: 50m
memory: 75Mi
{{- end }}

{{- if ($.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: agent
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "agent")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: agent
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: agent
        minAllowed:
        {{- include "agent_resources" . | nindent 10 }}
        maxAllowed:
          cpu: 2000m
          memory: 300Mi
    {{- include "helm_lib_vpa_kube_rbac_proxy_resources" . | nindent 6 }}
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "agent")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      annotations:
        {{ include "helm_lib_prevent_ds_eviction_annotation" . | nindent 8 }}
      labels:
        app: agent
    spec:
      {{- include "helm_lib_priority_class" (tuple . "system-node-critical") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" . | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      automountServiceAccountToken: true
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
        - name: agent
          image: {{ include "helm_lib_module_image" (list $ "agent") }}
          {{- include "helm_lib_module_container_security_context_pss_restricted_flexible" dict | nindent 10 }}
          args:
            {{- if .Values.serviceWithHealthchecks.debug }}
            - --debugging=true
            {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9873
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 9873
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "agent_resources" . | nindent 14 }}
{{- end }}
        - name: kube-rbac-proxy
          {{- include "helm_lib_module_container_security_context_pss_restricted_flexible" dict | nindent 10 }}
          image: {{ include "helm_lib_module_common_image" (list $ "kubeRbacProxy") }}
          args:
            - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8383"
            - "--v=2"
            - "--logtostderr=true"
            - "--stale-cache-interval=1h30m"
            - "--livez-path=/livez"
          ports:
            - containerPort: 8383
              name: https-metrics
          livenessProbe:
            httpGet:
              path: /livez
              port: 8383
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /livez
              port: 8383
              scheme: HTTPS
          env:
            - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBE_RBAC_PROXY_CONFIG
              value: |
                upstreams:
                - upstream: http://127.0.0.1:9874/metrics
                  path: /metrics
                  authorization:
                    resourceAttributes:
                      namespace: d8-{{ .Chart.Name }}
                      apiGroup: apps
                      apiVersion: v1
                      resource: daemonsets
                      subresource: prometheus-metrics
                      name: agent
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 14 }}
{{- end }}
      serviceAccountName: agent
      terminationGracePeriodSeconds: 5
