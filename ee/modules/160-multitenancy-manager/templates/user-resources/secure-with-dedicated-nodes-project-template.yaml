---
apiVersion: deckhouse.io/v1alpha1
kind: ProjectTemplate
metadata:
  name: secure-with-dedicated-nodes
spec:
  parametersSchema:
    openAPIV3Schema:
      requests:
        type: object
        properties:
          cpu:
            oneOf:
              - type: number
                format: int
              - type: string
            pattern: "^[0-9]+m?$"
          memory:
            oneOf:
              - type: number
                format: int
              - type: string
            pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
          storage:
            type: string
            pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
      limits:
        type: object
        properties:
          cpu:
            oneOf:
              - type: number
                format: int
              - type: string
            pattern: "^[0-9]+m?$"
          memory:
            oneOf:
              - type: number
                format: int
              - type: string
            pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
      administrators:
        description: |
          Who has the access to the project
        type: array
        items:
          type: object
          required:
            - subject
            - name
          properties:
            subject:
              description: |
                Kind of the target resource to apply access to the
                environment (`Group` or `User`).
              enum:
                - User
                - Group
              type: string
            name:
              description: |
                The name of the target resource to apply access
                to the environment.
              minLength: 1
              type: string
      networkPolicy:
        description: |
          To create network policy or not.
        enum:
          - Isolated
          - NotRestricted
        type: string
        default: Isolated
      extendedMoniroting:
        description: |
          Extended monitoring (set the label extended-monitoring.deckhouse.io/enabled on the namespace or not).
        type: boolean
        default: true
      clusterLogDestnationName:
        description: |
          The value for the clusterlogdestination in the podloggingconfig.
        type: string
  resourcesTemplate: |
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      {{ with .projectName }}name: {{ . }}{{ end }}
      annotations:
        {{ if .parameters.extendedMoniroting }}extended-monitoring.deckhouse.io/enabled: ""{{ end }}
    {{- range $administrator := .parameters.administrators }}
    ---
    apiVersion: deckhouse.io/v1alpha1
    kind: AuthorizationRule
    metadata:
      name: {{ $administrator.name }}
    spec:
      accessLevel: Admin
      subjects:
      - kind: {{ $administrator.subject }}
        name: {{ $administrator.name }}
    {{- end }}
    ---
    # Max requests and limits for resource and storage consumption for all pods in a namespace.
    # Refer to https://kubernetes.io/docs/concepts/policy/resource-quotas/
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      name: all-pods
    spec:
      hard:
        {{ with .parameters.requests.cpu }}requests.cpu: {{ . }}{{ end }}
        {{ with .parameters.requests.memory }}requests.memory: {{ . }}{{ end }}
        {{ with .parameters.requests.storage }}requests.storage: {{ . }}{{ end }}
        {{ with .parameters.limits.cpu }}limits.cpu: {{ . }}{{ end }}
        {{ with .parameters.limits.memory }}limits.memory: {{ . }}{{ end }}
    ---
    # Deny all network traffic by default except namespaced traffic and dns.
    # Refer to https://kubernetes.io/docs/concepts/services-networking/network-policies/
    {{- if eq .parameters.networkPolicy "Isolated" }}
    kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: deny-all-except-current-namespace
    spec:
      podSelector:
        matchLabels: {}
      policyTypes:
        - Ingress
        - Egress
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: "{{ .projectName }}"
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: "d8-monitoring"
                podSelector:
                  matchLabels:
                    app: prometheus
      egress:
        - to:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: "{{ .projectName }}"
        - to:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: kube-system
          ports:
            - protocol: UDP
              port: 53
    {{- end }}
    ---
    # Refer to https://deckhouse.io/documentation/v1/modules/460-log-shipper/
    {{- with .parameters.clusterLogDestnationName }}
    apiVersion: deckhouse.io/v1alpha1
    kind: PodLoggingConfig
    metadata:
      name: default
    spec:
      clusterDestinationRefs:
        - {{ . }}
    {{- end }}
