#!/usr/bin/env bash

# Copyright 2023 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /shell_lib.sh

function __config__(){
  cat <<EOF
configVersion: v1
kubernetes:
  - name: namespaces
    apiVersion: deckhouse.io/v1alpha1
    kind: Namespace
    queue: "namespaces"
    group: main
    executeHookOnEvent: []
    executeHookOnSynchronization: false
    keepFullObjectsInMemory: false
    jqFilter: |
      {
        "name": .metadata.name,
      }
kubernetesValidating:
- name: projects-unique.deckhouse.io
  group: main
  rules:
  - apiGroups:   ["deckhouse.io"]
    apiVersions: ["*"]
    operations:  ["CREATE"]
    resources:   ["projects"]
    scope:       "Cluster"
EOF
}

function __main__() {
  projectName=$(context::jq -r '.review.request.object.metadata.name')
  if alreadyExistedNS="$(context::jq -er --arg name "$projectName" '.snapshots.namespaces[].filterResult | select(.name == $name) | .name' 2>&1)"; then
    cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":false, "message":"projects.deckhouse.io \"$projectName\", the project name is equal to the already existing namespace \"$alreadyExistedNS\"" }
EOF
    return 0
  fi

  cat <<EOF > "$VALIDATING_RESPONSE_PATH"
{"allowed":true}
EOF

}

hook::run "$@"
