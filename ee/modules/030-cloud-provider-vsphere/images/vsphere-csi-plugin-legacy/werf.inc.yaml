---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-csi-artifact
  add: /src/vsphere-csi
  to: /bin/vsphere-csi
  before: setup
- image: common/alt
  add: /relocate
  to: /
  before: install
  includePaths:
  - '**/*'
docker:
  ENTRYPOINT: ["/bin/vsphere-csi"]
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-cloud-provider-vsphere-artifact
from: {{ $.Images.BASE_ALPINE }}
git:
- add: /{{ $.ModulePath }}modules/030-{{ $.ModuleName }}/images/{{ $.ImageName }}/cloud-provider-vsphere-patches
  to: /patches
  stageDependencies:
    install:
      - '**/*'
  includePaths:
  - 001-support-fcd-disk-resize.patch
  - 002-find-by-converted-uuid.patch
shell:
  beforeInstall:
  - |
    apk upgrade --available --no-cache && \
    apk add --no-cache git
  install:
  - mkdir -p /src
  - git clone --depth 1 --branch v0.2.1 https://github.com/flant/cloud-provider-vsphere.git /src
  - cd /src
  - find /patches -name '*.patch' -exec git apply {} \;
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-csi-artifact
from: {{ $.Images.BASE_GOLANG_20_ALPINE }}
import: 
- artifact: {{ $.ModuleName }}/{{ $.ImageName }}-cloud-provider-vsphere-artifact
  add: /src
  to: /cloud-provider-vsphere
  before: install
git:
- add: /{{ $.ModulePath }}modules/030-{{ $.ModuleName }}/images/{{ $.ImageName }}
  to: /patches
  includePaths:
  - 001-csi-metrics-and-volume-expansion.patch
  stageDependencies:
    install:
      - '**/*'
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  beforeInstall:
  - apk add --no-cache git wget
  install:
  - export GO_VERSION=${GOLANG_VERSION}
  - export GOPROXY={{ $.GOPROXY }}
  - mkdir -p /src
  - cd /src
  - wget https://github.com/flant/vsphere-csi-driver/archive/6189afc2522d83a96d3857110c61478710110347.tar.gz -O - | tar -xz --strip-components=1 -C .
  - find /patches -name '*.patch' -exec git apply {} \;
  - go mod edit -replace=k8s.io/cloud-provider-vsphere=/cloud-provider-vsphere
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o vsphere-csi cmd/vsphere-csi/main.go