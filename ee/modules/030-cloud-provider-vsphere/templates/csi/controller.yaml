###
### controller
###
{{- define "csi_controller_args" }}
- "--fss-name=csi-controller-internal-feature-states"
- "--fss-namespace=$(CSI_NAMESPACE)"
{{- end }}

{{- define "csi_syncer_envs" }}
- name: FULL_SYNC_INTERVAL_MINUTES
  value: "30"
- name: VSPHERE_CSI_CONFIG
  value: "/etc/cloud/cloud-config"
- name: LOGGER_LEVEL
  value: "PRODUCTION"
- name: INCLUSTER_CLIENT_QPS
  value: "100"
- name: INCLUSTER_CLIENT_BURST
  value: "100"
- name: CSI_NAMESPACE
  valueFrom:
    fieldRef:
      fieldPath: metadata.namespace
{{- end }}

{{- define "csi_controller_envs" }}
- name: CSI_ENDPOINT
  value: "unix:///csi/csi.sock"
- name: X_CSI_MODE
  value: "controller"
- name: X_CSI_SPEC_REQ_VALIDATION
  value: "false"
- name: VSPHERE_CSI_CONFIG
  value: "/etc/cloud/cloud-config"
- name: X_CSI_SPEC_DISABLE_LEN_CHECK
  value: "true"
- name: X_CSI_SERIAL_VOL_ACCESS_TIMEOUT
  value: 3m
- name: CSI_NAMESPACE
  valueFrom:
    fieldRef:
      fieldPath: metadata.namespace
{{- end }}

{{- define "csi_controller_volumes" }}
- name: vsphere-csi-config-volume
  secret:
    secretName: csi-controller
{{- end }}

{{- define "csi_controller_volume_mounts" }}
- mountPath: /etc/cloud
  name: vsphere-csi-config-volume
  readOnly: true
{{- end }}

{{- $kubernetesSemVer := semver .Values.global.discovery.kubernetesVersion }}
{{- $csiImageName := join "" (list "vsphereCsiPlugin" $kubernetesSemVer.Major $kubernetesSemVer.Minor ) }}
{{- $csiControllerImage := include "helm_lib_module_image_no_fail" (list . $csiImageName) }}
{{- if $csiControllerImage }}

{{- $csiControllerConfig := dict }}
{{- $_ := set $csiControllerConfig "controllerImage" $csiControllerImage }}
{{- $_ := set $csiControllerConfig "snapshotterEnabled" false }}
{{- $_ := set $csiControllerConfig "syncerEnabled" true }}
{{- $_ := set $csiControllerConfig "additionalControllerArgs" (include "csi_controller_args" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerEnvs" (include "csi_controller_envs" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalSyncerEnvs" (include "csi_syncer_envs" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVolumes" (include "csi_controller_volumes" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVolumeMounts" (include "csi_controller_volume_mounts" . | fromYamlArray) }}

{{- if ne .Values.cloudProviderVsphere.internal.compatibilityFlag "legacy" }}
{{- include "helm_lib_csi_controller_manifests" (list . $csiControllerConfig) }}
{{- end }}
{{- end }}
###
### node
###
{{- define "csi_node_args" }}
- "--fss-name=csi-controller-internal-feature-states"
- "--fss-namespace=$(CSI_NAMESPACE)"
{{- end }}

{{- define "csi_node_envs" }}
- name: CSI_ENDPOINT
  value: "unix:///csi/csi.sock"
- name: X_CSI_MODE
  value: "node"
- name: X_CSI_SPEC_REQ_VALIDATION
  value: "false"
- name: VSPHERE_CSI_CONFIG
  value: "/etc/cloud/cloud-config"
- name: NODE_NAME
  valueFrom:
    fieldRef:
      fieldPath: spec.nodeName
- name: CSI_NAMESPACE
  valueFrom:
    fieldRef:
      fieldPath: metadata.namespace
{{- end }}

{{- define "csi_node_volumes" }}
- name: vsphere-csi-config-volume
  secret:
    secretName: csi-controller
{{- end }}

{{- define "csi_node_volume_mounts" }}
- mountPath: /etc/cloud
  name: vsphere-csi-config-volume
  readOnly: true
{{- end }}

{{- define "csi_node_registrar_liveness_exec_probes_command" }}
    - /csi-node-driver-registrar
    - --kubelet-registration-path=/var/lib/kubelet/csi-plugins/csi.vsphere.vmware.com/csi.sock"
    - --mode=kubelet-registration-probe
{{- end }}

{{- $kubernetesSemVer := semver .Values.global.discovery.kubernetesVersion }}
{{- $csiImageName := join "" (list "vsphereCsiPlugin" $kubernetesSemVer.Major $kubernetesSemVer.Minor ) }}
{{- $csiControllerImage := include "helm_lib_module_image_no_fail" (list . $csiImageName) }}
{{- if $csiControllerImage }}

  {{- $csiNodeConfig := dict }}
  {{- $_ := set $csiNodeConfig "nodeImage" $csiControllerImage }}
  {{- $_ := set $csiNodeConfig "driverFQDN" "csi.vsphere.vmware.com" }}
  {{- $_ := set $csiNodeConfig "serviceAccount" "csi" }}
  {{- $_ := set $csiNodeConfig "additionalNodeArgs" (include "csi_node_args" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeEnvs" (include "csi_node_envs" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeVolumes" (include "csi_node_volumes" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeVolumeMounts" (include "csi_node_volume_mounts" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeLivenessProbesCmd" (include "csi_node_registrar_liveness_exec_probes_command" . | fromYamlArray) }}

  {{- if ne .Values.cloudProviderVsphere.internal.compatibilityFlag "legacy" }}
  {{- include "helm_lib_csi_node_manifests" (list . $csiNodeConfig) }}
  {{- end }}

{{- end }}
