- name: d8.systemRegistry.st_pod_target_down
  rules:
  - alert: TargetDown
    expr: |
      label_replace(
        up{job=~"^system-registry-(distribution|auth)$"},
        "host_ip",
        "$1",
        "instance",
        "([^:]+):.*"
      )
      * on (host_ip) group_left (pod, node)
        kube_pod_info{created_by_kind="Node",namespace="d8-system",pod=~"^system-registry-.*$"}
      == 0 unless on (job) ALERTS{alertname=~".+TargetDown"}
    for: 3m
    labels:
      severity_level: "7"
    annotations:
      plk_protocol_version: "1"
      plk_labels_as_annotations: "instance,pod"
      description: '{{ $labels.job }} target is down.'
      summary: Target is down

  - alert: TargetDown
    expr: |
      label_replace(
        up{job=~"^system-registry-(distribution|auth)$"},
        "host_ip",
        "$1",
        "instance",
        "([^:]+):.*"
      )
      * on (host_ip) group_left (pod, node)
        kube_pod_info{created_by_kind="Node",namespace="d8-system",pod=~"^system-registry-.*$"}
      == 0 unless on (job) ALERTS{alertname=~".+TargetDown"}
    for: 10m
    labels:
      severity_level: "6"
    annotations:
      plk_protocol_version: "1"
      plk_labels_as_annotations: "instance,pod"
      description: '{{ $labels.job }} target is down.'
      summary: Target is down

  - alert: TargetDown
    expr: |
      label_replace(
        up{job=~"^system-registry-(distribution|auth)$"},
        "host_ip",
        "$1",
        "instance",
        "([^:]+):.*"
      )
      * on (host_ip) group_left (pod, node)
        kube_pod_info{created_by_kind="Node",namespace="d8-system",pod=~"^system-registry-.*$"}
      == 0 unless on (job) ALERTS{alertname=~".+TargetDown"}
    for: 20m
    labels:
      severity_level: "5"
    annotations:
      plk_protocol_version: "1"
      plk_labels_as_annotations: "instance,pod"
      description: '{{ $labels.job }} target is down.'
      summary: Target is down
