{{- define "system_registry_manager_resources" }}
cpu: 25m
memory: 40Mi
{{- end }}

{{- define "image_holder_resources" }}
cpu: 10m
memory: 10Mi
{{- end }}

{{- $images := dict }}
{{- $_ := set $images "dockerAuth" $.Values.global.modulesImages.digests.systemRegistry.dockerAuth }}
{{- $_ := set $images "dockerDistribution" $.Values.global.modulesImages.digests.systemRegistry.dockerDistribution }}
{{- $_ := set $images "mirrorer" $.Values.global.modulesImages.digests.systemRegistry.mirrorer }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: system-registry-manager
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "system-registry-manager" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: system-registry-manager
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: system-registry-manager
      minAllowed:
        {{- include "system_registry_manager_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 50m
        memory: 80Mi
    {{- range $name, $imageDigest := $images }}
    - containerName: image-holder-{{ $name | kebabcase }}
      minAllowed:
        {{- include "image_holder_resources" $ | nindent 8 }}
      maxAllowed:
        cpu: 10m
        memory: 10Mi
    {{- end }}
    {{- include "helm_lib_vpa_kube_rbac_proxy_resources" . | nindent 4 }}
{{- end }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: system-registry-manager
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "system-registry-manager")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: system-registry-manager
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
      maxSurge: 0%
  template:
    metadata:
      labels:
        app: system-registry-manager
    spec:
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "uninitialized") | nindent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: {{ .Chart.Name }}
      containers:
      - name: system-registry-manager
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        {{- if and (hasKey $.Values.systemRegistry "imagesOverride") (hasKey $.Values.systemRegistry.imagesOverride "registryManager") (ne $.Values.systemRegistry.imagesOverride.registryManager "") }}
        image: {{ $.Values.systemRegistry.imagesOverride.registryManager }}
        imagePullPolicy: IfNotPresent
        {{- else }}
        image: {{ include "helm_lib_module_image" (list . "systemRegistryManager") }}
        {{- end }}
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: REGISTRY_ADDRESS
          value: {{ $.Values.global.modulesImages.registry.address }}
        - name: REGISTRY_PATH
          value: {{ $.Values.global.modulesImages.registry.path }}
        - name: IMAGE_DOCKER_AUTH
          value: "{{ $.Values.global.modulesImages.digests.systemRegistry.dockerAuth }}"
        - name: IMAGE_DOCKER_DISTRIBUTION
          value: "{{ $.Values.global.modulesImages.digests.systemRegistry.dockerDistribution }}"
        - name: IMAGE_MIRRORER
          value: "{{ $.Values.global.modulesImages.digests.systemRegistry.mirrorer }}"
        {{- include "helm_lib_envs_for_proxy" . | nindent 8 }}
        ports:
        - name: http-healthz
          protocol: TCP
          containerPort: 8097
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8097
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: /readyz
            scheme: HTTP
            port: 8097
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 8
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 50 | nindent 12 }}
          {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "system_registry_manager_resources" . | nindent 12 }}
          {{- end }}
{{- range $name, $imageDigest := $images }}
      - name: image-holder-{{ $name | kebabcase }}
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: "{{ $.Values.global.modulesImages.registry.base }}@{{ $imageDigest }}"
        command:
        - /pause
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
          {{- if not ( $.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "image_holder_resources" $ | nindent 12 }}
          {{- end }}
{{- end }}
      - name: kube-rbac-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_common_image" (list . "kubeRbacProxy") }}
        args:
        - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8080"
        - "--v=2"
        - "--logtostderr=true"
        - "--stale-cache-interval=1h30m"
        ports:
        - containerPort: 8080
          name: https-metrics
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            upstreams:
            - upstream: http://127.0.0.1:8081/
              path: /
              authorization:
                resourceAttributes:
                  namespace: d8-system
                  apiGroup: apps
                  apiVersion: v1
                  resource: daemonset
                  subresource: prometheus-metrics
                  name: system-registry-manager
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
          {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
            {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 12 }}
          {{- end }}
      priorityClassName: system-cluster-critical
