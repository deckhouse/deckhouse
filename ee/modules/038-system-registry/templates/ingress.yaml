{{- if and (.Values.global.modules.publicDomainTemplate) (.Values.global.enabledModules | has "cert-manager") }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: embedded-registry
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "embedded-registry")) | nindent 2 }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    {{- /* 0 - no limit on the request body size */ -}}
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  {{- if .Values.systemRegistry.whitelistSourceRanges }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.systemRegistry.whitelistSourceRanges | join "," }}
  {{- end }}
spec:
  ingressClassName: {{ include "helm_lib_module_ingress_class" . | quote }}
  rules:
  - host: {{ include "helm_lib_module_public_domain" (list . "embedded-registry") }}
    http:
      paths:
      - backend:
          service:
            name: embedded-registry
            port:
              number: 5001
        path: /
        pathType: Prefix
  {{- /* 
      TLS for the ingress
      Condition: enabled if mode == CustomCertificate or CertManager
      How it works:
          - if mode == CertManager - uses the certificate "embedded-registry-ingress-tls"
          - if mode == CustomCertificate - uses the certificate "embedded-registry-ingress-tls-customcertificate"
  */ -}}
  {{- if (include "helm_lib_module_https_ingress_tls_enabled" . ) }}
  tls:
  - hosts:
    - {{ include "helm_lib_module_public_domain" (list . "embedded-registry") }}
    secretName: {{ include "helm_lib_module_https_secret_name" (list . "embedded-registry-ingress-tls") }}
  {{- end }}
{{- end }}
