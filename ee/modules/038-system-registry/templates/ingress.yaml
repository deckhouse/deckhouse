{{- if and .Values.global.modules.publicDomainTemplate .Values.global.clusterIsBootstrapped }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: embedded-registry
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "embedded-registry")) | nindent 2 }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_ssl_certificate /etc/nginx/ssl/client.crt;
      proxy_ssl_certificate_key /etc/nginx/ssl/client.key;
      proxy_ssl_protocols TLSv1.2;
      proxy_ssl_session_reuse on;
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/proxy-body-size: "0" # 0 - no limit on the request body size
  {{- if .Values.systemRegistry.whitelistSourceRanges }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.systemRegistry.whitelistSourceRanges | join "," }}
  {{- end }}
spec:
  ingressClassName: {{ include "helm_lib_module_ingress_class" . | quote }}
  rules:
  - host: {{ include "helm_lib_module_public_domain" (list . "embedded-registry") }}
    http:
      paths:
      - backend:
          service:
            name: embedded-registry
            port:
              number: 5001
        path: /
        pathType: Prefix
  {{- if (include "helm_lib_module_https_ingress_tls_enabled" . ) }}
  tls:
  - hosts:
    - {{ include "helm_lib_module_public_domain" (list . "embedded-registry") }}
    secretName: {{ include "helm_lib_module_https_secret_name" (list . "embedded-registry-ingress-tls") }}
  {{- end }}

  {{- if eq (include "helm_lib_module_https_mode" .) "CertManager" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: embedded-registry
  namespace: d8-system
  {{- include "helm_lib_module_labels" (list . (dict "app" "embedded-registry")) | nindent 2 }}
spec:
  certificateOwnerRef: false
  secretName: {{ include "helm_lib_module_https_secret_name" (list . "embedded-registry-ingress-tls") }}
  {{ include "helm_lib_module_generate_common_name" (list . "embedded-registry") | nindent 2 }}
  dnsNames:
    - {{ include "helm_lib_module_public_domain" (list . "embedded-registry") }}
  issuerRef:
    name: {{ include "helm_lib_module_https_cert_manager_cluster_issuer_name" . }}
    kind: ClusterIssuer
  {{- end }}
{{- end }}
