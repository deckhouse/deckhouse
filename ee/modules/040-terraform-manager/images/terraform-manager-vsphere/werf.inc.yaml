---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: {{ .ModuleName }}/base-terraform-manager
git:
- add: /ee/candi/cloud-providers/vsphere
  to: /deckhouse/candi/cloud-providers/vsphere
import:
- artifact: terraform-provider-vsphere
  add: /terraform-provider-vsphere/terraform-provider-vsphere
  to: /usr/local/share/terraform/plugins/registry.terraform.io/{{ env "TF_VSPHERE_NAMESPACE" }}/{{ env "TF_VSPHERE_TYPE" }}/{{ env "TF_VSPHERE_VERSION" }}/linux_amd64/terraform-provider-vsphere
  before: setup
ansible:
  install:
  - name: "Create a directory for terraform provider vsphere"
    file:
      path: /usr/local/share/terraform/plugins/registry.terraform.io/{{ env "TF_VSPHERE_NAMESPACE" }}/{{ env "TF_VSPHERE_TYPE" }}/{{ env "TF_VSPHERE_VERSION" }}/linux_amd64
      state: directory
  - apk:
      name: ca-certificates
      update_cache: yes
  - command: rm -rf /var/cache/apk/*
---
artifact: terraform-provider-vsphere
from: {{ env "BASE_GOLANG_ALPINE" }}
git:
- url: https://github.com/deckhouse/3p-terraform-provider-vsphere
  add: /
  to: /terraform-provider-vsphere
  tag: v{{ env "TF_VSPHERE_VERSION" }}-flant.1
  stageDependencies:
    install:
    - "**/*"
mount:
- from: build_dir
  to: /go/pkg
ansible:
  beforeInstall:
  - apk:
      name:
      - git
      - ca-certificates
      update_cache: yes
  - command: rm -rf /var/cache/apk/*

  install:
  - command: go mod download
    args:
      chdir: /terraform-provider-vsphere

  setup:
  - command: go build -o terraform-provider-vsphere
    args:
      chdir: /terraform-provider-vsphere
    environment:
      CGO_ENABLED: "0"
