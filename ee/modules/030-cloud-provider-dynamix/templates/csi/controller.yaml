{{- define "csi_controller_args" }}
- "--node-name=$(NODE_ID)"
- "--endpoint=unix:///csi/csi.sock"
{{- end }}

{{- define "csi_controller_envs" }}
- name: NODE_ID
  valueFrom:
    fieldRef:
      fieldPath: spec.nodeName
- name: DYNAMIX_APP_ID
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: appId
- name: DYNAMIX_APP_SECRET
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: appSecret
- name: DYNAMIX_OAUTH2_URL
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: oAuth2Url
- name: DYNAMIX_CONTROLLER_URL
  valueFrom:
    secretKeyRef:
        name: dynamix-credentials
        key: controllerUrl
- name: DYNAMIX_INSECURE
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: insecure
{{- end }}

{{- define "csi_controller_volumes" }}
{{- end }}

{{- define "csi_controller_volume_mounts" }}
{{- end }}

{{- define "csi_node_args" }}
- "--node-name=$(NODE_ID)"
- "--endpoint=unix:///csi/csi.sock"
{{- end }}

{{- define "csi_node_envs" }}
- name: NODE_ID
  valueFrom:
    fieldRef:
      fieldPath: spec.nodeName
- name: DYNAMIX_APP_ID
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: appId
- name: DYNAMIX_APP_SECRET
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: appSecret
- name: DYNAMIX_OAUTH2_URL
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: oAuth2Url
- name: DYNAMIX_CONTROLLER_URL
  valueFrom:
    secretKeyRef:
        name: dynamix-credentials
        key: controllerUrl
- name: DYNAMIX_INSECURE
  valueFrom:
    secretKeyRef:
      name: dynamix-credentials
      key: insecure
{{- end }}

{{- define "csi_node_volumes" }}
{{- end }}

{{- define "csi_node_volume_mounts" }}
{{- end }}

{{- $csiControllerImage := include "helm_lib_module_image_no_fail" (list . "dynamixCsiDriver") }}
{{- if $csiControllerImage }}

  {{- $csiControllerConfig := dict }}
  {{- $_ := set $csiControllerConfig "controllerImage" $csiControllerImage }}
  {{- $_ := set $csiControllerConfig "snapshotterEnabled" false }}
  {{- $_ := set $csiControllerConfig "resizerEnabled" false }}
  {{- $_ := set $csiControllerConfig "topologyEnabled" false }}
  {{- $_ := set $csiControllerConfig "additionalControllerArgs" (include "csi_controller_args" . | fromYamlArray) }}
  {{- $_ := set $csiControllerConfig "additionalControllerEnvs" (include "csi_controller_envs" . | fromYamlArray) }}
  {{- $_ := set $csiControllerConfig "additionalControllerVolumes" (include "csi_controller_volumes" . | fromYamlArray) }}
  {{- $_ := set $csiControllerConfig "additionalControllerVolumeMounts" (include "csi_controller_volume_mounts" . | fromYamlArray) }}

  {{- include "helm_lib_csi_controller_manifests" (list . $csiControllerConfig) }}

  {{- $csiNodeConfig := dict }}
  {{- $_ := set $csiNodeConfig "nodeImage" $csiControllerImage }}
  {{- $_ := set $csiNodeConfig "driverFQDN" "dynamix.deckhouse.io" }}
  {{- $_ := set $csiNodeConfig "serviceAccount" "csi" }}
  {{- $_ := set $csiNodeConfig "additionalNodeArgs" (include "csi_node_args" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeEnvs" (include "csi_node_envs" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeVolumes" (include "csi_node_volumes" . | fromYamlArray) }}
  {{- $_ := set $csiNodeConfig "additionalNodeVolumeMounts" (include "csi_node_volume_mounts" . | fromYamlArray) }}

  {{- include "helm_lib_csi_node_manifests" (list . $csiNodeConfig) }}
{{- end }}
