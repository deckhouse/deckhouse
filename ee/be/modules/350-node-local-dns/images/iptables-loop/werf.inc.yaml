{{- $iptables_version := "1.8.9" }}
{{- $iptables_image_version := $iptables_version | replace "." "-" }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- image: registrypackages/iptables-artifact-{{ $iptables_image_version }}
  add: /
  to: /sbin
  includePaths:
  - xtables-legacy-multi
  - xtables-nft-multi
  before: setup
- image: common/iptables-wrapper
  add: /iptables-wrapper
  to: /sbin/iptables-wrapper
  before: setup
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /iptables-loop
  to: /iptables-loop
  before: setup
git:
{{- include "image mount points" . }}
imageSpec:
  config:
    env: {"PATH": "/usr/sbin:/sbin:/"}
    entrypoint: [ "/iptables-loop" ]
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}modules/{{ $.ModulePriority }}-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src
  stageDependencies:
    install:
    - '**/*'
shell:
  install:
  - cd /src
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
fromImage: builder/golang-alpine
final: false
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
{{ include "mount points for golang builds" . }}
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY)
  - cd /src
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /iptables-loop main.go
  - chmod 0700 /iptables-loop
