---
image: {{ $.ModuleName }}/{{ $.ImageName }}
fromImage: common/distroless
import:
- image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
  add: /
  to: /
  includePaths:
  - user-authz-webhook
  - healthcheck
  after: install
docker:
  ENTRYPOINT: ["/user-authz-webhook"]
---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}/modules/140-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src
  stageDependencies:
    install:
    - '**/*'
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-artifact
from: {{ $.Images.BASE_GOLANG_23_ALPINE }}
final: false
import:
- image: {{ .ModuleName }}/{{ $.ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - export GOPROXY={{ $.GOPROXY }} CGO_ENABLED=0 GOOS=linux GOARCH=amd64
  - cd /src
  - go test ./...
  - go build -ldflags="-s -w" -o /user-authz-webhook main.go
  - go build -ldflags="-s -w" -o /healthcheck ./cmd/healthcheck/main.go
  - chown -R 64535:64535 /user-authz-webhook /healthcheck
  - chmod 0755 /user-authz-webhook /healthcheck
